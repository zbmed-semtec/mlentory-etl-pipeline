version: "3.8" 

services:
  # Extractor service
  hf_extractor_with_gpu:
    profiles: [gpu]
    build: 
      context: .
      dockerfile: ./Extractors/HF_Extractor/Dockerfile.gpu  # Path to extractor Dockerfile
    # Define volumes to mount extractor scripts or dependencies
    volumes:
      - ./Extractors/HF_Extractor:/app
      - ./Transform_Queue:/Transform_Queue
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            capabilities: [gpu]
    dns:
      - 1.1.1.1
    # depends_on:
    #   - mysql
    # Uncomment this line to run the script
    # command: ["python3", "ExtractFromDataset.py"]
    # Uncomment this line to develop on the container
    command: ["tail", "-f", "/dev/null"]
  
  hf_extractor_with_no_gpu:
    profiles: [no_gpu]
    build: 
      context: .
      dockerfile: ./Extractors/HF_Extractor/Dockerfile.no_gpu  # Path to extractor Dockerfile
    # Define volumes to mount extractor scripts or dependencies
    volumes:
      - ./Extractors/HF_Extractor:/app
      - ./Transform_Queue:/Transform_Queue
    dns:
      - 1.1.1.1
    # depends_on:
    #   - mysql
    # Uncomment this line to test the script
    command: ["python3", "ExtractFromDataset.py"]
    # Uncomment this line to develop on the container
    # command: ["tail", "-f", "/dev/null"]

  transform:
    profiles:
      - gpu
      - no_gpu
    build: 
      context: .
      dockerfile: ./Transform/Dockerfile  # Path to extractor Dockerfile
    # Define volumes to mount extractor scripts or dependencies
    volumes:
      - ./Transform:/app
      - ./Transform_Queue:/Transform_Queue
    dns:
      - 1.1.1.1

    # Uncomment this line to test the script
    command: ["tail", "-f", "/dev/null"]
    # Uncomment for production
    #command: ["python3", "ExtractFromDataset.py"]

  test:
    profiles:
      - test
    build: 
      context: .
      dockerfile: ./Tests/Dockerfile  # Path to extractor Dockerfile
    # Define volumes to mount extractor scripts or dependencies
    volumes:
      - ./Tests:/app_test/Tests
      - ./Transform:/app_test/Transform
      - ./Extractors:/app_test/Extractors
      - ./Transform_Queue:/Transform_Queue
    dns:
      - 1.1.1.1

    # Uncomment this line to test the script
    command: ["tail", "-f", "/dev/null"]


  ci_test:
    profiles:
      - ci_test
    build: 
      context: .
      dockerfile: ./Tests/Dockerfile  # Path to extractor Dockerfile
    # Define volumes to mount extractor scripts or dependencies
    volumes:
      - ./Tests:/app_test/Tests
      - ./Transform:/app_test/Transform
      - ./Extractors:/app_test/Extractors
      - ./Transform_Queue:/Transform_Queue
    dns:
      - 1.1.1.1
    # command: ["./Tests/validate_tests.sh"]
    command: ["pytest"] 
    # command: ["tail", "-f", "/dev/null"]


  # mysql:
  #   image: mysql:latest
  #   environment:
  #     MYSQL_ROOT_PASSWORD: password123
  #     MYSQL_DATABASE: Extraction_Results
  #     MYSQL_USER: user
  #     MYSQL_PASSWORD: password123
  #   ports:
  #     - "3306:3306"
  # Transformer service
  # transformer:
  #   build: ./transformer  # Path to your transformer Dockerfile
  #   # Define volumes to mount transformation logic
  #   volumes:
  #     - ./transformer:/app/transformer  # Example volume mapping for transformation code
  #   depends_on:
  #     - extractor  # Wait for extractor to finish before starting transformer

  # Loader service
  # loader:
  #   build: ./loader  # Path to your loader Dockerfile
  #   # Optional: Define volumes for output data or database connection details
  #   volumes:
  #     - ./loader:/app/loader  # Example volume mapping for loader code
  #   depends_on:
  #     - transformer  # Wait for transformer to finish before starting loader

# networks:
#   my-macvlan-net:
#     external: true
#     name: my-macvlan-net
#   host:
#     external: true


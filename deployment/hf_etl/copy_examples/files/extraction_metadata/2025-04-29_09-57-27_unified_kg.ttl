@prefix ns1: <http://mlentory.zbmed.de/mlentory_graph/meta/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <https://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.443280"^^xsd:dateTime ;
    ns1:object "{'name': 'Anthony Hartshorn', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5565867722034454"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'private_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5862353444099426"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/DianaJin/sample> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/realwiz/noggles> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "pa"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4718196839094162"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.526035487651825"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.43363088369369507"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.678470"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/sircesoc"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ea5c52c0ba4305614a2132e3998c1bc735c574db3f8dd76dab1ede8aeef926a9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.465562"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4875175952911377"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.664592"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/746e796ec31ad9ad2b517555a4e91b2e3dfff187021fd0255aae50476624430d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Split to which the example belongs to."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.748153418302536"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Flan-T5 should not be applied for any unacceptable use cases, e.g., generation of abusive speech."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2025-04-15T13:06:21+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object """ClassLabel column 'difficulty' from the Hugging Face parquet file.
Labels:
UNKNOWN_DIFFICULTY (0), EASY (1), MEDIUM (2), HARD (3), HARDER (4), HARDEST (5), EXTERNAL (6), A (7), B (8), C (9), D (10), E (11), F (12), G (13), H (14), I (15), J (16), K (17), L (18), M (19), N (20), O (21), P (22), Q (23), R (24), S (25), T (26), U (27), V (28)"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/difficulty> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6061395108699799"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/e05dcf019c16b58ee18632feff8d896599b435fed50864784dfbbf57cfeb9f88> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.654901"^^xsd:dateTime ;
    ns1:object "Imageto Video"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7062dc4cfa463be9c92783a4d2c8abb9a4b37f71f4caef7c07cd6787e1843ed> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.689015"^^xsd:dateTime ;
    ns1:object "Core ML"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2ae536499f90e7e5edcd87dddf0d258801cae8e7a2f82d8ce02361ef54e77c05> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.432512"^^xsd:dateTime ;
    ns1:object "{'name': 'Yi Tay', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.445927"^^xsd:dateTime ;
    ns1:object "{'name': 'Xavier Martinet', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.647385"^^xsd:dateTime ;
    ns1:object "roberta"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bc69543009040d6e8dba73b201af25ed291f7933acca2056091eb5f643c4f919> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "lv"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/black-forest-labs/FLUX.1-dev-onnx/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.667707"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e2cb5f7dba65387f6ecd56e7a642d33df8fca1197b2ac918cd629a6cd9b294b2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.716433"^^xsd:dateTime ;
    ns1:object "legal"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0994690604942759c573cba9c9ac3ba7475a580bd342b27f75b529860f3a2715> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6546584963798523"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.676631"^^xsd:dateTime ;
    ns1:object "Library providing pretrained models for NLP and CV tasks, with implementations in PyTorch and TensorFlow."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "noggles"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.3564155101776123"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.398425"^^xsd:dateTime ;
    ns1:object "ml-agents"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/293ad034f899dc681b5be10c715f25c59fa7f5261f229b66d796246e10927354> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "my"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.292392"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5772828757762909"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-11-30T05:06:05+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "whisper-base.en"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "is"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.847743"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/main/split> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ta"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.658946"^^xsd:dateTime ;
    ns1:object "Text to 3D"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dc96ea445d125873bc02183accca8dffafbc58c6100167ef5b113919f5afb57e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "no"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.653827"^^xsd:dateTime ;
    ns1:object "emersoftware"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3686d15023ade4b08558f72e9dd33a5a134bb1bf2f4238ea9c93dc3ad883f8db> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.069394"^^xsd:dateTime ;
    ns1:object "rangapriyabatchu"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fc7cf57f062cb9e0d1e9d259e47e9f36b464ea9c455e880a85e25d6281fc3268> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.46383020281791687"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.653353"^^xsd:dateTime ;
    ns1:object "Assigns each pixel in an image to a specific class or object."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f4f5c02149ef4c63e1abfb237a7efd73b36b96243fa20ee9a3b83ab914689b18> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.46534912288188934"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7005455791950226"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Ethical Considerations and Limitations: Llama 2 is a new technology that carries risks with use. Testing conducted to date has been in English, and has not covered, nor could it cover all scenarios. For these reasons, as with all LLMs, Llama 2’s potential outputs cannot be predicted in advance, and the model may in some instances produce inaccurate, biased or other objectionable responses to user prompts. Therefore, before deploying any applications of Llama 2, developers should perform safety testing and tuning tailored to their specific applications of the model."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.458416"^^xsd:dateTime ;
    ns1:object "{'name': 'Thomas Dandres', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/black-forest-labs/FLUX.1-dev-onnx/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2022-09-26T06:58:29+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Splits for the main config."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:DianaJin/sample"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5530968308448792"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0c3d01ed44dc2940ae38707146a02c16bc80cc8637ce48ac5f3125b7c6fb2982> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/55bd15a0af8bef99be0b0832411b5afbbb83779bc0cd1795dffee7c3285baa1f> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.436972"^^xsd:dateTime ;
    ns1:object "{'name': 'Ed H. Chi', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.795715"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/realwiz"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/641cbecd8514780fd9d4a828b7583a3f538308d77bf6aa47fcff1594d0a5d746> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.678836"^^xsd:dateTime ;
    ns1:object "PEFT"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f83566aa690a65900e25f19b29d427ae3a9b752766d6d3892299a866feca3edd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.663018"^^xsd:dateTime ;
    ns1:object "Zero Shot Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79765e8db24271bde7a56b897b0b6c389d5be642563652aae56b6253290a801e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.687670"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3db362f2d160db0ec9efef6e48b6ba6fc466784d4fdf38393a2818c9c974f93e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "nl"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6430713534355164"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ar"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.3593048006296158"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The author of this content is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4996328800916672"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.660805"^^xsd:dateTime ;
    ns1:object "Categorizes text documents into predefined classes."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85f0e69a70ce025a206d6ddbf78d989a3cabbdae215f2045df9b67b21a9d6780> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.464166"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/97b8857097478874bd8e9cb141256c1acde4789374ce4d72be5580b0da08f403> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6596983373165131"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.48355525732040405"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/memory_limit_bytes"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/memory_limit_bytes> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4833269864320755"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/google/flan-t5-small> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.639743"^^xsd:dateTime ;
    ns1:object "Inference Endpoints"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df3db739a5d22c6a5829694aeecdedee4e20b5804f1345689c8abd3350883e54> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/63c4690edf3557f17b07f48296b33ccc383956a845d01233d59d9e359bf38c99> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.434253"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/cleanrl"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1287c3e8de674aa537460a43e7945dc0c75e59af087a9985f8c1291b24d4ffd6> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "ppo-SnowballTarget"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """<!DOCTYPE html>
<html class="" lang="en">
<head>
    <meta charset="utf-8" />
    <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, user-scalable=no"
    />
    <meta
            name="description"
            content="We're on a journey to advance and democratize artificial intelligence through open source and open science."
    />
    <meta property="fb:app_id" content="1321688464574422" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@huggingface" />
    <meta
            property="og:title"
            content="Hugging Face - The AI community building the future."
    />
    <meta property="og:type" content="website" />

    <title>Hugging Face - The AI community building the future.</title>
    <style>
        body {
            margin: 0;
        }

        main {
            background-color: white;
            min-height: 100vh;
            padding: 7rem 1rem 8rem 1rem;
            text-align: center;
            font-family: Source Sans Pro, ui-sans-serif, system-ui, -apple-system,
            BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans,
            sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol,
            Noto Color Emoji;
        }

        img {
            width: 6rem;
            height: 6rem;
            margin: 0 auto 1rem;
        }

        h1 {
            font-size: 3.75rem;
            line-height: 1;
            color: rgba(31, 41, 55, 1);
            font-weight: 700;
            box-sizing: border-box;
            margin: 0 auto;
        }

        p, a {
            color: rgba(107, 114, 128, 1);
            font-size: 1.125rem;
            line-height: 1.75rem;
            max-width: 28rem;
            box-sizing: border-box;
            margin: 0 auto;
        }

        .dark main {
            background-color: rgb(11, 15, 25);
        }
        .dark h1 {
            color: rgb(209, 213, 219);
        }
        .dark p, .dark a {
            color: rgb(156, 163, 175);
        }
    </style>
    <script>
        // On page load or when changing themes, best to add inline in `head` to avoid FOUC
        const key = "_tb_global_settings";
        let theme = window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        try {
            const storageTheme = JSON.parse(window.localStorage.getItem(key)).theme;
            if (storageTheme) {
                theme = storageTheme === "dark" ? "dark" : "light";
            }
        } catch (e) {}
        if (theme === "dark") {
            document.documentElement.classList.add("dark");
        } else {
            document.documentElement.classList.remove("dark");
        }
    </script>
</head>

<body>
<main>
    <img
            src="https://cdn-media.huggingface.co/assets/huggingface_logo.svg"
            alt=""
    />
    <div>
        <h1>429</h1>
        <p>We had to rate limit you. If you think it's an error, send us <a href="mailto:website@huggingface.co">an email</a></p>
    </div>
</main>
</body>
</html>"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5917679071426392"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The information provided does not contain the name of the secondary contributor to the CreativeWork."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.644903"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2f45196854d69c3bcc21304aceb64e2a3db2d17613399d7d3c7a21611573a4d5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.890214"^^xsd:dateTime ;
    ns1:object "vivos"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87e3b3dad52adc5c12d2dc386ce41da75f306c4b73d2d497aa9c5f22c6de6e87> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6634704768657684"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/2eed015d9e895e8b60342313a6cfbe043c4bf437cc445573c4bc85b9f950e449> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.815122"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "uk"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6946694850921631"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9773f8d647166503d14c7a05030b47d6b1610f17bdd55e8c98cb4fc2b13a3379> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.446244"^^xsd:dateTime ;
    ns1:object "{'name': 'Pushkar Mishra', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5191013664007187"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The model category is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.437291"^^xsd:dateTime ;
    ns1:object "{'name': 'Jacob Devlin', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.293641"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/djaym7/wiki_dialog"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9773f8d647166503d14c7a05030b47d6b1610f17bdd55e8c98cb4fc2b13a3379> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4846161752939224"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Split to which the example belongs to."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.866046"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/MLModel> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/223afdd384d0977fe2fa385fb4e5209cc141fbe57fdb0275078209001f9c2031> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.684791773557663"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The context provided does not contain information about the validated On."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.659673"^^xsd:dateTime ;
    ns1:object "Converts 2D images into 3D representations or models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fd4e2f28de7e36539eda0f2e74a9e9b30f10d77fee3b927dc3aa5419c43369da> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.725939"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/54e305dde447795b80481ad971eaf23195cddc3f5d2846c9ede5cc64115e586e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/untranslated_description> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'cf_tags' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_tags> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.893987"^^xsd:dateTime ;
    ns1:object "nguyenvulebinh"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e5ae71f534f4f5c975c2c63beec692769102bbc4cd162258b70098e86ed01040> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.663417"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dd477ce37bc2c08950a1d845aa243dff8c0e03de15cc42b9b35295d514538a84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-04-08T03:01:32+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5118981599807739"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.838200"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5554012060165405"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/83f6b13508bdbd7f513cbd6de7ef5170638d3e63612800f251838bd8e03c995e> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.451085"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2312.15503"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6440613865852356"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.48971623182296753"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.666894"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5f8c97c4aaca5a8c6afac1954a68be2dcb40698e64871f37e5fe5dc5849a3aab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/key> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5178365707397461"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "test-mistral-7b"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5453281402587891"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.41955219209194183"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The version of the CreativeWork embodied by a specified resource is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7286122441291809"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.409887433052063"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5033855736255646"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
tags:
- UpNDown-v5
- deep-reinforcement-learning
- reinforcement-learning
- custom-implementation
library_name: cleanrl
model-index:
- name: PPO
  results:
  - task:
      type: reinforcement-learning
      name: reinforcement-learning
    dataset:
      name: UpNDown-v5
      type: UpNDown-v5
    metrics:
    - type: mean_reward
      value: 358322.00 +/- 6289.19
      name: mean_reward
      verified: false
---

# (CleanRL) **PPO** Agent Playing **UpNDown-v5**

This is a trained model of a PPO agent playing UpNDown-v5.
The model was trained by using [CleanRL](https://github.com/vwxyzjn/cleanrl) and the most up-to-date training code can be
found [here](https://github.com/vwxyzjn/cleanrl/blob/master/cleanrl/cleanba_ppo_envpool_machado_atari_wrapper.py).

## Get Started

To use this model, please install the `cleanrl` package with the following command:

```
pip install "cleanrl[jax,envpool,atari]"
python -m cleanrl_utils.enjoy --exp-name cleanba_ppo_envpool_machado_atari_wrapper --env-id UpNDown-v5
```

Please refer to the [documentation](https://docs.cleanrl.dev/get-started/zoo/) for more detail.


## Command to reproduce the training

```bash
curl -OL https://huggingface.co/cleanrl/UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1/raw/main/cleanba_ppo_envpool_machado_atari_wrapper.py
curl -OL https://huggingface.co/cleanrl/UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1/raw/main/pyproject.toml
curl -OL https://huggingface.co/cleanrl/UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1/raw/main/poetry.lock
poetry install --all-extras
python cleanba_ppo_envpool_machado_atari_wrapper.py --distributed --learner-device-ids 1 2 3 --track --wandb-project-name cleanba --save-model --upload-model --hf-entity cleanrl --env-id UpNDown-v5 --seed 1
```

# Hyperparameters
```python
{'actor_device_ids': [0],
 'actor_devices': ['gpu:0'],
 'anneal_lr': True,
 'async_batch_size': 20,
 'async_update': 3,
 'batch_size': 15360,
 'capture_video': False,
 'clip_coef': 0.1,
 'concurrency': True,
 'cuda': True,
 'distributed': True,
 'ent_coef': 0.01,
 'env_id': 'UpNDown-v5',
 'exp_name': 'cleanba_ppo_envpool_machado_atari_wrapper',
 'gae_lambda': 0.95,
 'gamma': 0.99,
 'global_learner_decices': ['gpu:1',
                            'gpu:2',
                            'gpu:3',
                            'gpu:5',
                            'gpu:6',
                            'gpu:7'],
 'hf_entity': 'cleanrl',
 'learner_device_ids': [1, 2, 3],
 'learner_devices': ['gpu:1', 'gpu:2', 'gpu:3'],
 'learning_rate': 0.00025,
 'local_batch_size': 7680,
 'local_minibatch_size': 1920,
 'local_num_envs': 60,
 'local_rank': 0,
 'max_grad_norm': 0.5,
 'minibatch_size': 3840,
 'norm_adv': True,
 'num_envs': 120,
 'num_minibatches': 4,
 'num_steps': 128,
 'num_updates': 3255,
 'profile': False,
 'save_model': True,
 'seed': 1,
 'target_kl': None,
 'test_actor_learner_throughput': False,
 'torch_deterministic': True,
 'total_timesteps': 50000000,
 'track': True,
 'update_epochs': 4,
 'upload_model': True,
 'vf_coef': 0.5,
 'wandb_entity': None,
 'wandb_project_name': 'cleanba',
 'world_size': 2}
```
    """^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5617948472499847"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.809437"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d462b48c96b732d754a938aa86dbd16bfb7478ca5b0c1f1f006c611c112094e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'annotation' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/annotation> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "fa"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/abstract> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.31918345391750336"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6336745321750641"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5575516521930695"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The information provided does not contain the name of the contributor."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6515412032604218"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The intended use of the Mistral-7B-Instruct-v0.2 model is not explicitly stated in the given context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/private_tests"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5750193893909454"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4326549619436264"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.693619"^^xsd:dateTime ;
    ns1:object "speechbrain"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d6f86ddd52b22c26a6970ea3473a2f8e657e9600a3cea6dd33e7307bf848d475> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "km"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5382890105247498"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6636631488800049"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6515145599842072"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.463284"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "arxiv:1910.09700"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/meta-llama/Llama-2-7b-hf> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.917780"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c03090b68b1e45d6bebe9b9d1ea103b6a4c064ceb71f16f08a5ae59d9bac70e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/topic> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/kategaranina/lt2t_lf_to_text/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.434124"^^xsd:dateTime ;
    ns1:object "{'name': 'Xinyun Chen', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.271009"^^xsd:dateTime ;
    ns1:object "lachiewyoung"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f5a6a15b057055acaed46aabd835cf3eb56fa2343723cec43da3298c6a298537> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.443775"^^xsd:dateTime ;
    ns1:object "{'name': 'Hakan Inan', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/cleanrl/UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.451939"^^xsd:dateTime ;
    ns1:object "{'name': 'Zheng Liu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.448214"^^xsd:dateTime ;
    ns1:object "{'name': 'Binh Tang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.889722"^^xsd:dateTime ;
    ns1:object "vlsp"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5084bd7d1db13fba7c75464ccc31553c091b418df6b730d960b1d807a5d133db> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/generated_tests"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "arxiv:2311.13534"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/a7eca72cd0a3a0ce30e3b37b299034e8cf2e3b921a7deaf54545b7d00e88c5e4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5138795375823975"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.641354"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/86f52aa6369c70ec009cd27198c0d2e52782b473507c01a7426d4c1bf4185e05> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "lo"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6192722320556641"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4335189014673233"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/topic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/nid> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6928895115852356"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7041769921779633"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.701027"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ee41d767ffa75d0037ac340fa59164645b363ea8891e2a3f815c644b81ea9fbd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.674111"^^xsd:dateTime ;
    ns1:object "Graph Machine Learning"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b47d8ed02d0fc1a7d72d5d61255296300a82f2caa55dd809c63448bfdd9b4284> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "arxiv:2310.07554"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6003443002700806"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.691744"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6bffbd25ee4f19a8e55b6c7f32040744865e1e7d74080964d19fac6f207948c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "adapterhub:rc/multirc"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Boolean ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/is_description_translated> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.454466"^^xsd:dateTime ;
    ns1:object "C-Pack: Packed Resources For General Chinese Embeddings"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4966681897640228"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.638788104057312"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/nanos> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6726144552230835"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6460200846195221"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.404916"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "wav2vec2-base-vietnamese-250h"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
language:
- en
license: other
license_name: flux-1-dev-non-commercial-license
license_link: LICENSE.md
extra_gated_prompt: By clicking "Agree", you agree to the [FluxDev Non-Commercial
  License Agreement](https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md)
  and acknowledge the [Acceptable Use Policy](https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/POLICY.md).
tags:
- text-to-image
- image-generation
- flux
---

![FLUX.1 [dev] Grid](./dev_grid.jpg)

`FLUX.1 [dev]` is a 12 billion parameter rectified flow transformer capable of generating images from text descriptions.
For more information, please read our [blog post](https://blackforestlabs.ai/announcing-black-forest-labs/).

# Key Features
1. Cutting-edge output quality, second only to our state-of-the-art model `FLUX.1 [pro]`.
2. Competitive prompt following, matching the performance of closed source alternatives .
3. Trained using guidance distillation, making `FLUX.1 [dev]` more efficient.
4. Open weights to drive new scientific research, and empower artists to develop innovative workflows.
5. Generated outputs can be used for personal, scientific, and commercial purposes as described in the [`FLUX.1 [dev]` Non-Commercial License](https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md).

# Usage
We provide a reference implementation of `FLUX.1 [dev]`, as well as sampling code, in a dedicated [github repository](https://github.com/black-forest-labs/flux).
Developers and creatives looking to build on top of `FLUX.1 [dev]` are encouraged to use this as a starting point.

## API Endpoints
The FLUX.1 models are also available via API from the following sources
- [bfl.ml](https://docs.bfl.ml/) (currently `FLUX.1 [pro]`)
- [replicate.com](https://replicate.com/collections/flux)
- [fal.ai](https://fal.ai/models/fal-ai/flux/dev)
- [mystic.ai](https://www.mystic.ai/black-forest-labs/flux1-dev)

## ComfyUI
`FLUX.1 [dev]` is also available in [Comfy UI](https://github.com/comfyanonymous/ComfyUI) for local inference with a node-based workflow.

## Diffusers

To use `FLUX.1 [dev]` with the 🧨 diffusers python library, first install or upgrade diffusers

```shell
pip install -U diffusers
```

Then you can use `FluxPipeline` to run the model

```python
import torch
from diffusers import FluxPipeline

pipe = FluxPipeline.from_pretrained("black-forest-labs/FLUX.1-dev", torch_dtype=torch.bfloat16)
pipe.enable_model_cpu_offload() #save some VRAM by offloading the model to CPU. Remove this if you have enough GPU power

prompt = "A cat holding a sign that says hello world"
image = pipe(
    prompt,
    height=1024,
    width=1024,
    guidance_scale=3.5,
    num_inference_steps=50,
    max_sequence_length=512,
    generator=torch.Generator("cpu").manual_seed(0)
).images[0]
image.save("flux-dev.png")
```

To learn more check out the [diffusers](https://huggingface.co/docs/diffusers/main/en/api/pipelines/flux) documentation

---
# Limitations
- This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.

# Out-of-Scope Use
The model and its derivatives may not be used

- In any way that violates any applicable national, federal, state, local or international law or regulation.
- For the purpose of exploiting, harming or attempting to exploit or harm minors in any way; including but not limited to the solicitation, creation, acquisition, or dissemination of child exploitative content.
- To generate or disseminate verifiably false information and/or content with the purpose of harming others.
- To generate or disseminate personal identifiable information that can be used to harm an individual.
- To harass, abuse, threaten, stalk, or bully individuals or groups of individuals.
- To create non-consensual nudity or illegal pornographic content.
- For fully automated decision making that adversely impacts an individual's legal rights or otherwise creates or modifies a binding, enforceable obligation.
- Generating or facilitating large-scale disinformation campaigns.

# License
This model falls under the [`FLUX.1 [dev]` Non-Commercial License](https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md)."""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/AdapterHub/bert-base-uncased-pf-multirc/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
language:
- en
- zh
- de
- es
- ru
- ko
- fr
- ja
- pt
- tr
- pl
- ca
- nl
- ar
- sv
- it
- id
- hi
- fi
- vi
- he
- uk
- el
- ms
- cs
- ro
- da
- hu
- ta
- false
- th
- ur
- hr
- bg
- lt
- la
- mi
- ml
- cy
- sk
- te
- fa
- lv
- bn
- sr
- az
- sl
- kn
- et
- mk
- br
- eu
- is
- hy
- ne
- mn
- bs
- kk
- sq
- sw
- gl
- mr
- pa
- si
- km
- sn
- yo
- so
- af
- oc
- ka
- be
- tg
- sd
- gu
- am
- yi
- lo
- uz
- fo
- ht
- ps
- tk
- nn
- mt
- sa
- lb
- my
- bo
- tl
- mg
- as
- tt
- haw
- ln
- ha
- ba
- jw
- su
tags:
- audio
- automatic-speech-recognition
- hf-asr-leaderboard
widget:
- example_title: Librispeech sample 1
  src: https://cdn-media.huggingface.co/speech_samples/sample1.flac
- example_title: Librispeech sample 2
  src: https://cdn-media.huggingface.co/speech_samples/sample2.flac
pipeline_tag: automatic-speech-recognition
license: apache-2.0
model-index:
- name: whisper-base
  results:
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (clean)
      type: librispeech_asr
      config: clean
      split: test
      args:
        language: en
    metrics:
    - type: wer
      value: 5.008769117619326
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (other)
      type: librispeech_asr
      config: other
      split: test
      args:
        language: en
    metrics:
    - type: wer
      value: 12.84936273212057
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: Common Voice 11.0
      type: mozilla-foundation/common_voice_11_0
      config: hi
      split: test
      args:
        language: hi
    metrics:
    - type: wer
      value: 131
      name: Test WER
---

# Whisper

Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains **without** the need 
for fine-tuning.

Whisper was proposed in the paper [Robust Speech Recognition via Large-Scale Weak Supervision](https://arxiv.org/abs/2212.04356) 
by Alec Radford et al from OpenAI. The original code repository can be found [here](https://github.com/openai/whisper).

**Disclaimer**: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.

## Model details

Whisper is a Transformer based encoder-decoder model, also referred to as a _sequence-to-sequence_ model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. 

The models were trained on either English-only data or multilingual data. The English-only models were trained 
on the task of speech recognition. The multilingual models were trained on both speech recognition and speech 
translation. For speech recognition, the model predicts transcriptions in the *same* language as the audio. 
For speech translation, the model predicts transcriptions to a *different* language to the audio.

Whisper checkpoints come in five configurations of varying model sizes.
The smallest four are trained on either English-only or multilingual data.
The largest checkpoints are multilingual only. All ten of the pre-trained checkpoints 
are available on the [Hugging Face Hub](https://huggingface.co/models?search=openai/whisper). The 
checkpoints are summarised in the following table with links to the models on the Hub:

| Size     | Parameters | English-only                                         | Multilingual                                        |
|----------|------------|------------------------------------------------------|-----------------------------------------------------|
| tiny     | 39 M       | [✓](https://huggingface.co/openai/whisper-tiny.en)   | [✓](https://huggingface.co/openai/whisper-tiny)     |
| base     | 74 M       | [✓](https://huggingface.co/openai/whisper-base.en)   | [✓](https://huggingface.co/openai/whisper-base)     |
| small    | 244 M      | [✓](https://huggingface.co/openai/whisper-small.en)  | [✓](https://huggingface.co/openai/whisper-small)    |
| medium   | 769 M      | [✓](https://huggingface.co/openai/whisper-medium.en) | [✓](https://huggingface.co/openai/whisper-medium)   |
| large    | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large)    |
| large-v2 | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large-v2) |

# Usage

To transcribe audio samples, the model has to be used alongside a [`WhisperProcessor`](https://huggingface.co/docs/transformers/model_doc/whisper#transformers.WhisperProcessor).

The `WhisperProcessor` is used to:
1. Pre-process the audio inputs (converting them to log-Mel spectrograms for the model)
2. Post-process the model outputs (converting them from tokens to text)

The model is informed of which task to perform (transcription or translation) by passing the appropriate "context tokens". These context tokens 
are a sequence of tokens that are given to the decoder at the start of the decoding process, and take the following order:
1. The transcription always starts with the `<|startoftranscript|>` token
2. The second token is the language token (e.g. `<|en|>` for English)
3. The third token is the "task token". It can take one of two values: `<|transcribe|>` for speech recognition or `<|translate|>` for speech translation
4. In addition, a `<|notimestamps|>` token is added if the model should not include timestamp prediction

Thus, a typical sequence of context tokens might look as follows:
```
<|startoftranscript|> <|en|> <|transcribe|> <|notimestamps|>
```
Which tells the model to decode in English, under the task of speech recognition, and not to predict timestamps.

These tokens can either be forced or un-forced. If they are forced, the model is made to predict each token at 
each position. This allows one to control the output language and task for the Whisper model. If they are un-forced, 
the Whisper model will automatically predict the output langauge and task itself.

The context tokens can be set accordingly:

```python
model.config.forced_decoder_ids = WhisperProcessor.get_decoder_prompt_ids(language="english", task="transcribe")
```

Which forces the model to predict in English under the task of speech recognition.

## Transcription

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base")
>>> model.config.forced_decoder_ids = None

>>> # load dummy dataset and read audio files
>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]
>>> input_features = processor(sample["array"], sampling_rate=sample["sampling_rate"], return_tensors="pt").input_features 

>>> # generate token ids
>>> predicted_ids = model.generate(input_features)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=False)
['<|startoftranscript|><|en|><|transcribe|><|notimestamps|> Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.<|endoftext|>']

>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.']
```
The context tokens can be removed from the start of the transcription by setting `skip_special_tokens=True`.

### French to French 
The following example demonstrates French to French transcription by setting the decoder ids appropriately. 

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import Audio, load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base")
>>> forced_decoder_ids = processor.get_decoder_prompt_ids(language="french", task="transcribe")

>>> # load streaming dataset and read first audio sample
>>> ds = load_dataset("common_voice", "fr", split="test", streaming=True)
>>> ds = ds.cast_column("audio", Audio(sampling_rate=16_000))
>>> input_speech = next(iter(ds))["audio"]
>>> input_features = processor(input_speech["array"], sampling_rate=input_speech["sampling_rate"], return_tensors="pt").input_features

>>> # generate token ids
>>> predicted_ids = model.generate(input_features, forced_decoder_ids=forced_decoder_ids)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids)
['<|startoftranscript|><|fr|><|transcribe|><|notimestamps|> Un vrai travail intéressant va enfin être mené sur ce sujet.<|endoftext|>']

>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' Un vrai travail intéressant va enfin être mené sur ce sujet.']
```

## Translation 
Setting the task to "translate" forces the Whisper model to perform speech translation.

### French to English

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import Audio, load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base")
>>> forced_decoder_ids = processor.get_decoder_prompt_ids(language="french", task="translate")

>>> # load streaming dataset and read first audio sample
>>> ds = load_dataset("common_voice", "fr", split="test", streaming=True)
>>> ds = ds.cast_column("audio", Audio(sampling_rate=16_000))
>>> input_speech = next(iter(ds))["audio"]
>>> input_features = processor(input_speech["array"], sampling_rate=input_speech["sampling_rate"], return_tensors="pt").input_features

>>> # generate token ids
>>> predicted_ids = model.generate(input_features, forced_decoder_ids=forced_decoder_ids)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' A very interesting work, we will finally be given on this subject.']
```

## Evaluation

This code snippet shows how to evaluate Whisper Base on [LibriSpeech test-clean](https://huggingface.co/datasets/librispeech_asr):
 
```python
>>> from datasets import load_dataset
>>> from transformers import WhisperForConditionalGeneration, WhisperProcessor
>>> import torch
>>> from evaluate import load

>>> librispeech_test_clean = load_dataset("librispeech_asr", "clean", split="test")

>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base").to("cuda")

>>> def map_to_pred(batch):
>>>     audio = batch["audio"]
>>>     input_features = processor(audio["array"], sampling_rate=audio["sampling_rate"], return_tensors="pt").input_features
>>>     batch["reference"] = processor.tokenizer._normalize(batch['text'])
>>> 
>>>     with torch.no_grad():
>>>         predicted_ids = model.generate(input_features.to("cuda"))[0]
>>>     transcription = processor.decode(predicted_ids)
>>>     batch["prediction"] = processor.tokenizer._normalize(transcription)
>>>     return batch

>>> result = librispeech_test_clean.map(map_to_pred)

>>> wer = load("wer")
>>> print(100 * wer.compute(references=result["reference"], predictions=result["prediction"]))
5.082316555716899
```

## Long-Form Transcription

The Whisper model is intrinsically designed to work on audio samples of up to 30s in duration. However, by using a chunking 
algorithm, it can be used to transcribe audio samples of up to arbitrary length. This is possible through Transformers 
[`pipeline`](https://huggingface.co/docs/transformers/main_classes/pipelines#transformers.AutomaticSpeechRecognitionPipeline) 
method. Chunking is enabled by setting `chunk_length_s=30` when instantiating the pipeline. With chunking enabled, the pipeline 
can be run with batched inference. It can also be extended to predict sequence level timestamps by passing `return_timestamps=True`:

```python
>>> import torch
>>> from transformers import pipeline
>>> from datasets import load_dataset

>>> device = "cuda:0" if torch.cuda.is_available() else "cpu"

>>> pipe = pipeline(
>>>   "automatic-speech-recognition",
>>>   model="openai/whisper-base",
>>>   chunk_length_s=30,
>>>   device=device,
>>> )

>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]

>>> prediction = pipe(sample.copy(), batch_size=8)["text"]
" Mr. Quilter is the apostle of the middle classes, and we are glad to welcome his gospel."

>>> # we can also return timestamps for the predictions
>>> prediction = pipe(sample.copy(), batch_size=8, return_timestamps=True)["chunks"]
[{'text': ' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.',
  'timestamp': (0.0, 5.44)}]
```

Refer to the blog post [ASR Chunking](https://huggingface.co/blog/asr-chunking) for more details on the chunking algorithm.

## Fine-Tuning

The pre-trained Whisper model demonstrates a strong ability to generalise to different datasets and domains. However, 
its predictive capabilities can be improved further for certain languages and tasks through *fine-tuning*. The blog 
post [Fine-Tune Whisper with 🤗 Transformers](https://huggingface.co/blog/fine-tune-whisper) provides a step-by-step 
guide to fine-tuning the Whisper model with as little as 5 hours of labelled data.

### Evaluated Use

The primary intended users of these models are AI researchers studying robustness, generalization, capabilities, biases, and constraints of the current model. However, Whisper is also potentially quite useful as an ASR solution for developers, especially for English speech recognition. We recognize that once models are released, it is impossible to restrict access to only “intended” uses or to draw reasonable guidelines around what is or is not research.

The models are primarily trained and evaluated on ASR and speech translation to English tasks. They show strong ASR results in ~10 languages. They may exhibit additional capabilities, particularly if fine-tuned on certain tasks like voice activity detection, speaker classification, or speaker diarization but have not been robustly evaluated in these areas. We strongly recommend that users perform robust evaluations of the models in a particular context and domain before deploying them.

In particular, we caution against using Whisper models to transcribe recordings of individuals taken without their consent or purporting to use these models for any kind of subjective classification. We recommend against use in high-risk domains like decision-making contexts, where flaws in accuracy can lead to pronounced flaws in outcomes. The models are intended to transcribe and translate speech, use of the model for classification is not only not evaluated but also not appropriate, particularly to infer human attributes.


## Training Data

The models are trained on 680,000 hours of audio and the corresponding transcripts collected from the internet. 65% of this data (or 438,000 hours) represents English-language audio and matched English transcripts, roughly 18% (or 126,000 hours) represents non-English audio and English transcripts, while the final 17% (or 117,000 hours) represents non-English audio and the corresponding transcript. This non-English data represents 98 different languages. 

As discussed in [the accompanying paper](https://cdn.openai.com/papers/whisper.pdf), we see that performance on transcription in a given language is directly correlated with the amount of training data we employ in that language.


## Performance and Limitations

Our studies show that, over many existing ASR systems, the models exhibit improved robustness to accents, background noise, technical language, as well as zero shot translation from multiple languages into English; and that accuracy on speech recognition and translation is near the state-of-the-art level. 

However, because the models are trained in a weakly supervised manner using large-scale noisy data, the predictions may include texts that are not actually spoken in the audio input (i.e. hallucination). We hypothesize that this happens because, given their general knowledge of language, the models combine trying to predict the next word in audio with trying to transcribe the audio itself.

Our models perform unevenly across languages, and we observe lower accuracy on low-resource and/or low-discoverability languages or languages where we have less training data. The models also exhibit disparate performance on different accents and dialects of particular languages, which may include higher word error rate across speakers of different genders, races, ages, or other demographic criteria. Our full evaluation results are presented in [the paper accompanying this release](https://cdn.openai.com/papers/whisper.pdf). 

In addition, the sequence-to-sequence architecture of the model makes it prone to generating repetitive texts, which can be mitigated to some degree by beam search and temperature scheduling but not perfectly. Further analysis on these limitations are provided in [the paper](https://cdn.openai.com/papers/whisper.pdf). It is likely that this behavior and hallucinations may be worse on lower-resource and/or lower-discoverability languages.


## Broader Implications

We anticipate that Whisper models’ transcription capabilities may be used for improving accessibility tools. While Whisper models cannot be used for real-time transcription out of the box – their speed and size suggest that others may be able to build applications on top of them that allow for near-real-time speech recognition and translation. The real value of beneficial applications built on top of Whisper models suggests that the disparate performance of these models may have real economic implications.

There are also potential dual use concerns that come with releasing Whisper. While we hope the technology will be used primarily for beneficial purposes, making ASR technology more accessible could enable more actors to build capable surveillance technologies or scale up existing surveillance efforts, as the speed and accuracy allow for affordable automatic transcription and translation of large volumes of audio communication. Moreover, these models may have some capabilities to recognize specific individuals out of the box, which in turn presents safety concerns related both to dual use and disparate performance. In practice, we expect that the cost of transcription is not the limiting factor of scaling up surveillance projects.


### BibTeX entry and citation info
```bibtex
@misc{radford2022whisper,
  doi = {10.48550/ARXIV.2212.04356},
  url = {https://arxiv.org/abs/2212.04356},
  author = {Radford, Alec and Kim, Jong Wook and Xu, Tao and Brockman, Greg and McLeavey, Christine and Sutskever, Ilya},
  title = {Robust Speech Recognition via Large-Scale Weak Supervision},
  publisher = {arXiv},
  year = {2022},
  copyright = {arXiv.org perpetual, non-exclusive license}
}
```
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.691328"^^xsd:dateTime ;
    ns1:object "BERTopic"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/316fd1b6c56f67729f7e0880d91953804a9af869ce76b2906f26f3d534937931> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5177810192108154"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object """The software requirements for the wav2vec2-base-demo-aug model are as follows:

- Transformers 4.33.0.dev0
- Pytorch 2.0.0
- Datasets 2.14.4.dev0
- Tokenizers 0.13.3

These software dependencies are listed in the "Training procedure > Framework versions" section of the text."""^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6175175905227661"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6972346305847168"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.679239"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a3c9ca93ab7ec29d067dd25733037f174c1326ef487292e5e1c9eea5cb35feb1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.692884"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a0e0c1ddbfc3fa3aaab6bbd4ee4022410d9adc63e05996f59a545a7929aaf019> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.428965"^^xsd:dateTime ;
    ns1:object """The pre-trained language models are continually fine-tuned to better support
downstream applications. However, this operation may result in significant
performance degeneration on general tasks beyond the targeted domain. To
overcome this problem, we propose LM-Cocktail which enables the fine-tuned
model to stay resilient in general perspectives. Our method is conducted in the
form of model merging, where the fine-tuned language model is merged with the
pre-trained base model or the peer models from other domains through weighted
average. Despite simplicity, LM-Cocktail is surprisingly effective: the
resulted model is able to achieve a strong empirical performance in the whole
scope of general tasks while preserving a superior capacity in its targeted
domain. We conduct comprehensive experiments with LLama and BGE model on
popular benchmarks, including FLAN, MMLU, MTEB, whose results validate the
efficacy of our proposed method. The code and checkpoints are available at
https://github.com/FlagOpen/FlagEmbedding/tree/master/LM_Cocktail."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/table_cont"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/table_cont> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/JabrilJacobs/ppo-Pyramids"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "mi"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.448056"^^xsd:dateTime ;
    ns1:object "{'name': 'Xiaoqing Ellen Tan', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.682542"^^xsd:dateTime ;
    ns1:object "High-level neural networks API, designed for human beings, not machines, focusing on enabling fast experimentation."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a225e69a17f4be8c51cc1f1852c40371a478cfa95661008284bc676564a876e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.772173"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/kategaranina"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/83d2ad9ecbe1efe91b88526c0d0a22b67ee3915db215cf33f6f7ef1357cd6573> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.869190"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1a739b1d688a026015aadad9a1aca9a5ddbaa3e48938daa52442b0c8fc0fd0ba> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2024-07-31T21:13:44+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "apache-2.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'wiki' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/wiki> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/main_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.457423"^^xsd:dateTime ;
    ns1:object "2019-10-21"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-09-12T05:22:11+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6891668736934662"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.373745"^^xsd:dateTime ;
    ns1:object "automatic-speech-recognition"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/07456871ec04ff7e102a14a63ee4f77775baadaf5e404b74e2ab827a14335259> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.48908644914627075"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/29d9051dd7490ee997ef15f45bf916274706268eab63f2c7bff767388d51cf25> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.648515"^^xsd:dateTime ;
    ns1:object "llama"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "kn"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4427180141210556"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the processor requirements for the application."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'question' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/cleanrl/UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.649835079908371"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.810272"^^xsd:dateTime ;
    ns1:object "lora"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0b6c077d0e7e512fe4a09f8d65944ef93c47c0c822ba512f9d69a0205fbc4e04> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/venetis/bert-base-uncased-finetuned-3d-sentiment> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.47000788152217865"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.645075"^^xsd:dateTime ;
    ns1:object "Carbon Emissions"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2f45196854d69c3bcc21304aceb64e2a3db2d17613399d7d3c7a21611573a4d5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.646582"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0c3d01ed44dc2940ae38707146a02c16bc80cc8637ce48ac5f3125b7c6fb2982> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.922349"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2307.09288"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized/question> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/a5061996452e34a05d1c80cf537e1e6a64a7e72a60ffcf719ce25f5d6b4306ed> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ht"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/746e796ec31ad9ad2b517555a4e91b2e3dfff187021fd0255aae50476624430d> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.883327"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a5061996452e34a05d1c80cf537e1e6a64a7e72a60ffcf719ce25f5d6b4306ed> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
language: 
- en
- fr
- ro
- de
- multilingual

tags:
- text2text-generation

widget:
- text: "Translate to German:  My name is Arthur"
  example_title: "Translation"
- text: "Please answer to the following question. Who is going to be the next Ballon d'or?"
  example_title: "Question Answering"
- text: "Q: Can Geoffrey Hinton have a conversation with George Washington? Give the rationale before answering."
  example_title: "Logical reasoning"
- text: "Please answer the following question. What is the boiling point of Nitrogen?"
  example_title: "Scientific knowledge"
- text: "Answer the following yes/no question. Can you write a whole Haiku in a single tweet?"
  example_title: "Yes/no question"
- text: "Answer the following yes/no question by reasoning step-by-step. Can you write a whole Haiku in a single tweet?"
  example_title: "Reasoning task"
- text: "Q: ( False or not False or False ) is? A: Let's think step by step"
  example_title: "Boolean Expressions"
- text: "The square root of x is the cube root of y. What is y to the power of 2, if x = 4?"
  example_title: "Math reasoning"
- text: "Premise:  At my age you will probably have learnt one lesson. Hypothesis:  It's not certain how many lessons you'll learn by your thirties. Does the premise entail the hypothesis?"
  example_title: "Premise and hypothesis"

datasets:
- svakulenk0/qrecc
- taskmaster2
- djaym7/wiki_dialog
- deepmind/code_contests
- lambada
- gsm8k
- aqua_rat
- esnli
- quasc
- qed


license: apache-2.0
---

# Model Card for FLAN-T5 small

<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/transformers/model_doc/flan2_architecture.jpg"
alt="drawing" width="600"/>

#  Table of Contents

0. [TL;DR](#TL;DR)
1. [Model Details](#model-details)
2. [Usage](#usage)
3. [Uses](#uses)
4. [Bias, Risks, and Limitations](#bias-risks-and-limitations)
5. [Training Details](#training-details)
6. [Evaluation](#evaluation)
7. [Environmental Impact](#environmental-impact)
8. [Citation](#citation)
9. [Model Card Authors](#model-card-authors)

# TL;DR

If you already know T5, FLAN-T5 is just better at everything. For the same number of parameters, these models have been fine-tuned on more than 1000 additional tasks covering also more languages. 
As mentioned in the first few lines of the abstract : 
>  Flan-PaLM 540B achieves state-of-the-art performance on several benchmarks, such as 75.2% on five-shot MMLU. We also publicly release Flan-T5 checkpoints,1 which achieve strong few-shot performance even compared to much larger models, such as PaLM 62B. Overall, instruction finetuning is a general method for improving the performance and usability of pretrained language models.

**Disclaimer**: Content from **this** model card has been written by the Hugging Face team, and parts of it were copy pasted from the [T5 model card](https://huggingface.co/t5-large).

# Model Details

## Model Description


- **Model type:** Language model
- **Language(s) (NLP):** English, Spanish, Japanese, Persian, Hindi, French, Chinese, Bengali, Gujarati, German, Telugu, Italian, Arabic, Polish, Tamil, Marathi, Malayalam, Oriya, Panjabi, Portuguese, Urdu, Galician, Hebrew, Korean, Catalan, Thai, Dutch, Indonesian, Vietnamese, Bulgarian, Filipino, Central Khmer, Lao, Turkish, Russian, Croatian, Swedish, Yoruba, Kurdish, Burmese, Malay, Czech, Finnish, Somali, Tagalog, Swahili, Sinhala, Kannada, Zhuang, Igbo, Xhosa, Romanian, Haitian, Estonian, Slovak, Lithuanian, Greek, Nepali, Assamese, Norwegian
- **License:** Apache 2.0
- **Related Models:** [All FLAN-T5 Checkpoints](https://huggingface.co/models?search=flan-t5)
- **Original Checkpoints:** [All Original FLAN-T5 Checkpoints](https://github.com/google-research/t5x/blob/main/docs/models.md#flan-t5-checkpoints)
- **Resources for more information:**
  - [Research paper](https://arxiv.org/pdf/2210.11416.pdf)
  - [GitHub Repo](https://github.com/google-research/t5x)
  - [Hugging Face FLAN-T5 Docs (Similar to T5) ](https://huggingface.co/docs/transformers/model_doc/t5)

# Usage

Find below some example scripts on how to use the model in `transformers`:

## Using the Pytorch model

### Running the model on a CPU

<details>
<summary> Click to expand </summary>

```python

from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small")

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

### Running the model on a GPU

<details>
<summary> Click to expand </summary>

```python
# pip install accelerate
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small", device_map="auto")

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids.to("cuda")

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

### Running the model on a GPU using different precisions

#### FP16

<details>
<summary> Click to expand </summary>

```python
# pip install accelerate
import torch
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small", device_map="auto", torch_dtype=torch.float16)

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids.to("cuda")

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

#### INT8

<details>
<summary> Click to expand </summary>

```python
# pip install bitsandbytes accelerate
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small", device_map="auto", load_in_8bit=True)

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids.to("cuda")

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

# Uses

## Direct Use and Downstream Use

The authors write in [the original paper's model card](https://arxiv.org/pdf/2210.11416.pdf) that: 

> The primary use is research on language models, including: research on zero-shot NLP tasks and in-context few-shot learning NLP tasks, such as reasoning, and question answering; advancing fairness and safety research, and understanding limitations of current large language models

See the [research paper](https://arxiv.org/pdf/2210.11416.pdf) for further details.

## Out-of-Scope Use

More information needed.

# Bias, Risks, and Limitations

The information below in this section are copied from the model's [official model card](https://arxiv.org/pdf/2210.11416.pdf):

> Language models, including Flan-T5, can potentially be used for language generation in a harmful way, according to Rae et al. (2021). Flan-T5 should not be used directly in any application, without a prior assessment of safety and fairness concerns specific to the application.

## Ethical considerations and risks

> Flan-T5 is fine-tuned on a large corpus of text data that was not filtered for explicit content or assessed for existing biases. As a result the model itself is potentially vulnerable to generating equivalently inappropriate content or replicating inherent biases in the underlying data.

## Known Limitations

> Flan-T5 has not been tested in real world applications.

## Sensitive Use:

> Flan-T5 should not be applied for any unacceptable use cases, e.g., generation of abusive speech.

# Training Details

## Training Data

The model was trained on a mixture of tasks, that includes the tasks described in the table below (from the original paper, figure 2):

![table.png](https://s3.amazonaws.com/moonup/production/uploads/1666363265279-62441d1d9fdefb55a0b7d12c.png)


## Training Procedure

According to the model card from the [original paper](https://arxiv.org/pdf/2210.11416.pdf):

> These models are based on pretrained T5 (Raffel et al., 2020) and fine-tuned with instructions for better zero-shot and few-shot performance. There is one fine-tuned Flan model per T5 model size.

The model has been trained on TPU v3 or TPU v4 pods, using [`t5x`](https://github.com/google-research/t5x) codebase together with [`jax`](https://github.com/google/jax).


# Evaluation

## Testing Data, Factors & Metrics

The authors evaluated the model on various tasks covering several languages (1836 in total). See the table below for some quantitative evaluation:
![image.png](https://s3.amazonaws.com/moonup/production/uploads/1668072995230-62441d1d9fdefb55a0b7d12c.png)
For full details, please check the [research paper](https://arxiv.org/pdf/2210.11416.pdf).

## Results 

For full results for FLAN-T5-Small, see the [research paper](https://arxiv.org/pdf/2210.11416.pdf), Table 3.

# Environmental Impact

Carbon emissions can be estimated using the [Machine Learning Impact calculator](https://mlco2.github.io/impact#compute) presented in [Lacoste et al. (2019)](https://arxiv.org/abs/1910.09700).

- **Hardware Type:** Google Cloud TPU Pods - TPU v3 or TPU v4  | Number of chips ≥ 4.
- **Hours used:** More information needed
- **Cloud Provider:** GCP
- **Compute Region:** More information needed
- **Carbon Emitted:** More information needed

# Citation

**BibTeX:**

```bibtex
@misc{https://doi.org/10.48550/arxiv.2210.11416,
  doi = {10.48550/ARXIV.2210.11416},
  
  url = {https://arxiv.org/abs/2210.11416},
  
  author = {Chung, Hyung Won and Hou, Le and Longpre, Shayne and Zoph, Barret and Tay, Yi and Fedus, William and Li, Eric and Wang, Xuezhi and Dehghani, Mostafa and Brahma, Siddhartha and Webson, Albert and Gu, Shixiang Shane and Dai, Zhuyun and Suzgun, Mirac and Chen, Xinyun and Chowdhery, Aakanksha and Narang, Sharan and Mishra, Gaurav and Yu, Adams and Zhao, Vincent and Huang, Yanping and Dai, Andrew and Yu, Hongkun and Petrov, Slav and Chi, Ed H. and Dean, Jeff and Devlin, Jacob and Roberts, Adam and Zhou, Denny and Le, Quoc V. and Wei, Jason},
  
  keywords = {Machine Learning (cs.LG), Computation and Language (cs.CL), FOS: Computer and information sciences, FOS: Computer and information sciences},
  
  title = {Scaling Instruction-Finetuned Language Models},
  
  publisher = {arXiv},
  
  year = {2022},
  
  copyright = {Creative Commons Attribution 4.0 International}
}
```"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0c3d01ed44dc2940ae38707146a02c16bc80cc8637ce48ac5f3125b7c6fb2982> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.643879"^^xsd:dateTime ;
    ns1:object "custom_code"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55c2ef29f4fc34014e7c41f2439cd686ebcc0bd4d1a02299b7491148b03bd06b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "main/answer"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.640494"^^xsd:dateTime ;
    ns1:object "Models that can be fine-tuned using HuggingFace's AutoTrain service without requiring manual code."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/59b663660275b892172a573e140e5eeec1a75e54c1838aea8d6f78d0f6286eba> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.460985"^^xsd:dateTime ;
    ns1:object "{'name': 'Diego de las Casas', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'question' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.642686"^^xsd:dateTime ;
    ns1:object "Has a Space"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d75a16357850d2896a768db42c912a9487fd97a50f3358217d5bbb602c39b195> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "apache-2.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.604704"^^xsd:dateTime ;
    ns1:object "text classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85f0e69a70ce025a206d6ddbf78d989a3cabbdae215f2045df9b67b21a9d6780> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/emersoftware/tulio-chilean-spanish-bert-msmarco-qa-es-mnrl-mn/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.331945"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/CyberHarem/chokai_azurlane"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fadbdd40ae3e4d21fb8044995368c36935104a0e589c0bb691d566a182b91295> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.686877"^^xsd:dateTime ;
    ns1:object "Industrial-strength NLP library with pre-trained models and support for 65+ languages."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5c6c7a9e81be05e126c2ff79f262747bcaa13dce4de3db78679e947f541d5911> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/socratic/split> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/79cf083846a8329d2912fcd7f375233c37a54917af291bb945f0b58bc735b8ad> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.069549"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/rangapriyabatchu"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fc7cf57f062cb9e0d1e9d259e47e9f36b464ea9c455e880a85e25d6281fc3268> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.451766"^^xsd:dateTime ;
    ns1:object "{'name': 'Chaofan Li', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7542647123336792"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw/correct> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.833527"^^xsd:dateTime ;
    ns1:object "ML-Agents-Huggy"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/898caa90de5afdec703301d3cfdf0da7aa6bc966ea4ada73d27d88cf3f1961a6> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4478994905948639"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The model category is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.693786"^^xsd:dateTime ;
    ns1:object "All-in-one toolkit for speech technology research, including ASR, speaker recognition, and speech enhancement."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d6f86ddd52b22c26a6970ea3473a2f8e657e9600a3cea6dd33e7307bf848d475> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-04-08T03:01:40+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "tr"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.698112"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f398a6ed462d305d58506b378a7b488c448115a8aef746a62331a8435d54a72b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sr"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7004575133323669"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The primary intended users of these models are AI researchers studying robustness, generalization, capabilities, biases, and constraints of the current model."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.792543"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/black-forest-labs/FLUX.1-dev> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9eb6952b89569e3a3863aebca62fd4619833b31bda93a0d0b5678c6627ef9275> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.947845"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2212.04356"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4187965840101242"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/output> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:kasnerz/logic2text"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "base_model:finetune:meta-llama/Llama-2-7b-hf"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.627555787563324"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.458092"^^xsd:dateTime ;
    ns1:object "{'name': 'Alexandra Luccioni', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "apache-2.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.673026"^^xsd:dateTime ;
    ns1:object "Robotics"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2f28cc27d9dac219caa56a5425741f7391153065f1558fe7418d6ccc1c598fb4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.373439"^^xsd:dateTime ;
    ns1:object "whisper"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a7eca72cd0a3a0ce30e3b37b299034e8cf2e3b921a7deaf54545b7d00e88c5e4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/black-forest-labs/FLUX.1-dev-onnx> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.687102"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e9f8dc5efdf686d003f27fc61cf3a0b9e5dbed094499e8e3332f5c535d686f3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.659507"^^xsd:dateTime ;
    ns1:object "Image to 3D"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fd4e2f28de7e36539eda0f2e74a9e9b30f10d77fee3b927dc3aa5419c43369da> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/annotation> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/03a8010a33b7e6718a7b9231b9c21ef9f07a99b444199c8533c744e5ddf1b77a> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
library_name: ml-agents
tags:
- Huggy
- deep-reinforcement-learning
- reinforcement-learning
- ML-Agents-Huggy
---

  # **ppo** Agent playing **Huggy**
  This is a trained model of a **ppo** agent playing **Huggy**
  using the [Unity ML-Agents Library](https://github.com/Unity-Technologies/ml-agents).

  ## Usage (with ML-Agents)
  The Documentation: https://unity-technologies.github.io/ml-agents/ML-Agents-Toolkit-Documentation/

  We wrote a complete tutorial to learn to train your first agent using ML-Agents and publish it to the Hub:
  - A *short tutorial* where you teach Huggy the Dog 🐶 to fetch the stick and then play with him directly in your
  browser: https://huggingface.co/learn/deep-rl-course/unitbonus1/introduction
  - A *longer tutorial* to understand how works ML-Agents:
  https://huggingface.co/learn/deep-rl-course/unit5/introduction

  ### Resume the training
  ```bash
  mlagents-learn <your_configuration_file_path.yaml> --run-id=<run_id> --resume
  ```

  ### Watch your Agent play
  You can watch your agent **playing directly in your browser**

  1. If the environment is part of ML-Agents official environments, go to https://huggingface.co/unity
  2. Step 1: Find your model_id: hugging-robot/ppo-Huggy
  3. Step 2: Select your *.nn /*.onnx file
  4. Click on Watch the agent play 👀
  """^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.43968665599823"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.398816"^^xsd:dateTime ;
    ns1:object "onnx"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4e5443728f51b2323bf3a1c4a6a6d8612484cbca0a8b0beeb5fb0258d1df5196> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/sircesoc/dqn-SpaceInvadersNoFrameskip-v4"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5562985241413116"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object """Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the software Help in the following text, here is a description of the property: (Software application help.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the software Help in the following text, here is a description of the property: (Software application help.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the software Help in the following text, here is a description of the property: (Software application help.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the software Help in the following text, here is a description of the property: (Software application help.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the software Help in the following text, here is a description of the property: (Software application help.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the software Help in the following text, here is a description of the property: (Software application help.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found."""^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6388256251811981"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object """Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context"""^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.625830"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/97b8857097478874bd8e9cb141256c1acde4789374ce4d72be5580b0da08f403> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.665340"^^xsd:dateTime ;
    ns1:object "Text Generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "ro"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.686682"^^xsd:dateTime ;
    ns1:object "spaCy"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5c6c7a9e81be05e126c2ff79f262747bcaa13dce4de3db78679e947f541d5911> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "sample"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/input_file> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-03-02T23:15:38+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.43546682596206665"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.643817"^^xsd:dateTime ;
    ns1:object "Pyramids"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/aab31c422baf7f2434e14a6dd6d0ca4ab2f1a7ac240c7e219b52a3c74e708277> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "kn"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.294023"^^xsd:dateTime ;
    ns1:object "deepmind/code_contests"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.41058172285556793"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6284680664539337"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6746093034744263"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.932682"^^xsd:dateTime ;
    ns1:object "meta"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/759dcfce11b186065b46fb94fef1c569da9001c123861ba72ba0708e554bd6c4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5893460214138031"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object """Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase \""""^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2022-03-02T23:29:04+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4249875247478485"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.469709"^^xsd:dateTime ;
    ns1:object "{'name': 'Tao Xu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6649542152881622"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
language:
- en
tags:
- audio
- automatic-speech-recognition
- hf-asr-leaderboard
widget:
- example_title: Librispeech sample 1
  src: https://cdn-media.huggingface.co/speech_samples/sample1.flac
- example_title: Librispeech sample 2
  src: https://cdn-media.huggingface.co/speech_samples/sample2.flac
pipeline_tag: automatic-speech-recognition
license: apache-2.0
model-index:
- name: whisper-base.en
  results:
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (clean)
      type: librispeech_asr
      config: clean
      split: test
      args:
        language: en
    metrics:
    - type: wer
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (other)
      type: librispeech_asr
      config: other
      split: test
      args:
        language: en
    metrics:
    - type: wer
      value: 12.803978669490565
      name: Test WER
---

# Whisper

Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains **without** the need 
for fine-tuning.

Whisper was proposed in the paper [Robust Speech Recognition via Large-Scale Weak Supervision](https://arxiv.org/abs/2212.04356) 
by Alec Radford et al. from OpenAI. The original code repository can be found [here](https://github.com/openai/whisper).

**Disclaimer**: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.

## Model details

Whisper is a Transformer based encoder-decoder model, also referred to as a _sequence-to-sequence_ model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. 

The models were trained on either English-only data or multilingual data. The English-only models were trained 
on the task of speech recognition. The multilingual models were trained on both speech recognition and speech 
translation. For speech recognition, the model predicts transcriptions in the *same* language as the audio. 
For speech translation, the model predicts transcriptions to a *different* language to the audio.

Whisper checkpoints come in five configurations of varying model sizes.
The smallest four are trained on either English-only or multilingual data.
The largest checkpoints are multilingual only. All ten of the pre-trained checkpoints 
are available on the [Hugging Face Hub](https://huggingface.co/models?search=openai/whisper). The 
checkpoints are summarised in the following table with links to the models on the Hub:

| Size     | Parameters | English-only                                         | Multilingual                                        |
|----------|------------|------------------------------------------------------|-----------------------------------------------------|
| tiny     | 39 M       | [✓](https://huggingface.co/openai/whisper-tiny.en)   | [✓](https://huggingface.co/openai/whisper-tiny)     |
| base     | 74 M       | [✓](https://huggingface.co/openai/whisper-base.en)   | [✓](https://huggingface.co/openai/whisper-base)     |
| small    | 244 M      | [✓](https://huggingface.co/openai/whisper-small.en)  | [✓](https://huggingface.co/openai/whisper-small)    |
| medium   | 769 M      | [✓](https://huggingface.co/openai/whisper-medium.en) | [✓](https://huggingface.co/openai/whisper-medium)   |
| large    | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large)    |
| large-v2 | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large-v2) |

# Usage

This checkpoint is an *English-only* model, meaning it can be used for English speech recognition. Multilingual speech 
recognition or speech translation is possible through use of a multilingual checkpoint.

To transcribe audio samples, the model has to be used alongside a [`WhisperProcessor`](https://huggingface.co/docs/transformers/model_doc/whisper#transformers.WhisperProcessor).

The `WhisperProcessor` is used to:
1. Pre-process the audio inputs (converting them to log-Mel spectrograms for the model)
2. Post-process the model outputs (converting them from tokens to text)

## Transcription

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base.en")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base.en")

>>> # load dummy dataset and read audio files
>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]
>>> input_features = processor(sample["array"], sampling_rate=sample["sampling_rate"], return_tensors="pt").input_features 

>>> # generate token ids
>>> predicted_ids = model.generate(input_features)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=False)
['<|startoftranscript|><|notimestamps|> Mr. Quilter is the apostle of the middle classes, and we are glad to welcome his gospel.<|endoftext|>']

>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.']
```
The context tokens can be removed from the start of the transcription by setting `skip_special_tokens=True`.

## Evaluation

This code snippet shows how to evaluate Whisper base.en on [LibriSpeech test-clean](https://huggingface.co/datasets/librispeech_asr):
 
```python
>>> from datasets import load_dataset
>>> from transformers import WhisperForConditionalGeneration, WhisperProcessor
>>> import torch
>>> from evaluate import load

>>> librispeech_test_clean = load_dataset("librispeech_asr", "clean", split="test")

>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base.en")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base.en").to("cuda")

>>> def map_to_pred(batch):
>>>     audio = batch["audio"]
>>>     input_features = processor(audio["array"], sampling_rate=audio["sampling_rate"], return_tensors="pt").input_features
>>>     batch["reference"] = processor.tokenizer._normalize(batch['text'])
>>> 
>>>     with torch.no_grad():
>>>         predicted_ids = model.generate(input_features.to("cuda"))[0]
>>>     transcription = processor.decode(predicted_ids)
>>>     batch["prediction"] = processor.tokenizer._normalize(transcription)
>>>     return batch

>>> result = librispeech_test_clean.map(map_to_pred)

>>> wer = load("wer")
>>> print(100 * wer.compute(references=result["reference"], predictions=result["prediction"]))
4.271408904897505
```

## Long-Form Transcription

The Whisper model is intrinsically designed to work on audio samples of up to 30s in duration. However, by using a chunking 
algorithm, it can be used to transcribe audio samples of up to arbitrary length. This is possible through Transformers 
[`pipeline`](https://huggingface.co/docs/transformers/main_classes/pipelines#transformers.AutomaticSpeechRecognitionPipeline) 
method. Chunking is enabled by setting `chunk_length_s=30` when instantiating the pipeline. With chunking enabled, the pipeline 
can be run with batched inference. It can also be extended to predict sequence level timestamps by passing `return_timestamps=True`:

```python
>>> import torch
>>> from transformers import pipeline
>>> from datasets import load_dataset

>>> device = "cuda:0" if torch.cuda.is_available() else "cpu"

>>> pipe = pipeline(
>>>   "automatic-speech-recognition",
>>>   model="openai/whisper-base.en",
>>>   chunk_length_s=30,
>>>   device=device,
>>> )

>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]

>>> prediction = pipe(sample.copy(), batch_size=8)["text"]
" Mr. Quilter is the apostle of the middle classes, and we are glad to welcome his gospel."

>>> # we can also return timestamps for the predictions
>>> prediction = pipe(sample.copy(), batch_size=8, return_timestamps=True)["chunks"]
[{'text': ' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.',
  'timestamp': (0.0, 5.44)}]
```

Refer to the blog post [ASR Chunking](https://huggingface.co/blog/asr-chunking) for more details on the chunking algorithm.

## Fine-Tuning

The pre-trained Whisper model demonstrates a strong ability to generalise to different datasets and domains. However, 
its predictive capabilities can be improved further for certain languages and tasks through *fine-tuning*. The blog 
post [Fine-Tune Whisper with 🤗 Transformers](https://huggingface.co/blog/fine-tune-whisper) provides a step-by-step 
guide to fine-tuning the Whisper model with as little as 5 hours of labelled data.

### Evaluated Use

The primary intended users of these models are AI researchers studying robustness, generalization, capabilities, biases, and constraints of the current model. However, Whisper is also potentially quite useful as an ASR solution for developers, especially for English speech recognition. We recognize that once models are released, it is impossible to restrict access to only “intended” uses or to draw reasonable guidelines around what is or is not research.

The models are primarily trained and evaluated on ASR and speech translation to English tasks. They show strong ASR results in ~10 languages. They may exhibit additional capabilities, particularly if fine-tuned on certain tasks like voice activity detection, speaker classification, or speaker diarization but have not been robustly evaluated in these areas. We strongly recommend that users perform robust evaluations of the models in a particular context and domain before deploying them.

In particular, we caution against using Whisper models to transcribe recordings of individuals taken without their consent or purporting to use these models for any kind of subjective classification. We recommend against use in high-risk domains like decision-making contexts, where flaws in accuracy can lead to pronounced flaws in outcomes. The models are intended to transcribe and translate speech, use of the model for classification is not only not evaluated but also not appropriate, particularly to infer human attributes.


## Training Data

The models are trained on 680,000 hours of audio and the corresponding transcripts collected from the internet. 65% of this data (or 438,000 hours) represents English-language audio and matched English transcripts, roughly 18% (or 126,000 hours) represents non-English audio and English transcripts, while the final 17% (or 117,000 hours) represents non-English audio and the corresponding transcript. This non-English data represents 98 different languages. 

As discussed in [the accompanying paper](https://cdn.openai.com/papers/whisper.pdf), we see that performance on transcription in a given language is directly correlated with the amount of training data we employ in that language.


## Performance and Limitations

Our studies show that, over many existing ASR systems, the models exhibit improved robustness to accents, background noise, technical language, as well as zero shot translation from multiple languages into English; and that accuracy on speech recognition and translation is near the state-of-the-art level. 

However, because the models are trained in a weakly supervised manner using large-scale noisy data, the predictions may include texts that are not actually spoken in the audio input (i.e. hallucination). We hypothesize that this happens because, given their general knowledge of language, the models combine trying to predict the next word in audio with trying to transcribe the audio itself.

Our models perform unevenly across languages, and we observe lower accuracy on low-resource and/or low-discoverability languages or languages where we have less training data. The models also exhibit disparate performance on different accents and dialects of particular languages, which may include higher word error rate across speakers of different genders, races, ages, or other demographic criteria. Our full evaluation results are presented in [the paper accompanying this release](https://cdn.openai.com/papers/whisper.pdf). 

In addition, the sequence-to-sequence architecture of the model makes it prone to generating repetitive texts, which can be mitigated to some degree by beam search and temperature scheduling but not perfectly. Further analysis on these limitations are provided in [the paper](https://cdn.openai.com/papers/whisper.pdf). It is likely that this behavior and hallucinations may be worse on lower-resource and/or lower-discoverability languages.


## Broader Implications

We anticipate that Whisper models’ transcription capabilities may be used for improving accessibility tools. While Whisper models cannot be used for real-time transcription out of the box – their speed and size suggest that others may be able to build applications on top of them that allow for near-real-time speech recognition and translation. The real value of beneficial applications built on top of Whisper models suggests that the disparate performance of these models may have real economic implications.

There are also potential dual use concerns that come with releasing Whisper. While we hope the technology will be used primarily for beneficial purposes, making ASR technology more accessible could enable more actors to build capable surveillance technologies or scale up existing surveillance efforts, as the speed and accuracy allow for affordable automatic transcription and translation of large volumes of audio communication. Moreover, these models may have some capabilities to recognize specific individuals out of the box, which in turn presents safety concerns related both to dual use and disparate performance. In practice, we expect that the cost of transcription is not the limiting factor of scaling up surveillance projects.


### BibTeX entry and citation info
```bibtex
@misc{radford2022whisper,
  doi = {10.48550/ARXIV.2212.04356},
  url = {https://arxiv.org/abs/2212.04356},
  author = {Radford, Alec and Kim, Jong Wook and Xu, Tao and Brockman, Greg and McLeavey, Christine and Sutskever, Ilya},
  title = {Robust Speech Recognition via Large-Scale Weak Supervision},
  publisher = {arXiv},
  year = {2022},
  copyright = {arXiv.org perpetual, non-exclusive license}
}
```
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.668122"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55bd15a0af8bef99be0b0832411b5afbbb83779bc0cd1795dffee7c3285baa1f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.678233"^^xsd:dateTime ;
    ns1:object "Diffusers"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d462b48c96b732d754a938aa86dbd16bfb7478ca5b0c1f1f006c611c112094e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.069232"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fc7cf57f062cb9e0d1e9d259e47e9f36b464ea9c455e880a85e25d6281fc3268> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/55bd15a0af8bef99be0b0832411b5afbbb83779bc0cd1795dffee7c3285baa1f> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.610712"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2104.08247"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/85f0e69a70ce025a206d6ddbf78d989a3cabbdae215f2045df9b67b21a9d6780> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6547469198703766"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "haw"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ar"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.670970"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4eaeba2a8985fdb21e18ca1e967f067a345c0498ed10fc3e5e9ba95e39876cab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/g_ids_features> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'options' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "fr"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.768571"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/kasnerz/logic2text"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/90eec6e25a3fb442a9bde78265ab17bc704cb71d58af7815f5a5ca027c4a2c94> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.661430"^^xsd:dateTime ;
    ns1:object "Labels individual tokens (words) in text with specific categories."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cb9bd15fb27d24d93383343fa6ee37e644b0a41da399de954b0a5cf93c7b3501> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.459287"^^xsd:dateTime ;
    ns1:object """We introduce Mistral 7B v0.1, a 7-billion-parameter language model engineered
for superior performance and efficiency. Mistral 7B outperforms Llama 2 13B
across all evaluated benchmarks, and Llama 1 34B in reasoning, mathematics, and
code generation. Our model leverages grouped-query attention (GQA) for faster
inference, coupled with sliding window attention (SWA) to effectively handle
sequences of arbitrary length with a reduced inference cost. We also provide a
model fine-tuned to follow instructions, Mistral 7B -- Instruct, that surpasses
the Llama 2 13B -- Chat model both on human and automated benchmarks. Our
models are released under the Apache 2.0 license."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "ro"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5561093986034393"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The model category is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5420849025249481"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.792400"^^xsd:dateTime ;
    ns1:object "black-forest-labs/FLUX.1-dev"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9eb6952b89569e3a3863aebca62fd4619833b31bda93a0d0b5678c6627ef9275> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.442951"^^xsd:dateTime ;
    ns1:object "{'name': 'Vedanuj Goswami', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.38086286187171936"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.792240"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/MLModel> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9eb6952b89569e3a3863aebca62fd4619833b31bda93a0d0b5678c6627ef9275> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.610536"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/seconds> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0c3d01ed44dc2940ae38707146a02c16bc80cc8637ce48ac5f3125b7c6fb2982> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.653576"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.654147"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/266c130bc128debb0db48b7a2e58c6423c7bafb2445fcccd68e2da192f3487d1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5330643057823181"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The intended use of the property is to enable users to make a decision as to the suitability of this creative work for their intended use."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/rangapriyabatchu/black-forest-labsFLUX.1-dev"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "ppo-Pyramids"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.648939"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7130325138568878"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4368813782930374"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/29d9051dd7490ee997ef15f45bf916274706268eab63f2c7bff767388d51cf25> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.922185"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/solutions/language> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.651981"^^xsd:dateTime ;
    ns1:object "Image Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/25a48b7b32ec31051c00ea96f30d1637f216eb0ed7620da77d06c4637ab5da7f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.399943"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/46bf92c851d51c701bc0d7be65ae6244619cbe1fe5bdf474aea372173952ef41> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.461337"^^xsd:dateTime ;
    ns1:object "{'name': 'Gianna Lengyel', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "plain_text_splits"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.285647"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d24e90f006bf4dfce8be9dbaf9c92d1449f40b988b6cc52d60e48c40331dc607> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.444764"^^xsd:dateTime ;
    ns1:object "{'name': 'Punit Singh Koura', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.668461"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e05dcf019c16b58ee18632feff8d896599b435fed50864784dfbbf57cfeb9f88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4990849643945694"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_contest_id> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.46085552871227264"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4461010992527008"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'answer' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.640154"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/59b663660275b892172a573e140e5eeec1a75e54c1838aea8d6f78d0f6286eba> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base.en/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.847590"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2311.13534"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5256569683551788"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The context provided does not contain information about the intended use of the patent-summarization-fb-bart-base-2022-09-20 model."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.639338"^^xsd:dateTime ;
    ns1:object "General label indicating the model or dataset has been categorized with specific keywords for discoverability."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6b72a43d7396497fe9733cb91a9e688db073b7c1c583e2c5fca339bd414a4dac> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "other"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.49313145875930786"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/AdapterHub/bert-base-uncased-pf-multirc/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.667501"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6839f153ace4a5cfe1e9a1cdb43c1bfc2260f4c85be0608af5ec84a75a205d2c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ecd7f8f73c76e2813d124a5830035419d55e0e60410eb6b073177559f7238d9c> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.442081"^^xsd:dateTime ;
    ns1:object "{'name': 'Jude Fernandes', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/907291d3b7300a7e84345915ff883a4d8615166ada0751e1be974994397ea77a> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.453712"^^xsd:dateTime ;
    ns1:object "{'name': 'Jonas Pfeiffer', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.447872"^^xsd:dateTime ;
    ns1:object "{'name': 'Ranjan Subramanian', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ml"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5397305190563202"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The intended use of the **ppo** Agent playing **Huggy** is to watch the agent play directly in your browser. This can be done by following the steps mentioned in the text, which include finding your model_id, selecting your *.nn /*.onnx file, and clicking on \"Watch the agent play 👀\"."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object """kasnerz/logic2text - 'default' subset

Additional information:
- 3 splits: train, validation, test"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.655289"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6803a9142550ca466078b0794746397f37034f277ce6f45bb7f252be171ab407> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
language: 
- en
- fr
- ro
- de
- multilingual

tags:
- text2text-generation

widget:
- text: "Translate to German:  My name is Arthur"
  example_title: "Translation"
- text: "Please answer to the following question. Who is going to be the next Ballon d'or?"
  example_title: "Question Answering"
- text: "Q: Can Geoffrey Hinton have a conversation with George Washington? Give the rationale before answering."
  example_title: "Logical reasoning"
- text: "Please answer the following question. What is the boiling point of Nitrogen?"
  example_title: "Scientific knowledge"
- text: "Answer the following yes/no question. Can you write a whole Haiku in a single tweet?"
  example_title: "Yes/no question"
- text: "Answer the following yes/no question by reasoning step-by-step. Can you write a whole Haiku in a single tweet?"
  example_title: "Reasoning task"
- text: "Q: ( False or not False or False ) is? A: Let's think step by step"
  example_title: "Boolean Expressions"
- text: "The square root of x is the cube root of y. What is y to the power of 2, if x = 4?"
  example_title: "Math reasoning"
- text: "Premise:  At my age you will probably have learnt one lesson. Hypothesis:  It's not certain how many lessons you'll learn by your thirties. Does the premise entail the hypothesis?"
  example_title: "Premise and hypothesis"

datasets:
- svakulenk0/qrecc
- taskmaster2
- djaym7/wiki_dialog
- deepmind/code_contests
- lambada
- gsm8k
- aqua_rat
- esnli
- quasc
- qed


license: apache-2.0
---

# Model Card for FLAN-T5 small

<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/transformers/model_doc/flan2_architecture.jpg"
alt="drawing" width="600"/>

#  Table of Contents

0. [TL;DR](#TL;DR)
1. [Model Details](#model-details)
2. [Usage](#usage)
3. [Uses](#uses)
4. [Bias, Risks, and Limitations](#bias-risks-and-limitations)
5. [Training Details](#training-details)
6. [Evaluation](#evaluation)
7. [Environmental Impact](#environmental-impact)
8. [Citation](#citation)
9. [Model Card Authors](#model-card-authors)

# TL;DR

If you already know T5, FLAN-T5 is just better at everything. For the same number of parameters, these models have been fine-tuned on more than 1000 additional tasks covering also more languages. 
As mentioned in the first few lines of the abstract : 
>  Flan-PaLM 540B achieves state-of-the-art performance on several benchmarks, such as 75.2% on five-shot MMLU. We also publicly release Flan-T5 checkpoints,1 which achieve strong few-shot performance even compared to much larger models, such as PaLM 62B. Overall, instruction finetuning is a general method for improving the performance and usability of pretrained language models.

**Disclaimer**: Content from **this** model card has been written by the Hugging Face team, and parts of it were copy pasted from the [T5 model card](https://huggingface.co/t5-large).

# Model Details

## Model Description


- **Model type:** Language model
- **Language(s) (NLP):** English, Spanish, Japanese, Persian, Hindi, French, Chinese, Bengali, Gujarati, German, Telugu, Italian, Arabic, Polish, Tamil, Marathi, Malayalam, Oriya, Panjabi, Portuguese, Urdu, Galician, Hebrew, Korean, Catalan, Thai, Dutch, Indonesian, Vietnamese, Bulgarian, Filipino, Central Khmer, Lao, Turkish, Russian, Croatian, Swedish, Yoruba, Kurdish, Burmese, Malay, Czech, Finnish, Somali, Tagalog, Swahili, Sinhala, Kannada, Zhuang, Igbo, Xhosa, Romanian, Haitian, Estonian, Slovak, Lithuanian, Greek, Nepali, Assamese, Norwegian
- **License:** Apache 2.0
- **Related Models:** [All FLAN-T5 Checkpoints](https://huggingface.co/models?search=flan-t5)
- **Original Checkpoints:** [All Original FLAN-T5 Checkpoints](https://github.com/google-research/t5x/blob/main/docs/models.md#flan-t5-checkpoints)
- **Resources for more information:**
  - [Research paper](https://arxiv.org/pdf/2210.11416.pdf)
  - [GitHub Repo](https://github.com/google-research/t5x)
  - [Hugging Face FLAN-T5 Docs (Similar to T5) ](https://huggingface.co/docs/transformers/model_doc/t5)

# Usage

Find below some example scripts on how to use the model in `transformers`:

## Using the Pytorch model

### Running the model on a CPU

<details>
<summary> Click to expand </summary>

```python

from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small")

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

### Running the model on a GPU

<details>
<summary> Click to expand </summary>

```python
# pip install accelerate
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small", device_map="auto")

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids.to("cuda")

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

### Running the model on a GPU using different precisions

#### FP16

<details>
<summary> Click to expand </summary>

```python
# pip install accelerate
import torch
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small", device_map="auto", torch_dtype=torch.float16)

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids.to("cuda")

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

#### INT8

<details>
<summary> Click to expand </summary>

```python
# pip install bitsandbytes accelerate
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small", device_map="auto", load_in_8bit=True)

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids.to("cuda")

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

# Uses

## Direct Use and Downstream Use

The authors write in [the original paper's model card](https://arxiv.org/pdf/2210.11416.pdf) that: 

> The primary use is research on language models, including: research on zero-shot NLP tasks and in-context few-shot learning NLP tasks, such as reasoning, and question answering; advancing fairness and safety research, and understanding limitations of current large language models

See the [research paper](https://arxiv.org/pdf/2210.11416.pdf) for further details.

## Out-of-Scope Use

More information needed.

# Bias, Risks, and Limitations

The information below in this section are copied from the model's [official model card](https://arxiv.org/pdf/2210.11416.pdf):

> Language models, including Flan-T5, can potentially be used for language generation in a harmful way, according to Rae et al. (2021). Flan-T5 should not be used directly in any application, without a prior assessment of safety and fairness concerns specific to the application.

## Ethical considerations and risks

> Flan-T5 is fine-tuned on a large corpus of text data that was not filtered for explicit content or assessed for existing biases. As a result the model itself is potentially vulnerable to generating equivalently inappropriate content or replicating inherent biases in the underlying data.

## Known Limitations

> Flan-T5 has not been tested in real world applications.

## Sensitive Use:

> Flan-T5 should not be applied for any unacceptable use cases, e.g., generation of abusive speech.

# Training Details

## Training Data

The model was trained on a mixture of tasks, that includes the tasks described in the table below (from the original paper, figure 2):

![table.png](https://s3.amazonaws.com/moonup/production/uploads/1666363265279-62441d1d9fdefb55a0b7d12c.png)


## Training Procedure

According to the model card from the [original paper](https://arxiv.org/pdf/2210.11416.pdf):

> These models are based on pretrained T5 (Raffel et al., 2020) and fine-tuned with instructions for better zero-shot and few-shot performance. There is one fine-tuned Flan model per T5 model size.

The model has been trained on TPU v3 or TPU v4 pods, using [`t5x`](https://github.com/google-research/t5x) codebase together with [`jax`](https://github.com/google/jax).


# Evaluation

## Testing Data, Factors & Metrics

The authors evaluated the model on various tasks covering several languages (1836 in total). See the table below for some quantitative evaluation:
![image.png](https://s3.amazonaws.com/moonup/production/uploads/1668072995230-62441d1d9fdefb55a0b7d12c.png)
For full details, please check the [research paper](https://arxiv.org/pdf/2210.11416.pdf).

## Results 

For full results for FLAN-T5-Small, see the [research paper](https://arxiv.org/pdf/2210.11416.pdf), Table 3.

# Environmental Impact

Carbon emissions can be estimated using the [Machine Learning Impact calculator](https://mlco2.github.io/impact#compute) presented in [Lacoste et al. (2019)](https://arxiv.org/abs/1910.09700).

- **Hardware Type:** Google Cloud TPU Pods - TPU v3 or TPU v4  | Number of chips ≥ 4.
- **Hours used:** More information needed
- **Cloud Provider:** GCP
- **Compute Region:** More information needed
- **Carbon Emitted:** More information needed

# Citation

**BibTeX:**

```bibtex
@misc{https://doi.org/10.48550/arxiv.2210.11416,
  doi = {10.48550/ARXIV.2210.11416},
  
  url = {https://arxiv.org/abs/2210.11416},
  
  author = {Chung, Hyung Won and Hou, Le and Longpre, Shayne and Zoph, Barret and Tay, Yi and Fedus, William and Li, Eric and Wang, Xuezhi and Dehghani, Mostafa and Brahma, Siddhartha and Webson, Albert and Gu, Shixiang Shane and Dai, Zhuyun and Suzgun, Mirac and Chen, Xinyun and Chowdhery, Aakanksha and Narang, Sharan and Mishra, Gaurav and Yu, Adams and Zhao, Vincent and Huang, Yanping and Dai, Andrew and Yu, Hongkun and Petrov, Slav and Chi, Ed H. and Dean, Jeff and Devlin, Jacob and Roberts, Adam and Zhou, Denny and Le, Quoc V. and Wei, Jason},
  
  keywords = {Machine Learning (cs.LG), Computation and Language (cs.CL), FOS: Computer and information sciences, FOS: Computer and information sciences},
  
  title = {Scaling Instruction-Finetuned Language Models},
  
  publisher = {arXiv},
  
  year = {2022},
  
  copyright = {Creative Commons Attribution 4.0 International}
}
```"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "license:apache-2.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "es"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.444439"^^xsd:dateTime ;
    ns1:object "{'name': 'Isabel Kloumann', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5299383401870728"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
language:
- en
- zh
- de
- es
- ru
- ko
- fr
- ja
- pt
- tr
- pl
- ca
- nl
- ar
- sv
- it
- id
- hi
- fi
- vi
- he
- uk
- el
- ms
- cs
- ro
- da
- hu
- ta
- false
- th
- ur
- hr
- bg
- lt
- la
- mi
- ml
- cy
- sk
- te
- fa
- lv
- bn
- sr
- az
- sl
- kn
- et
- mk
- br
- eu
- is
- hy
- ne
- mn
- bs
- kk
- sq
- sw
- gl
- mr
- pa
- si
- km
- sn
- yo
- so
- af
- oc
- ka
- be
- tg
- sd
- gu
- am
- yi
- lo
- uz
- fo
- ht
- ps
- tk
- nn
- mt
- sa
- lb
- my
- bo
- tl
- mg
- as
- tt
- haw
- ln
- ha
- ba
- jw
- su
tags:
- audio
- automatic-speech-recognition
- hf-asr-leaderboard
widget:
- example_title: Librispeech sample 1
  src: https://cdn-media.huggingface.co/speech_samples/sample1.flac
- example_title: Librispeech sample 2
  src: https://cdn-media.huggingface.co/speech_samples/sample2.flac
pipeline_tag: automatic-speech-recognition
license: apache-2.0
model-index:
- name: whisper-base
  results:
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (clean)
      type: librispeech_asr
      config: clean
      split: test
      args:
        language: en
    metrics:
    - type: wer
      value: 5.008769117619326
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (other)
      type: librispeech_asr
      config: other
      split: test
      args:
        language: en
    metrics:
    - type: wer
      value: 12.84936273212057
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: Common Voice 11.0
      type: mozilla-foundation/common_voice_11_0
      config: hi
      split: test
      args:
        language: hi
    metrics:
    - type: wer
      value: 131
      name: Test WER
---

# Whisper

Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains **without** the need 
for fine-tuning.

Whisper was proposed in the paper [Robust Speech Recognition via Large-Scale Weak Supervision](https://arxiv.org/abs/2212.04356) 
by Alec Radford et al from OpenAI. The original code repository can be found [here](https://github.com/openai/whisper).

**Disclaimer**: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.

## Model details

Whisper is a Transformer based encoder-decoder model, also referred to as a _sequence-to-sequence_ model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. 

The models were trained on either English-only data or multilingual data. The English-only models were trained 
on the task of speech recognition. The multilingual models were trained on both speech recognition and speech 
translation. For speech recognition, the model predicts transcriptions in the *same* language as the audio. 
For speech translation, the model predicts transcriptions to a *different* language to the audio.

Whisper checkpoints come in five configurations of varying model sizes.
The smallest four are trained on either English-only or multilingual data.
The largest checkpoints are multilingual only. All ten of the pre-trained checkpoints 
are available on the [Hugging Face Hub](https://huggingface.co/models?search=openai/whisper). The 
checkpoints are summarised in the following table with links to the models on the Hub:

| Size     | Parameters | English-only                                         | Multilingual                                        |
|----------|------------|------------------------------------------------------|-----------------------------------------------------|
| tiny     | 39 M       | [✓](https://huggingface.co/openai/whisper-tiny.en)   | [✓](https://huggingface.co/openai/whisper-tiny)     |
| base     | 74 M       | [✓](https://huggingface.co/openai/whisper-base.en)   | [✓](https://huggingface.co/openai/whisper-base)     |
| small    | 244 M      | [✓](https://huggingface.co/openai/whisper-small.en)  | [✓](https://huggingface.co/openai/whisper-small)    |
| medium   | 769 M      | [✓](https://huggingface.co/openai/whisper-medium.en) | [✓](https://huggingface.co/openai/whisper-medium)   |
| large    | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large)    |
| large-v2 | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large-v2) |

# Usage

To transcribe audio samples, the model has to be used alongside a [`WhisperProcessor`](https://huggingface.co/docs/transformers/model_doc/whisper#transformers.WhisperProcessor).

The `WhisperProcessor` is used to:
1. Pre-process the audio inputs (converting them to log-Mel spectrograms for the model)
2. Post-process the model outputs (converting them from tokens to text)

The model is informed of which task to perform (transcription or translation) by passing the appropriate "context tokens". These context tokens 
are a sequence of tokens that are given to the decoder at the start of the decoding process, and take the following order:
1. The transcription always starts with the `<|startoftranscript|>` token
2. The second token is the language token (e.g. `<|en|>` for English)
3. The third token is the "task token". It can take one of two values: `<|transcribe|>` for speech recognition or `<|translate|>` for speech translation
4. In addition, a `<|notimestamps|>` token is added if the model should not include timestamp prediction

Thus, a typical sequence of context tokens might look as follows:
```
<|startoftranscript|> <|en|> <|transcribe|> <|notimestamps|>
```
Which tells the model to decode in English, under the task of speech recognition, and not to predict timestamps.

These tokens can either be forced or un-forced. If they are forced, the model is made to predict each token at 
each position. This allows one to control the output language and task for the Whisper model. If they are un-forced, 
the Whisper model will automatically predict the output langauge and task itself.

The context tokens can be set accordingly:

```python
model.config.forced_decoder_ids = WhisperProcessor.get_decoder_prompt_ids(language="english", task="transcribe")
```

Which forces the model to predict in English under the task of speech recognition.

## Transcription

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base")
>>> model.config.forced_decoder_ids = None

>>> # load dummy dataset and read audio files
>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]
>>> input_features = processor(sample["array"], sampling_rate=sample["sampling_rate"], return_tensors="pt").input_features 

>>> # generate token ids
>>> predicted_ids = model.generate(input_features)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=False)
['<|startoftranscript|><|en|><|transcribe|><|notimestamps|> Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.<|endoftext|>']

>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.']
```
The context tokens can be removed from the start of the transcription by setting `skip_special_tokens=True`.

### French to French 
The following example demonstrates French to French transcription by setting the decoder ids appropriately. 

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import Audio, load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base")
>>> forced_decoder_ids = processor.get_decoder_prompt_ids(language="french", task="transcribe")

>>> # load streaming dataset and read first audio sample
>>> ds = load_dataset("common_voice", "fr", split="test", streaming=True)
>>> ds = ds.cast_column("audio", Audio(sampling_rate=16_000))
>>> input_speech = next(iter(ds))["audio"]
>>> input_features = processor(input_speech["array"], sampling_rate=input_speech["sampling_rate"], return_tensors="pt").input_features

>>> # generate token ids
>>> predicted_ids = model.generate(input_features, forced_decoder_ids=forced_decoder_ids)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids)
['<|startoftranscript|><|fr|><|transcribe|><|notimestamps|> Un vrai travail intéressant va enfin être mené sur ce sujet.<|endoftext|>']

>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' Un vrai travail intéressant va enfin être mené sur ce sujet.']
```

## Translation 
Setting the task to "translate" forces the Whisper model to perform speech translation.

### French to English

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import Audio, load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base")
>>> forced_decoder_ids = processor.get_decoder_prompt_ids(language="french", task="translate")

>>> # load streaming dataset and read first audio sample
>>> ds = load_dataset("common_voice", "fr", split="test", streaming=True)
>>> ds = ds.cast_column("audio", Audio(sampling_rate=16_000))
>>> input_speech = next(iter(ds))["audio"]
>>> input_features = processor(input_speech["array"], sampling_rate=input_speech["sampling_rate"], return_tensors="pt").input_features

>>> # generate token ids
>>> predicted_ids = model.generate(input_features, forced_decoder_ids=forced_decoder_ids)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' A very interesting work, we will finally be given on this subject.']
```

## Evaluation

This code snippet shows how to evaluate Whisper Base on [LibriSpeech test-clean](https://huggingface.co/datasets/librispeech_asr):
 
```python
>>> from datasets import load_dataset
>>> from transformers import WhisperForConditionalGeneration, WhisperProcessor
>>> import torch
>>> from evaluate import load

>>> librispeech_test_clean = load_dataset("librispeech_asr", "clean", split="test")

>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base").to("cuda")

>>> def map_to_pred(batch):
>>>     audio = batch["audio"]
>>>     input_features = processor(audio["array"], sampling_rate=audio["sampling_rate"], return_tensors="pt").input_features
>>>     batch["reference"] = processor.tokenizer._normalize(batch['text'])
>>> 
>>>     with torch.no_grad():
>>>         predicted_ids = model.generate(input_features.to("cuda"))[0]
>>>     transcription = processor.decode(predicted_ids)
>>>     batch["prediction"] = processor.tokenizer._normalize(transcription)
>>>     return batch

>>> result = librispeech_test_clean.map(map_to_pred)

>>> wer = load("wer")
>>> print(100 * wer.compute(references=result["reference"], predictions=result["prediction"]))
5.082316555716899
```

## Long-Form Transcription

The Whisper model is intrinsically designed to work on audio samples of up to 30s in duration. However, by using a chunking 
algorithm, it can be used to transcribe audio samples of up to arbitrary length. This is possible through Transformers 
[`pipeline`](https://huggingface.co/docs/transformers/main_classes/pipelines#transformers.AutomaticSpeechRecognitionPipeline) 
method. Chunking is enabled by setting `chunk_length_s=30` when instantiating the pipeline. With chunking enabled, the pipeline 
can be run with batched inference. It can also be extended to predict sequence level timestamps by passing `return_timestamps=True`:

```python
>>> import torch
>>> from transformers import pipeline
>>> from datasets import load_dataset

>>> device = "cuda:0" if torch.cuda.is_available() else "cpu"

>>> pipe = pipeline(
>>>   "automatic-speech-recognition",
>>>   model="openai/whisper-base",
>>>   chunk_length_s=30,
>>>   device=device,
>>> )

>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]

>>> prediction = pipe(sample.copy(), batch_size=8)["text"]
" Mr. Quilter is the apostle of the middle classes, and we are glad to welcome his gospel."

>>> # we can also return timestamps for the predictions
>>> prediction = pipe(sample.copy(), batch_size=8, return_timestamps=True)["chunks"]
[{'text': ' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.',
  'timestamp': (0.0, 5.44)}]
```

Refer to the blog post [ASR Chunking](https://huggingface.co/blog/asr-chunking) for more details on the chunking algorithm.

## Fine-Tuning

The pre-trained Whisper model demonstrates a strong ability to generalise to different datasets and domains. However, 
its predictive capabilities can be improved further for certain languages and tasks through *fine-tuning*. The blog 
post [Fine-Tune Whisper with 🤗 Transformers](https://huggingface.co/blog/fine-tune-whisper) provides a step-by-step 
guide to fine-tuning the Whisper model with as little as 5 hours of labelled data.

### Evaluated Use

The primary intended users of these models are AI researchers studying robustness, generalization, capabilities, biases, and constraints of the current model. However, Whisper is also potentially quite useful as an ASR solution for developers, especially for English speech recognition. We recognize that once models are released, it is impossible to restrict access to only “intended” uses or to draw reasonable guidelines around what is or is not research.

The models are primarily trained and evaluated on ASR and speech translation to English tasks. They show strong ASR results in ~10 languages. They may exhibit additional capabilities, particularly if fine-tuned on certain tasks like voice activity detection, speaker classification, or speaker diarization but have not been robustly evaluated in these areas. We strongly recommend that users perform robust evaluations of the models in a particular context and domain before deploying them.

In particular, we caution against using Whisper models to transcribe recordings of individuals taken without their consent or purporting to use these models for any kind of subjective classification. We recommend against use in high-risk domains like decision-making contexts, where flaws in accuracy can lead to pronounced flaws in outcomes. The models are intended to transcribe and translate speech, use of the model for classification is not only not evaluated but also not appropriate, particularly to infer human attributes.


## Training Data

The models are trained on 680,000 hours of audio and the corresponding transcripts collected from the internet. 65% of this data (or 438,000 hours) represents English-language audio and matched English transcripts, roughly 18% (or 126,000 hours) represents non-English audio and English transcripts, while the final 17% (or 117,000 hours) represents non-English audio and the corresponding transcript. This non-English data represents 98 different languages. 

As discussed in [the accompanying paper](https://cdn.openai.com/papers/whisper.pdf), we see that performance on transcription in a given language is directly correlated with the amount of training data we employ in that language.


## Performance and Limitations

Our studies show that, over many existing ASR systems, the models exhibit improved robustness to accents, background noise, technical language, as well as zero shot translation from multiple languages into English; and that accuracy on speech recognition and translation is near the state-of-the-art level. 

However, because the models are trained in a weakly supervised manner using large-scale noisy data, the predictions may include texts that are not actually spoken in the audio input (i.e. hallucination). We hypothesize that this happens because, given their general knowledge of language, the models combine trying to predict the next word in audio with trying to transcribe the audio itself.

Our models perform unevenly across languages, and we observe lower accuracy on low-resource and/or low-discoverability languages or languages where we have less training data. The models also exhibit disparate performance on different accents and dialects of particular languages, which may include higher word error rate across speakers of different genders, races, ages, or other demographic criteria. Our full evaluation results are presented in [the paper accompanying this release](https://cdn.openai.com/papers/whisper.pdf). 

In addition, the sequence-to-sequence architecture of the model makes it prone to generating repetitive texts, which can be mitigated to some degree by beam search and temperature scheduling but not perfectly. Further analysis on these limitations are provided in [the paper](https://cdn.openai.com/papers/whisper.pdf). It is likely that this behavior and hallucinations may be worse on lower-resource and/or lower-discoverability languages.


## Broader Implications

We anticipate that Whisper models’ transcription capabilities may be used for improving accessibility tools. While Whisper models cannot be used for real-time transcription out of the box – their speed and size suggest that others may be able to build applications on top of them that allow for near-real-time speech recognition and translation. The real value of beneficial applications built on top of Whisper models suggests that the disparate performance of these models may have real economic implications.

There are also potential dual use concerns that come with releasing Whisper. While we hope the technology will be used primarily for beneficial purposes, making ASR technology more accessible could enable more actors to build capable surveillance technologies or scale up existing surveillance efforts, as the speed and accuracy allow for affordable automatic transcription and translation of large volumes of audio communication. Moreover, these models may have some capabilities to recognize specific individuals out of the box, which in turn presents safety concerns related both to dual use and disparate performance. In practice, we expect that the cost of transcription is not the limiting factor of scaling up surveillance projects.


### BibTeX entry and citation info
```bibtex
@misc{radford2022whisper,
  doi = {10.48550/ARXIV.2212.04356},
  url = {https://arxiv.org/abs/2212.04356},
  author = {Radford, Alec and Kim, Jong Wook and Xu, Tao and Brockman, Greg and McLeavey, Christine and Sutskever, Ilya},
  title = {Robust Speech Recognition via Large-Scale Weak Supervision},
  publisher = {arXiv},
  year = {2022},
  copyright = {arXiv.org perpetual, non-exclusive license}
}
```
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6193495392799377"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
library_name: ml-agents
tags:
- Pyramids
- deep-reinforcement-learning
- reinforcement-learning
- ML-Agents-Pyramids
---

  # **ppo** Agent playing **Pyramids**
  This is a trained model of a **ppo** agent playing **Pyramids**
  using the [Unity ML-Agents Library](https://github.com/Unity-Technologies/ml-agents).

  ## Usage (with ML-Agents)
  The Documentation: https://unity-technologies.github.io/ml-agents/ML-Agents-Toolkit-Documentation/

  We wrote a complete tutorial to learn to train your first agent using ML-Agents and publish it to the Hub:
  - A *short tutorial* where you teach Huggy the Dog 🐶 to fetch the stick and then play with him directly in your
  browser: https://huggingface.co/learn/deep-rl-course/unitbonus1/introduction
  - A *longer tutorial* to understand how works ML-Agents:
  https://huggingface.co/learn/deep-rl-course/unit5/introduction

  ### Resume the training
  ```bash
  mlagents-learn <your_configuration_file_path.yaml> --run-id=<run_id> --resume
  ```

  ### Watch your Agent play
  You can watch your agent **playing directly in your browser**

  1. If the environment is part of ML-Agents official environments, go to https://huggingface.co/unity
  2. Step 1: Find your model_id: JabrilJacobs/ppo-Pyramids
  3. Step 2: Select your *.nn /*.onnx file
  4. Click on Watch the agent play 👀
  """^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-08-06T05:09:03+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "arxiv:2307.09288"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.688412"^^xsd:dateTime ;
    ns1:object "MLX"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85b6833a0e3a566c8de87c0f42b57ec97f67e03180245edb416823e240ee11d1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:jslin09/Fraud_Case_Verdicts"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.869350"^^xsd:dateTime ;
    ns1:object "thanhduycao"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1a739b1d688a026015aadad9a1aca9a5ddbaa3e48938daa52442b0c8fc0fd0ba> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4919174611568451"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.292554"^^xsd:dateTime ;
    ns1:object "svakulenk0/qrecc"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.453223"^^xsd:dateTime ;
    ns1:object "2021-04-16"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.020088"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/source> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.429346"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5350798070430756"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "apache-2.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5499137043952942"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.430331"^^xsd:dateTime ;
    ns1:object "{'name': 'Xingrun Xing', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5084bd7d1db13fba7c75464ccc31553c091b418df6b730d960b1d807a5d133db> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """<!DOCTYPE html>
<html class="" lang="en">
<head>
    <meta charset="utf-8" />
    <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, user-scalable=no"
    />
    <meta
            name="description"
            content="We're on a journey to advance and democratize artificial intelligence through open source and open science."
    />
    <meta property="fb:app_id" content="1321688464574422" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@huggingface" />
    <meta
            property="og:title"
            content="Hugging Face - The AI community building the future."
    />
    <meta property="og:type" content="website" />

    <title>Hugging Face - The AI community building the future.</title>
    <style>
        body {
            margin: 0;
        }

        main {
            background-color: white;
            min-height: 100vh;
            padding: 7rem 1rem 8rem 1rem;
            text-align: center;
            font-family: Source Sans Pro, ui-sans-serif, system-ui, -apple-system,
            BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans,
            sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol,
            Noto Color Emoji;
        }

        img {
            width: 6rem;
            height: 6rem;
            margin: 0 auto 1rem;
        }

        h1 {
            font-size: 3.75rem;
            line-height: 1;
            color: rgba(31, 41, 55, 1);
            font-weight: 700;
            box-sizing: border-box;
            margin: 0 auto;
        }

        p, a {
            color: rgba(107, 114, 128, 1);
            font-size: 1.125rem;
            line-height: 1.75rem;
            max-width: 28rem;
            box-sizing: border-box;
            margin: 0 auto;
        }

        .dark main {
            background-color: rgb(11, 15, 25);
        }
        .dark h1 {
            color: rgb(209, 213, 219);
        }
        .dark p, .dark a {
            color: rgb(156, 163, 175);
        }
    </style>
    <script>
        // On page load or when changing themes, best to add inline in `head` to avoid FOUC
        const key = "_tb_global_settings";
        let theme = window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
        try {
            const storageTheme = JSON.parse(window.localStorage.getItem(key)).theme;
            if (storageTheme) {
                theme = storageTheme === "dark" ? "dark" : "light";
            }
        } catch (e) {}
        if (theme === "dark") {
            document.documentElement.classList.add("dark");
        } else {
            document.documentElement.classList.remove("dark");
        }
    </script>
</head>

<body>
<main>
    <img
            src="https://cdn-media.huggingface.co/assets/huggingface_logo.svg"
            alt=""
    />
    <div>
        <h1>429</h1>
        <p>We had to rate limit you. If you think it's an error, send us <a href="mailto:website@huggingface.co">an email</a></p>
    </div>
</main>
</body>
</html>"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5976539850234985"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "black-forest-labsFLUX.1-dev"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.454827"^^xsd:dateTime ;
    ns1:object """We introduce C-Pack, a package of resources that significantly advance the
field of general Chinese embeddings. C-Pack includes three critical resources.
1) C-MTEB is a comprehensive benchmark for Chinese text embeddings covering 6
tasks and 35 datasets. 2) C-MTP is a massive text embedding dataset curated
from labeled and unlabeled Chinese corpora for training embedding models. 3)
C-TEM is a family of embedding models covering multiple sizes. Our models
outperform all prior Chinese text embeddings on C-MTEB by up to +10% upon the
time of the release. We also integrate and optimize the entire suite of
training methods for C-TEM. Along with our resources on general Chinese
embedding, we release our data and models for English text embeddings. The
English models achieve state-of-the-art performance on MTEB benchmark;
meanwhile, our released English data is 2 times larger than the Chinese data.
All these resources are made publicly available at
https://github.com/FlagOpen/FlagEmbedding."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.772019"^^xsd:dateTime ;
    ns1:object "kategaranina"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/83d2ad9ecbe1efe91b88526c0d0a22b67ee3915db215cf33f6f7ef1357cd6573> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/sircesoc/dqn-SpaceInvadersNoFrameskip-v4> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.685863"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5670ef7e87a4fbee3fa95024561f672fca6cc6a159a62e20ed73b98d267a72bd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "The name of the split."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.437133"^^xsd:dateTime ;
    ns1:object "{'name': 'Jeff Dean', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "jw"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.024044"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/97b8857097478874bd8e9cb141256c1acde4789374ce4d72be5580b0da08f403> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.650832"^^xsd:dateTime ;
    ns1:object "Document Question Answering"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5294100683a6737ae3cdcdb512f4b8459993c27fd8f86917ce5e595178c28f6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.3703840970993042"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.296032"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/esnli"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cafa6cfd9a4170cbf6a99f2d8b42715517f11068dc92b807e31dad9ab0535893> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4978265315294266"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.409464"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8e97617d5a4a866db41b3c71e04d726f4ec71cfcc1af9197f70f7ac9cbd7afe4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.271183"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/lachiewyoung"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f5a6a15b057055acaed46aabd835cf3eb56fa2343723cec43da3298c6a298537> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5763182938098907"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "bloom-560m-finetuned-fraud"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5380240380764008"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.297000"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/qed"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/43bc0319b35edce6a819b7513d5d158c1ea9bd4b7e1f558fabd51fb09b4f7755> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.671764"^^xsd:dateTime ;
    ns1:object "Tabular Regression"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1054f9c274823fbeb3d1ab19d0f2344791cee18915cdb21fb1437bba03ba8fb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/black-forest-labs/FLUX.1-dev> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.660188227891922"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6325279772281647"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "base_model:finetune:nguyenvulebinh/wav2vec2-base-vietnamese-250h"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ur"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "rl_course_vizdoom_health_gathering_supreme"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.678404"^^xsd:dateTime ;
    ns1:object "State-of-the-art library for diffusion models across multiple modalities like vision and audio."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d462b48c96b732d754a938aa86dbd16bfb7478ca5b0c1f1f006c611c112094e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.635639876127243"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The copyright holder for the Mistral-7B-Instruct-v0.2 model is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.654318"^^xsd:dateTime ;
    ns1:object "Image toText"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/266c130bc128debb0db48b7a2e58c6423c7bafb2445fcccd68e2da192f3487d1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.442245"^^xsd:dateTime ;
    ns1:object "{'name': 'Jeremy Fu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.258420"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79cf083846a8329d2912fcd7f375233c37a54917af291bb945f0b58bc735b8ad> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.596689"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/03ff21e013ce78d894192593d219c2692f67183d2062dbcf75c260726e60181a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.294333"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6726868748664856"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The author of this content is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.696352"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a2f3a1fe1480acaf0753eb2d5ef88519c7b81e26e6505fed6d5c93c3a5119a65> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.239297"^^xsd:dateTime ;
    ns1:object "meta-llama/Llama-2-7b-hf"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/35ddc796a6d136e9bf8810f1907a6a31657c5fb80bef078ab577c5edc3f59cc0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/meta-llama/Llama-2-7b-hf"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "et"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5137175619602203"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "FLUX.1-dev-onnx"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.446915"^^xsd:dateTime ;
    ns1:object "{'name': 'Jeremy Reizenstein', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.3981216251850128"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.432351"^^xsd:dateTime ;
    ns1:object "{'name': 'Barret Zoph', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3686d15023ade4b08558f72e9dd33a5a134bb1bf2f4238ea9c93dc3ad883f8db> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.634324312210083"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.597260"^^xsd:dateTime ;
    ns1:object "custom-implementation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04b73aa26b48d6f1e64d5819ec986a901d3b49c7f37b35f4798db992ac65c200> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4687767028808594"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.669203"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21a4b3b0fe861021548d89e241eb815b3c147c6d12ec9eade6925be45bc78650> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.294954"^^xsd:dateTime ;
    ns1:object "gsm8k"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.458714"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.869503"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/thanhduycao"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1a739b1d688a026015aadad9a1aca9a5ddbaa3e48938daa52442b0c8fc0fd0ba> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/jslin09/bloom-560m-finetuned-fraud> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "tf"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.41870635747909546"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.503777951002121"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "license:apache-2.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.715881"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a54675fb15dfb4661e88de341c63a6b80937df4a774c2e61e96025215b36b9de> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5630702078342438"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/is_description_translated> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.465154"^^xsd:dateTime ;
    ns1:object "{'name': 'Qiwei Ye', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/nanos> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/g_adj> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.442746"^^xsd:dateTime ;
    ns1:object "{'name': 'Cynthia Gao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "arxiv:2310.06825"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.433958"^^xsd:dateTime ;
    ns1:object "{'name': 'Mirac Suzgun', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/table_header> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "license:mit"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/input> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5775845348834991"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "base_model:adapter:black-forest-labs/FLUX.1-dev"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6027307212352753"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5325852930545807"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.908226"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/29d9051dd7490ee997ef15f45bf916274706268eab63f2c7bff767388d51cf25> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.449010"^^xsd:dateTime ;
    ns1:object "{'name': 'Zheng Yan', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.833374"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/898caa90de5afdec703301d3cfdf0da7aa6bc966ea4ada73d27d88cf3f1961a6> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/cleanrl/UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.661841"^^xsd:dateTime ;
    ns1:object "Table Question Answering"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/017f19456e7a37fe3c1ad51165020b62cc12497d5d20651e073e3520a5099eb9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.649860"^^xsd:dateTime ;
    ns1:object "Converts image content into textual descriptions or captions."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/49bf7b39c8a2a4cb84ab43bc3c320de6e0c1da1253ebf022a5d0a84737581119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.639169"^^xsd:dateTime ;
    ns1:object "tags"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6b72a43d7396497fe9733cb91a9e688db073b7c1c583e2c5fca339bd414a4dac> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f57740f97820ddb55f90898c07a60a736e9a9030d5eac125af5c595ad0638c8f> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.043372"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.676051"^^xsd:dateTime ;
    ns1:object "High-performance numerical computing library that combines NumPy, automatic differentiation, and GPU/TPU support for ML research."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.699461"^^xsd:dateTime ;
    ns1:object "paddlenlp"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/956922acae22f21b82ce000e45d4739baf3f94e8b6eb2825a93166a8ccfc2fbf> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6430703997612"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.643700"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55c2ef29f4fc34014e7c41f2439cd686ebcc0bd4d1a02299b7491148b03bd06b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6150646805763245"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the Mistral-7B-Instruct-v0.2 model are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-11-30T05:32:06+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/main_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/key> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/sircesoc/dqn-SpaceInvadersNoFrameskip-v4/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/url"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/url> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ml"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.355141"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/DianaJin/sample"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/63c4690edf3557f17b07f48296b33ccc383956a845d01233d59d9e359bf38c99> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "t5"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2025-03-14T02:07:39+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.451253"^^xsd:dateTime ;
    ns1:object """Dense retrieval needs to learn discriminative text embeddings to represent
the semantic relationship between query and document. It may benefit from the
using of large language models (LLMs), given LLMs' strong capability on
semantic understanding. However, the LLMs are pre-trained by text generation
tasks, whose working pattern is completely different from representing texts as
embeddings. As a result, it is imperative to study how to adapt LLMs properly
so that they can be effectively initialized as the backbone encoder for dense
retrieval.
  In this paper, we propose a novel approach, called LLaRA (LLM adapted for
dense RetrievAl), which works as a post-hoc adaptation of LLM for the dense
retrieval application. LLaRA consists of two pretext tasks: EBAE
(Embedding-Based Auto-Encoding) and EBAR (Embedding-Based Auto-Regression),
where the text embeddings from LLM are used to reconstruct the tokens for the
input sentence and predict the tokens for the next sentence, respectively.
LLaRA turns out to be simple, lightweight, and highly effective. It is applied
to adapt LLaMA-2-7B (base) on the Wikipedia corpus, where it substantially
improves the model's fine-tuned performances on a variety of dense retrieval
benchmarks, like MSMARCO and BEIR. Our model and code will be made publicly
available at BGE repository."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.400102"^^xsd:dateTime ;
    ns1:object "ML-Agents-SnowballTarget"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/46bf92c851d51c701bc0d7be65ae6244619cbe1fe5bdf474aea372173952ef41> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.684650"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6fd4d85e3416654bf33d9c5f3803b3e9900ce78a6309e4e6a84b2499ad4b7981> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9eb6952b89569e3a3863aebca62fd4619833b31bda93a0d0b5678c6627ef9275> ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87e3b3dad52adc5c12d2dc386ce41da75f306c4b73d2d497aa9c5f22c6de6e87> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "am"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ms"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.697711"^^xsd:dateTime ;
    ns1:object "Stanza"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7daea98679eae3b5819f476833cada39b566629edb49ee1f55db0016e8ecf118> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.433157"^^xsd:dateTime ;
    ns1:object "{'name': 'Mostafa Dehghani', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:CyberHarem/chokai_azurlane"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-10-10T18:01:54+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.437965"^^xsd:dateTime ;
    ns1:object "{'name': 'Jason Wei', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.239128"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/MLModel> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/35ddc796a6d136e9bf8810f1907a6a31657c5fb80bef078ab577c5edc3f59cc0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5935080051422119"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4163966178894043"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/b751528b59fc7a0677c52c99b85d41f69866dad58deffdbf1e33a510f27bc2f5> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.642932116985321"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The intended use of jinkrsmodel is not specified in the given context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/private_tests/input"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.240965"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5395013988018036"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.310717"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.657365"^^xsd:dateTime ;
    ns1:object "Classifies images into categories not seen during training."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/427579e1091b3a9a3bf55b54c4167319ee1e7fd37d7a1389722fcb73d6a8901c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6710058748722076"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.664334"^^xsd:dateTime ;
    ns1:object "Creates concise summaries of longer texts."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/251690051accbb99d763e77f3aed9b94caecf82b9e2db7c17f8adfca42a4ca39> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7503440678119659"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.038012"^^xsd:dateTime ;
    ns1:object "image-generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/03a8010a33b7e6718a7b9231b9c21ef9f07a99b444199c8533c744e5ddf1b77a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/source> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "fr"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/43bc0319b35edce6a819b7513d5d158c1ea9bd4b7e1f558fabd51fb09b4f7755> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.241137"^^xsd:dateTime ;
    ns1:object "text generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.699857"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c0097ccf601f8114782f9c0c86386c6c995d5b2e12eddde21fdd7251761ee1fd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2022-03-02T23:29:05+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/public_tests"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5001678764820099"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5476823151111603"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/293ad034f899dc681b5be10c715f25c59fa7f5261f229b66d796246e10927354> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/plain_text/domain> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/nid> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/2529572666d8ae917752f418f0b008b820cf821a3ba355927ca159454740dce7> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6670164167881012"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The potential risks associated with the model are not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.889558"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5084bd7d1db13fba7c75464ccc31553c091b418df6b730d960b1d807a5d133db> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.429846"^^xsd:dateTime ;
    ns1:object "{'name': 'Shitao Xiao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.477481946349144"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6153073012828827"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Model Category"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/g_adj> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.48521892726421356"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "template:diffusion-lora"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.430585"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-09-02T23:52:21+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.47100991010665894"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.666648"^^xsd:dateTime ;
    ns1:object "Predicts missing words or tokens in masked text."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a464d85abf29c8b2f8dc299e9fe390a547c8450e42b7ab0ccaac88fdcaeaaa84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.443116"^^xsd:dateTime ;
    ns1:object "{'name': 'Naman Goyal', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.621420"^^xsd:dateTime ;
    ns1:object "bert"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0c3d01ed44dc2940ae38707146a02c16bc80cc8637ce48ac5f3125b7c6fb2982> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Splits for the raw config."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/cafa6cfd9a4170cbf6a99f2d8b42715517f11068dc92b807e31dad9ab0535893> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.334007"^^xsd:dateTime ;
    ns1:object "text to image"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/danmorris427/ppo-SnowballTarget/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/is_description_translated"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/is_description_translated> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "plain_text/text"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.682821"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3135ad7c615e157f80ecab1b96d4167d2e6c147b2e563721a652a5b56845418c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.257311"^^xsd:dateTime ;
    ns1:object "transformers"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.285445"^^xsd:dateTime ;
    ns1:object "mistral"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ddb15bfa0ef843723bc4c8a81ab1d826b1fc4ff36ed13faf8f8f3841261978b8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5107923299074173"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4212035536766052"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-03-04T01:31:41+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.469393"^^xsd:dateTime ;
    ns1:object "{'name': 'Alec Radford', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.643315"^^xsd:dateTime ;
    ns1:object "4-bit precision"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df2c9c7dc08f5514331c35b3bf3e4da58de6a14c0724dc40f90a3e588f9844dd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6499086618423462"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: apache-2.0
pipeline_tag: text-generation
tags:
- finetuned
inference: true
widget:
- messages:
  - role: user
    content: What is your favorite condiment?
---

# Model Card for Mistral-7B-Instruct-v0.2

The Mistral-7B-Instruct-v0.2 Large Language Model (LLM) is an improved instruct fine-tuned version of [Mistral-7B-Instruct-v0.1](https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.1).

For full details of this model please read our [paper](https://arxiv.org/abs/2310.06825) and [release blog post](https://mistral.ai/news/la-plateforme/).

## Instruction format

In order to leverage instruction fine-tuning, your prompt should be surrounded by `[INST]` and `[/INST]` tokens. The very first instruction should begin with a begin of sentence id. The next instructions should not. The assistant generation will be ended by the end-of-sentence token id.

E.g.
```
text = "<s>[INST] What is your favourite condiment? [/INST]"
"Well, I'm quite partial to a good squeeze of fresh lemon juice. It adds just the right amount of zesty flavour to whatever I'm cooking up in the kitchen!</s> "
"[INST] Do you have mayonnaise recipes? [/INST]"
```

This format is available as a [chat template](https://huggingface.co/docs/transformers/main/chat_templating) via the `apply_chat_template()` method:

```python
from transformers import AutoModelForCausalLM, AutoTokenizer

device = "cuda" # the device to load the model onto

model = AutoModelForCausalLM.from_pretrained("mistralai/Mistral-7B-Instruct-v0.2")
tokenizer = AutoTokenizer.from_pretrained("mistralai/Mistral-7B-Instruct-v0.2")

messages = [
    {"role": "user", "content": "What is your favourite condiment?"},
    {"role": "assistant", "content": "Well, I'm quite partial to a good squeeze of fresh lemon juice. It adds just the right amount of zesty flavour to whatever I'm cooking up in the kitchen!"},
    {"role": "user", "content": "Do you have mayonnaise recipes?"}
]

encodeds = tokenizer.apply_chat_template(messages, return_tensors="pt")

model_inputs = encodeds.to(device)
model.to(device)

generated_ids = model.generate(model_inputs, max_new_tokens=1000, do_sample=True)
decoded = tokenizer.batch_decode(generated_ids)
print(decoded[0])
```

## Model Architecture
This instruction model is based on Mistral-7B-v0.1, a transformer model with the following architecture choices:
- Grouped-Query Attention
- Sliding-Window Attention
- Byte-fallback BPE tokenizer

## Troubleshooting
- If you see the following error:
```
Traceback (most recent call last):
File "", line 1, in
File "/transformers/models/auto/auto_factory.py", line 482, in from_pretrained
config, kwargs = AutoConfig.from_pretrained(
File "/transformers/models/auto/configuration_auto.py", line 1022, in from_pretrained
config_class = CONFIG_MAPPING[config_dict["model_type"]]
File "/transformers/models/auto/configuration_auto.py", line 723, in getitem
raise KeyError(key)
KeyError: 'mistral'
```

Installing transformers from source should solve the issue
pip install git+https://github.com/huggingface/transformers

This should not be required after transformers-v4.33.4.

## Limitations

The Mistral 7B Instruct model is a quick demonstration that the base model can be easily fine-tuned to achieve compelling performance. 
It does not have any moderation mechanisms. We're looking forward to engaging with the community on ways to
make the model finely respect guardrails, allowing for deployment in environments requiring moderated outputs.

## The Mistral AI Team

Albert Jiang, Alexandre Sablayrolles, Arthur Mensch, Blanche Savary, Chris Bamford, Devendra Singh Chaplot, Diego de las Casas, Emma Bou Hanna, Florian Bressand, Gianna Lengyel, Guillaume Bour, Guillaume Lample, Lélio Renard Lavaud, Louis Ternon, Lucile Saulnier, Marie-Anne Lachaux, Pierre Stock, Teven Le Scao, Théophile Gervet, Thibaut Lavril, Thomas Wang, Timothée Lacroix, William El Sayed."""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.300599"^^xsd:dateTime ;
    ns1:object "text2text generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.259371"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04151ef09fe56a2be18a7d842066720d6e7cee10ed5bf1a3363193444decd94d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.673209"^^xsd:dateTime ;
    ns1:object "Applies AI for robot control, perception, and decision-making."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2f28cc27d9dac219caa56a5425741f7391153065f1558fe7418d6ccc1c598fb4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4592093974351883"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The copyright holder is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.809811"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c0c122e894fe5fc8434b18f17fe730a8d82a566209e08077c9645df8bc3ebeba> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.284925"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.330475389957428"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.579364538192749"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6172373294830322"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Dataset ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/jslin09/bloom-560m-finetuned-fraud"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sl"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.463456"^^xsd:dateTime ;
    ns1:object "Long Context Compression with Activation Beacon"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/7ad8435aa27d409e8692d8f6043742210150fe3cf420b9abaad32ffe8a63b7c7> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: apache-2.0
tags:
- generated_from_trainer
metrics:
- accuracy
- precision
- recall
- f1
model-index:
- name: bert-base-uncased-finetuned-3d-sentiment
  results: []
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# bert-base-uncased-finetuned-3d-sentiment

This model is a fine-tuned version of [bert-base-uncased](https://huggingface.co/bert-base-uncased) on the None dataset.
It achieves the following results on the evaluation set:
- Loss: 0.9271
- Accuracy: 0.7392
- Precision: 0.7455
- Recall: 0.7392
- F1: 0.7394

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 2e-05
- train_batch_size: 16
- eval_batch_size: 16
- seed: 42
- gradient_accumulation_steps: 4
- total_train_batch_size: 64
- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08
- lr_scheduler_type: linear
- lr_scheduler_warmup_steps: 6381
- num_epochs: 7
- mixed_precision_training: Native AMP

### Training results

| Training Loss | Epoch | Step  | Validation Loss | Accuracy | Precision | Recall | F1     |
|:-------------:|:-----:|:-----:|:---------------:|:--------:|:---------:|:------:|:------:|
| 0.8443        | 1.0   | 1595  | 0.8265          | 0.6659   | 0.6920    | 0.6659 | 0.6629 |
| 0.6037        | 2.0   | 3190  | 0.7380          | 0.7021   | 0.7207    | 0.7021 | 0.7014 |
| 0.516         | 3.0   | 4785  | 0.6740          | 0.7246   | 0.7337    | 0.7246 | 0.7234 |
| 0.4269        | 4.0   | 6380  | 0.7221          | 0.7290   | 0.7383    | 0.7290 | 0.7271 |
| 0.3149        | 5.0   | 7975  | 0.8368          | 0.7237   | 0.7422    | 0.7237 | 0.7230 |
| 0.1996        | 6.0   | 9570  | 0.9271          | 0.7392   | 0.7455    | 0.7392 | 0.7394 |
| 0.1299        | 7.0   | 11165 | 1.1062          | 0.7358   | 0.7461    | 0.7358 | 0.7361 |


### Framework versions

- Transformers 4.26.1
- Pytorch 1.13.1+cu117
- Datasets 2.10.1
- Tokenizers 0.13.3
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.440899"^^xsd:dateTime ;
    ns1:object "{'name': 'Shruti Bhosale', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/danmorris427/ppo-SnowballTarget> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6544404923915863"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.435858"^^xsd:dateTime ;
    ns1:object "{'name': 'Gaurav Mishra', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.462665"^^xsd:dateTime ;
    ns1:object "{'name': 'Thomas Wang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.399141"^^xsd:dateTime ;
    ns1:object "unity-ml-agents"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b0f442b1bed2cd3bb1be33408f94800ba60c1c82505ebb0328621109dadc9b5a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/venetis/bert-base-uncased-finetuned-3d-sentiment/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/kategaranina/lt2t_lf_to_text> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.439794659614563"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/farleyknight/patent-summarization-fb-bart-base-2022-09-20"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4046880453824997"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7107231914997101"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.662579"^^xsd:dateTime ;
    ns1:object "Provides answers to questions based on given context."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6fa5b295a0420d9a3cc819e672ebdd61720c48761f8c2960d28ff7f7655875be> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.296843"^^xsd:dateTime ;
    ns1:object "qed"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/43bc0319b35edce6a819b7513d5d158c1ea9bd4b7e1f558fabd51fb09b4f7755> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.445602"^^xsd:dateTime ;
    ns1:object "{'name': 'Yinghai Lu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sw"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5168619155883789"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.437808"^^xsd:dateTime ;
    ns1:object "{'name': 'Quoc V. Le', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/594a6f3cf66106516dc4e80f44dbe528cdcf0fb397d75a65d1b3b2a81dfc0f92> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6510063409805298"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The model category is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/g_ids> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.435389"^^xsd:dateTime ;
    ns1:object "{'name': 'Kevin Robinson', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.450463"^^xsd:dateTime ;
    ns1:object "{'name': 'Thomas Scialom', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.647770"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/43625c04f736f13b1f357a0d9357ed3dbc8e216e352796b03fb0fa69aea1f93b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.447395"^^xsd:dateTime ;
    ns1:object "{'name': 'Alan Schelten', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/CyberHarem/chokai_azurlane/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6009793877601624"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about contributors or authors. Therefore, the answer is \"Information not found\"."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2022-10-21T09:59:24+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.440401"^^xsd:dateTime ;
    ns1:object "{'name': 'Nikolay Bashlykov', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.459992"^^xsd:dateTime ;
    ns1:object "cs.LG"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'cf_rating' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_rating> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6249355673789978"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object """Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors"""^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/rangapriyabatchu/black-forest-labsFLUX.1-dev> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/jslin09/bloom-560m-finetuned-fraud/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "plain_text/domain"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/domain> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ddb15bfa0ef843723bc4c8a81ab1d826b1fc4ff36ed13faf8f8f3841261978b8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "yi"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.616113156080246"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5891779363155365"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the evaluation data or the dataset used for validating the model. Therefore, the answer is \"Information not found\"."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.384523"^^xsd:dateTime ;
    ns1:object "danmorris427"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/968ecedd3c85e02e2a1570cdb819daefb47aff2abc7e1d647a5f0ef48f5ceb3d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.696525"^^xsd:dateTime ;
    ns1:object "Graphcore"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a2f3a1fe1480acaf0753eb2d5ef88519c7b81e26e6505fed6d5c93c3a5119a65> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'nid' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/nid> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ba386c19594b5e2c45538f0ad668a14203edcbe442437836169ed56795dd7abb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.864744"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'options' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.666087"^^xsd:dateTime ;
    ns1:object "Transforms input text into a different textual form."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/hugging-robot/ppo-Huggy/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5453827083110809"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "uz"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.451430"^^xsd:dateTime ;
    ns1:object "2023-12-24"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "nn"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """
---
      tags:
      - unity-ml-agents
      - ml-agents
      - deep-reinforcement-learning
      - reinforcement-learning
      - ML-Agents-SnowballTarget
      library_name: ml-agents
---
    
  # **ppo** Agent playing **SnowballTarget**
  This is a trained model of a **ppo** agent playing **SnowballTarget** using the [Unity ML-Agents Library](https://github.com/Unity-Technologies/ml-agents).
  
  ## Usage (with ML-Agents)
  The Documentation: https://github.com/huggingface/ml-agents#get-started
  We wrote a complete tutorial to learn to train your first agent using ML-Agents and publish it to the Hub:


  ### Resume the training
  ```
  mlagents-learn <your_configuration_file_path.yaml> --run-id=<run_id> --resume
  ```
  ### Watch your Agent play
  You can watch your agent **playing directly in your browser:**.
  
  1. Go to https://huggingface.co/spaces/unity/ML-Agents-SnowballTarget
  2. Step 1: Write your model_id: danmorris427/ppo-SnowballTarget
  3. Step 2: Select your *.nn /*.onnx file
  4. Click on Watch the agent play 👀
  """^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/openai/whisper-base"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/annotation"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/annotation> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
tags:
- text-classification
- adapterhub:rc/multirc
- bert
- adapter-transformers
language:
- en
---

# Adapter `AdapterHub/bert-base-uncased-pf-multirc` for bert-base-uncased

An [adapter](https://adapterhub.ml) for the `bert-base-uncased` model that was trained on the [rc/multirc](https://adapterhub.ml/explore/rc/multirc/) dataset and includes a prediction head for classification.

This adapter was created for usage with the **[adapter-transformers](https://github.com/Adapter-Hub/adapter-transformers)** library.

## Usage

First, install `adapter-transformers`:

```
pip install -U adapter-transformers
```
_Note: adapter-transformers is a fork of transformers that acts as a drop-in replacement with adapter support. [More](https://docs.adapterhub.ml/installation.html)_

Now, the adapter can be loaded and activated like this:

```python
from transformers import AutoModelWithHeads

model = AutoModelWithHeads.from_pretrained("bert-base-uncased")
adapter_name = model.load_adapter("AdapterHub/bert-base-uncased-pf-multirc", source="hf")
model.active_adapters = adapter_name
```

## Architecture & Training

The training code for this adapter is available at https://github.com/adapter-hub/efficient-task-transfer.
In particular, training configurations for all tasks can be found [here](https://github.com/adapter-hub/efficient-task-transfer/tree/master/run_configs).


## Evaluation results

Refer to [the paper](https://arxiv.org/pdf/2104.08247) for more information on results.

## Citation

If you use this adapter, please cite our paper ["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247):

```bibtex
@inproceedings{poth-etal-2021-pre,
    title = "{W}hat to Pre-Train on? {E}fficient Intermediate Task Selection",
    author = {Poth, Clifton  and
      Pfeiffer, Jonas  and
      R{"u}ckl{'e}, Andreas  and
      Gurevych, Iryna},
    booktitle = "Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing",
    month = nov,
    year = "2021",
    address = "Online and Punta Cana, Dominican Republic",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/2021.emnlp-main.827",
    pages = "10585--10605",
}
```"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "lb"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.295110"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/gsm8k"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
library_name: transformers
license: other
base_model: meta-llama/Llama-2-7b-hf
tags:
- llama-factory
- full
- generated_from_trainer
model-index:
- name: llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096
  results: []
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096

This model is a fine-tuned version of [meta-llama/Llama-2-7b-hf](https://huggingface.co/meta-llama/Llama-2-7b-hf) on the 0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096 dataset.

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 2e-05
- train_batch_size: 32
- eval_batch_size: 8
- seed: 42
- distributed_type: multi-GPU
- num_devices: 4
- total_train_batch_size: 128
- total_eval_batch_size: 32
- optimizer: Use adamw_torch with betas=(0.9,0.999) and epsilon=1e-08 and optimizer_args=No additional optimizer arguments
- lr_scheduler_type: cosine
- lr_scheduler_warmup_ratio: 0.03
- num_epochs: 3.0

### Training results



### Framework versions

- Transformers 4.46.1
- Pytorch 2.4.0+cu121
- Datasets 2.20.0
- Tokenizers 0.20.3
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.44150835275650024"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/cf_contest_id"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_contest_id> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.833135"^^xsd:dateTime ;
    ns1:object "Huggy"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5853b54d1c6d56985304fe7287a88724833916e1a98d9761de36a0841ffafb30> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/cleanrl/UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.695774"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4acb0244517b271c7719eadb638a9049f7dfa43a14bf6eb119d83c2dbc6d856f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/CyberHarem/chokai_azurlane/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.663764"^^xsd:dateTime ;
    ns1:object "Converts text from one language to another."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dd477ce37bc2c08950a1d845aa243dff8c0e03de15cc42b9b35295d514538a84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.43716080486774445"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.908390"^^xsd:dateTime ;
    ns1:object "audio"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/29d9051dd7490ee997ef15f45bf916274706268eab63f2c7bff767388d51cf25> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.405963"^^xsd:dateTime ;
    ns1:object "farleyknight/big_patent_5_percent"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85c031d4978df58bad8b74228a432699b1fdeaea4c730871d5eb91de8d9a42ad> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ja"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "tg"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base.en> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'cf_index' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_index> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/sent> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.452677"^^xsd:dateTime ;
    ns1:object "What to Pre-Train on? Efficient Intermediate Task Selection"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/863d9e15edc2c98657749abae884b48544051490f76ea0e913adf85a3f2727a5> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.621267"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0c3d01ed44dc2940ae38707146a02c16bc80cc8637ce48ac5f3125b7c6fb2982> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'interpret' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/interpret> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6971648633480072"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/thanhduycao/wav2vec2-base-demo-aug/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.293340"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9773f8d647166503d14c7a05030b47d6b1610f17bdd55e8c98cb4fc2b13a3379> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.464327"^^xsd:dateTime ;
    ns1:object "cs.AI"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
license: other
license_name: flux-1-dev-non-commercial-license
license_link: https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md
extra_gated_prompt: By clicking "Agree", you agree to the [FluxDev Non-Commercial
  License Agreement](https://huggingface.co/black-forest-labs/FLUX.1-dev-onnx/blob/main/LICENSE.md)
  and acknowledge the [Acceptable Use Policy](https://huggingface.co/black-forest-labs/FLUX.1-dev-onnx/blob/main/POLICY.md).
tags:
- text-to-image
- image-generation
- flux
---

![FLUX.1 [dev] Grid](./dev_grid.jpg)

`FLUX.1 [dev]` is a 12 billion parameter rectified flow transformer capable of generating images from text descriptions.
For more information, please read our [blog post](https://blackforestlabs.ai/announcing-black-forest-labs/).

This repository holds [ONNX](https://github.com/onnx/onnx) exports of FLUX.1 [dev] in BF16, FP8, and FP4 precision. 
The main repository of this model can be found [here](https://huggingface.co/black-forest-labs/FLUX.1-dev).

# Usage
We provide a reference implementation of `FLUX.1 [dev]`, as well as sampling code, in a dedicated [github repository](https://github.com/black-forest-labs/flux).
Developers and creatives looking to build on top of `FLUX.1 [dev]` are encouraged to use this as a starting point."""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.648912"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ddb15bfa0ef843723bc4c8a81ab1d826b1fc4ff36ed13faf8f8f3841261978b8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "bert-base-uncased-finetuned-3d-sentiment"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.45558539032936096"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the software are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.620908"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7ad8435aa27d409e8692d8f6043742210150fe3cf420b9abaad32ffe8a63b7c7> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "tf"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4347943663597107"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/time_limit"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'untranslated_description' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/untranslated_description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5882343649864197"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.294803"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.450121"^^xsd:dateTime ;
    ns1:object "{'name': 'Robert Stojnic', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "default/abstract"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/abstract> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6179392635822296"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.498502254486084"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.435695"^^xsd:dateTime ;
    ns1:object "{'name': 'Sharan Narang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.49602851271629333"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.819373"^^xsd:dateTime ;
    ns1:object "hugging-robot"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2cd4674539f52a4c1a66b7cdd0a260e2f7f883d39de352d2bcbd28828386123c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "hi"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.947674"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.866345"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/223afdd384d0977fe2fa385fb4e5209cc141fbe57fdb0275078209001f9c2031> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized/rationale> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/main/question> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/difficulty"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/difficulty> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7630856335163116"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ln"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.643662691116333"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.430171"^^xsd:dateTime ;
    ns1:object "{'name': 'Peitian Zhang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.939002"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6901218891143799"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'topic' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/topic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.311234"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/1910.09700"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.932370"^^xsd:dateTime ;
    ns1:object "facebook"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/11ee21b926795a2b7d2cb2d939044519ace34ac86e6b6a59a47dcb4bba5eb7a4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/farleyknight/patent-summarization-fb-bart-base-2022-09-20/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.665729"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "The name of the split."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.651402"^^xsd:dateTime ;
    ns1:object "Depth Estimation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/40e5b840897abb6f44300acdb8df19e9ba787840ae3899b5cff54ee848bd4df6> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4e5443728f51b2323bf3a1c4a6a6d8612484cbca0a8b0beeb5fb0258d1df5196> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "tokenized/split"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.675467"^^xsd:dateTime ;
    ns1:object "End-to-end open source platform for ML with comprehensive tools and libraries for building and deploying models at scale."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f38a4d1014d3cc9f5709e2ecd78f5809ca2397dd49ed420aa2e4a0ab4210a289> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/num_func> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6773373186588287"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "mit"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.257147"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.428799"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2311.13534"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/04151ef09fe56a2be18a7d842066720d6e7cee10ed5bf1a3363193444decd94d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'question' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.568484902381897"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/realwiz/noggles> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "la"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:qed"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
library_name: ml-agents
tags:
- Huggy
- deep-reinforcement-learning
- reinforcement-learning
- ML-Agents-Huggy
---

  # **ppo** Agent playing **Huggy**
  This is a trained model of a **ppo** agent playing **Huggy**
  using the [Unity ML-Agents Library](https://github.com/Unity-Technologies/ml-agents).

  ## Usage (with ML-Agents)
  The Documentation: https://unity-technologies.github.io/ml-agents/ML-Agents-Toolkit-Documentation/

  We wrote a complete tutorial to learn to train your first agent using ML-Agents and publish it to the Hub:
  - A *short tutorial* where you teach Huggy the Dog 🐶 to fetch the stick and then play with him directly in your
  browser: https://huggingface.co/learn/deep-rl-course/unitbonus1/introduction
  - A *longer tutorial* to understand how works ML-Agents:
  https://huggingface.co/learn/deep-rl-course/unit5/introduction

  ### Resume the training
  ```bash
  mlagents-learn <your_configuration_file_path.yaml> --run-id=<run_id> --resume
  ```

  ### Watch your Agent play
  You can watch your agent **playing directly in your browser**

  1. If the environment is part of ML-Agents official environments, go to https://huggingface.co/unity
  2. Step 1: Find your model_id: hugging-robot/ppo-Huggy
  3. Step 2: Select your *.nn /*.onnx file
  4. Click on Watch the agent play 👀
  """^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/heidragon3045/rl_course_vizdoom_health_gathering_supreme"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6502285897731781"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.441254"^^xsd:dateTime ;
    ns1:object "{'name': 'Lukas Blecher', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/thanhduycao/wav2vec2-base-demo-aug/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5519991517066956"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6324747502803802"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.452844"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2104.08247"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.659114"^^xsd:dateTime ;
    ns1:object "Generates 3D models or scenes from textual descriptions."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dc96ea445d125873bc02183accca8dffafbc58c6100167ef5b113919f5afb57e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.321819"^^xsd:dateTime ;
    ns1:object "jax"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
tags:
- text-to-image
- lora
- diffusers
- template:diffusion-lora
widget:
- text: '-'
  output:
    url: images/roo logo - Copy.PNG
base_model: black-forest-labs/FLUX.1-dev
---
# Baby Roo

<Gallery />

## Model description 



![images.jpg](https:&#x2F;&#x2F;cdn-uploads.huggingface.co&#x2F;production&#x2F;uploads&#x2F;6783dbf11da7cdb6f9f48422&#x2F;ohyGdTthSqT2T0M66wsPM.jpeg)



## Download model


[Download](/rangapriyabatchu/black-forest-labsFLUX.1-dev/tree/main) them in the Files & versions tab.
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/logic> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/aab31c422baf7f2434e14a6dd6d0ca4ab2f1a7ac240c7e219b52a3c74e708277> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.432841"^^xsd:dateTime ;
    ns1:object "{'name': 'Yunxuan Li', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6537949740886688"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the distribution of the model."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.44447124004364014"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Split> ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
license: other
license_name: flux-1-dev-non-commercial-license
license_link: https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md
extra_gated_prompt: By clicking "Agree", you agree to the [FluxDev Non-Commercial
  License Agreement](https://huggingface.co/black-forest-labs/FLUX.1-dev-onnx/blob/main/LICENSE.md)
  and acknowledge the [Acceptable Use Policy](https://huggingface.co/black-forest-labs/FLUX.1-dev-onnx/blob/main/POLICY.md).
tags:
- text-to-image
- image-generation
- flux
---

![FLUX.1 [dev] Grid](./dev_grid.jpg)

`FLUX.1 [dev]` is a 12 billion parameter rectified flow transformer capable of generating images from text descriptions.
For more information, please read our [blog post](https://blackforestlabs.ai/announcing-black-forest-labs/).

This repository holds [ONNX](https://github.com/onnx/onnx) exports of FLUX.1 [dev] in BF16, FP8, and FP4 precision. 
The main repository of this model can be found [here](https://huggingface.co/black-forest-labs/FLUX.1-dev).

# Usage
We provide a reference implementation of `FLUX.1 [dev]`, as well as sampling code, in a dedicated [github repository](https://github.com/black-forest-labs/flux).
Developers and creatives looking to build on top of `FLUX.1 [dev]` are encouraged to use this as a starting point."""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/cf_index> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.692685"^^xsd:dateTime ;
    ns1:object "SpaceInvadersNoFrameskip-v4"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/345644230f7e711605ef233127803f06659ae1bd200eadaf0bb48fd111eb8366> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.668068"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/435f6e89d90ad4bd6be870aa7e1a66a9ce6bb4c201cdc1adf4aec7db47ff1148> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.649557888507843"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.652058"^^xsd:dateTime ;
    ns1:object "sentence similarity"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5f8c97c4aaca5a8c6afac1954a68be2dcb40698e64871f37e5fe5dc5849a3aab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.669023"^^xsd:dateTime ;
    ns1:object "text-embeddings-inference"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ecd7f8f73c76e2813d124a5830035419d55e0e60410eb6b073177559f7238d9c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "license:apache-2.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/source"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/source> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/a7eca72cd0a3a0ce30e3b37b299034e8cf2e3b921a7deaf54545b7d00e88c5e4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6476988792419434"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/interpret"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/interpret> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/split"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/description"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-05-05T06:34:19+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.628656417131424"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.790947"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "hu"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "la"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5548486411571503"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "ko"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5239303559064865"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The maintainer of the Vietnamese end-to-end speech recognition using wav2vec 2.0 model is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "[{\"main_splits/split_name\":\"train\"},{\"main_splits/split_name\":\"test\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5125513076782227"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2022-09-26T06:58:29+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.2536718547344208"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5470627844333649"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2021-11-04T15:35:49+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.685241"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ef8c453c903ecc79a3f941fc76e3fb554c3c0e3459f4a7a1755e64539b934598> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: bigscience-bloom-rail-1.0
datasets:
- jslin09/Fraud_Case_Verdicts
language:
- zh
metrics:
- accuracy
pipeline_tag: text-generation
text-generation:
  parameters:
    max_length: 400
    max_new_tokens: 400
    do_sample: true
    temperature: 0.75
    top_k: 50
    top_p: 0.9
tags:
- legal
widget:
- text: 王大明意圖為自己不法所有，基於竊盜之犯意，
  example_title: 生成竊盜罪之犯罪事實
- text: 騙人布意圖為自己不法所有，基於詐欺取財之犯意，
  example_title: 生成詐欺罪之犯罪事實
- text: 梅友乾明知其無資力支付酒店消費，亦無付款意願，竟意圖為自己不法之所有，
  example_title: 生成吃霸王餐之詐欺犯罪事實
- text: 闕很大明知金融帳戶之存摺、提款卡及密碼係供自己使用之重要理財工具，
  example_title: 生成賣帳戶幫助詐欺犯罪事實
- text: 通訊王明知近來盛行以虛設、租賃、借用或買賣行動電話人頭門號之方式，供詐騙集團作為詐欺他人交付財物等不法用途，
  example_title: 生成賣電話SIM卡之幫助詐欺犯罪事實
- text: 趙甲王基於行使偽造特種文書及詐欺取財之犯意，
  example_title: 偽造特種文書(契約、車牌等)詐財
---

# 判決書「犯罪事實」欄草稿自動生成
本模型是以司法院公開之「詐欺」案件判決書做成之資料集，基於 [BLOOM 560m](https://huggingface.co/bigscience/bloom-560m) 模型進行微調訓練，可以自動生成詐欺及竊盜案件之犯罪事實段落之草稿。資料集之資料範圍從100年1月1日至110年12月31日，所蒐集到的原始資料共有 74823 篇（判決以及裁定），我們只取判決書的「犯罪事實」欄位內容，並把這原始的資料分成三份，用於訓練的資料集有59858篇，約佔原始資料的80%，剩下的20%，則是各分配10%給驗證集（7482篇），10%給測試集（7483篇）。在本網頁進行測試時，請在模型載入完畢並生成第一小句後，持續按下Compute按鈕，就能持續生成文字。或是輸入自己想要測試的資料到文字框中進行測試。或是可以到[這裡](https://huggingface.co/spaces/jslin09/legal_document_drafting)有更完整的使用體驗。

# 比較
以下是本模型與經過微調後的BLOOM 560m、Llama 3.2-1b以 [ROUGE-L](https://en.wikipedia.org/wiki/ROUGE_(metric)) 做評估後的散點圖。
![ROUGE-L](https://i.imgur.com/V20ER70.png)

# 使用範例
如果要在自己的程式中調用本模型，可以參考下列的 Python 程式碼，藉由呼叫 API 的方式來生成刑事判決書「犯罪事實」欄的內容。
<details>
  <summary> 點擊後展開 </summary>
<pre>
  <code>
import requests, json
from time import sleep
from tqdm.auto import tqdm, trange

API_URL = "https://api-inference.huggingface.co/models/jslin09/bloom-560m-finetuned-fraud"
API_TOKEN = 'XXXXXXXXXXXXXXX' # 調用模型的 API token
headers = {"Authorization": f"Bearer {API_TOKEN}"} 

def query(payload):
    response = requests.post(API_URL, headers=headers, json=payload)
    return json.loads(response.content.decode("utf-8"))

prompt = "森上梅前明知其無資力支付酒店消費，亦無付款意願，竟意圖為自己不法之所有，"
query_dict = {
	"inputs": prompt,
}
text_len = 300
t = trange(text_len, desc= '生成例稿', leave=True)
for i in t:
    response = query(query_dict)
    try:
        response_text = response[0]['generated_text']
        query_dict["inputs"] = response_text
        t.set_description(f"{i}: {response[0]['generated_text']}")
        t.refresh()
    except KeyError:
        sleep(30) # 如果伺服器太忙無回應，等30秒後再試。
        pass
print(response[0]['generated_text'])
</code>
</pre>
</details>

或是，你要使用 transformers 套件來實作你的程式，將本模型下載至你本地端的電腦中執行，可以參考下列程式碼:
<details>
  <summary> 點擊後展開 </summary>
<pre>
  <code>
from transformers import AutoTokenizer, AutoModelForCausalLM

tokenizer = AutoTokenizer.from_pretrained("jslin09/bloom-560m-finetuned-fraud")
model = AutoModelForCausalLM.from_pretrained("jslin09/bloom-560m-finetuned-fraud")
</code>
</pre>
</details>

# 本模型進行各項指標進行評估的結果如下 [Open LLM Leaderboard Evaluation Results](https://huggingface.co/spaces/HuggingFaceH4/open_llm_leaderboard)
詳細的結果在 [這裡](https://huggingface.co/datasets/open-llm-leaderboard/details_jslin09__bloom-560m-finetuned-fraud)。
本模型只使用範圍相當小的資料集進行微調，就任務目標來說，已經是完美解決，但就廣泛的通用性來說，其實是不完美的。總的來說，如果應用場景是需要把模型建置在本地端、不能連到外部網路、提示字資料也不能外送的情境下，本模型的建置過程及結果提供了一個可行性的示範。

| Metric                | Value                     |
|-----------------------|---------------------------|
| Avg.                  | 18.37   |
| ARC (25-shot)         | 26.96          |
| HellaSwag (10-shot)   | 28.87    |
| MMLU (5-shot)         | 24.03         |
| TruthfulQA (0-shot)   | 0.0   |
| Winogrande (5-shot)   | 48.38   |
| GSM8K (5-shot)        | 0.0        |
| DROP (3-shot)         | 0.33         |

# 引文訊息

```
@article{lin2025assisting,
  title={Assisting Drafting of Chinese Legal Documents Using Fine-Tuned Pre-trained Large Language Models},
  author={Lin, Chun-Hsien and Cheng, Pu-Jen},
  journal={The Review of Socionetwork Strategies},
  pages={1--28},
  year={2025},
  publisher={Springer}
}
```"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5745015144348145"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "base_model:openai/whisper-base"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.354987"^^xsd:dateTime ;
    ns1:object "DianaJin/sample"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/63c4690edf3557f17b07f48296b33ccc383956a845d01233d59d9e359bf38c99> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/594a6f3cf66106516dc4e80f44dbe528cdcf0fb397d75a65d1b3b2a81dfc0f92> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "hu"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5517219305038452"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.653926"^^xsd:dateTime ;
    ns1:object "Generates images from textual descriptions or prompts."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6733442842960358"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "fo"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.49505615234375"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/black-forest-labs/FLUX.1-dev/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/output> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "mr"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "da"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.683803"^^xsd:dateTime ;
    ns1:object "High-throughput asynchronous reinforcement learning framework for training RL agents."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/15ceeb8703c6ba669411911c62acbbac38f4d1235e8ac6118537ac1e6d75ae84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "mn"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.676457"^^xsd:dateTime ;
    ns1:object "Transformers"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/CyberHarem/chokai_azurlane> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.680039"^^xsd:dateTime ;
    ns1:object "ONNX"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4e5443728f51b2323bf3a1c4a6a6d8612484cbca0a8b0beeb5fb0258d1df5196> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.653656"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3686d15023ade4b08558f72e9dd33a5a134bb1bf2f4238ea9c93dc3ad883f8db> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/input_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/07456871ec04ff7e102a14a63ee4f77775baadaf5e404b74e2ab827a14335259> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/sircesoc/dqn-SpaceInvadersNoFrameskip-v4/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.643479"^^xsd:dateTime ;
    ns1:object "Models quantized to 4-bit precision, reducing memory footprint while maintaining reasonable performance."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df2c9c7dc08f5514331c35b3bf3e4da58de6a14c0724dc40f90a3e588f9844dd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.446730"^^xsd:dateTime ;
    ns1:object "{'name': 'Andrew Poulton', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/input_file"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/input_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/generated_tests/output"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "base_model:meta-llama/Llama-2-7b-hf"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.379880"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.46446700394153595"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The maintainer of the model is DeepGHS Team."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/farleyknight/patent-summarization-fb-bart-base-2022-09-20> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.691656619310379"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f68885f104a68685936c980fdc14f386a9ccf26d5fa89b57ee217dbaf592e58a> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.662238"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6fa5b295a0420d9a3cc819e672ebdd61720c48761f8c2960d28ff7f7655875be> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.694359"^^xsd:dateTime ;
    ns1:object "Comprehensive machine learning library for Python featuring various classification, regression, and clustering algorithms."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bbf4caca758174ac9ca1258e1174d6c6d75a330218b88807385547a31f8229ab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.435238"^^xsd:dateTime ;
    ns1:object "{'name': 'Marie Pellat', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-09-01T01:17:39+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "de"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/85c031d4978df58bad8b74228a432699b1fdeaea4c730871d5eb91de8d9a42ad> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "Split to which the example belongs to."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.606145"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4430451dbf73b569af5e3deca9703720c96fa918ac4f295a37785e7c1bb43cb0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5262433737516403"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/223afdd384d0977fe2fa385fb4e5209cc141fbe57fdb0275078209001f9c2031> ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/8e9892e571845c79509180a69a268f19c0592a4e975a5fd3e16f2059af61ea75> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4508156180381775"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.648681"^^xsd:dateTime ;
    ns1:object "Models based on LLaMA (Large Language Model Meta AI), a family of large language models that use a transformer architecture."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.465736"^^xsd:dateTime ;
    ns1:object "Retrieve Anything To Augment Large Language Models"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:djaym7/wiki_dialog"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.457079"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/1910.09700"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.457248"^^xsd:dateTime ;
    ns1:object """From an environmental standpoint, there are a few crucial aspects of training
a neural network that have a major impact on the quantity of carbon that it
emits. These factors include: the location of the server used for training and
the energy grid that it uses, the length of the training procedure, and even
the make and model of hardware on which the training takes place. In order to
approximate these emissions, we present our Machine Learning Emissions
Calculator, a tool for our community to better understand the environmental
impact of training ML models. We accompany this tool with an explanation of the
factors cited above, as well as concrete actions that individual practitioners
and organizations can take to mitigate their carbon emissions."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.943480"^^xsd:dateTime ;
    ns1:object "openai"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/863d9e15edc2c98657749abae884b48544051490f76ea0e913adf85a3f2727a5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.634626030921936"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5411356389522552"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ro"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5247075706720352"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the Vietnamese end-to-end speech recognition using wav2vec 2.0 are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/01ce031a92b6a44f90635a9aa473acc02c379a53ef7b0a0d8f88b6027a9ad64e> ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.46727223694324493"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/incorrect_solutions/solution"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6321684122085571"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.653011"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f4f5c02149ef4c63e1abfb237a7efd73b36b96243fa20ee9a3b83ab914689b18> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.678058"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d462b48c96b732d754a938aa86dbd16bfb7478ca5b0c1f1f006c611c112094e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5f8c97c4aaca5a8c6afac1954a68be2dcb40698e64871f37e5fe5dc5849a3aab> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.260385"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.353958"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5853818356990814"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.644509"^^xsd:dateTime ;
    ns1:object "Merge"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6726f6435b32ab359d8c48bd5f24d3180c4c1772a769d50d3b4c8cf8f0ecd46> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6347604095935822"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The intended use of the model is to enable users to make a decision as to the suitability of this creative work for their intended use."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.672392"^^xsd:dateTime ;
    ns1:object "Reinforcement Learning"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ea5c52c0ba4305614a2132e3998c1bc735c574db3f8dd76dab1ede8aeef926a9> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5970016121864319"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.441075"^^xsd:dateTime ;
    ns1:object "{'name': 'Dan Bikel', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6438993215560913"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'time_limit' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/nanos> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4479658305644989"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is Chun-Hsien Lin and Pu-Jen Cheng."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.405780"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85c031d4978df58bad8b74228a432699b1fdeaea4c730871d5eb91de8d9a42ad> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'memory_limit_bytes' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/memory_limit_bytes> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.700627"^^xsd:dateTime ;
    ns1:object "pyannote.audio"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b07372cae2aaf834044064c3f58684a47c8f4685d11fccf85dbb95dac4dc7141> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5599947273731232"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_tags> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4b9f1c2e337ab389e22c7201bf0f4d7d38207364272050ef9059cfa73185096f> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6868899464607239"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: mit
datasets:
- CyberHarem/chokai_azurlane
pipeline_tag: text-to-image
tags:
- art
---

# Lora of chokai_azurlane

This model is trained with [HCP-Diffusion](https://github.com/7eu7d7/HCP-Diffusion). And the auto-training framework is maintained by [DeepGHS Team](https://huggingface.co/deepghs).

After downloading the pt and safetensors files for the specified step, you need to use them simultaneously. The pt file will be used as an embedding, while the safetensors file will be loaded for Lora.

For example, if you want to use the model from step 1500, you need to download `1500/chokai_azurlane.pt` as the embedding and `1500/chokai_azurlane.safetensors` for loading Lora. By using both files together, you can generate images for the desired characters.

**The trigger word is `chokai_azurlane`.**

These are available steps:

|   Steps | bikini                                   | free                                 | nude                                           | Download                             |
|--------:|:-----------------------------------------|:-------------------------------------|:-----------------------------------------------|:-------------------------------------|
|    1500 | ![bikini-1500](1500/previews/bikini.png) | ![free-1500](1500/previews/free.png) | [<NSFW, click to see>](1500/previews/nude.png) | [Download](1500/chokai_azurlane.zip) |
|    1400 | ![bikini-1400](1400/previews/bikini.png) | ![free-1400](1400/previews/free.png) | [<NSFW, click to see>](1400/previews/nude.png) | [Download](1400/chokai_azurlane.zip) |
|    1300 | ![bikini-1300](1300/previews/bikini.png) | ![free-1300](1300/previews/free.png) | [<NSFW, click to see>](1300/previews/nude.png) | [Download](1300/chokai_azurlane.zip) |
|    1200 | ![bikini-1200](1200/previews/bikini.png) | ![free-1200](1200/previews/free.png) | [<NSFW, click to see>](1200/previews/nude.png) | [Download](1200/chokai_azurlane.zip) |
|    1100 | ![bikini-1100](1100/previews/bikini.png) | ![free-1100](1100/previews/free.png) | [<NSFW, click to see>](1100/previews/nude.png) | [Download](1100/chokai_azurlane.zip) |
|    1000 | ![bikini-1000](1000/previews/bikini.png) | ![free-1000](1000/previews/free.png) | [<NSFW, click to see>](1000/previews/nude.png) | [Download](1000/chokai_azurlane.zip) |
|     900 | ![bikini-900](900/previews/bikini.png)   | ![free-900](900/previews/free.png)   | [<NSFW, click to see>](900/previews/nude.png)  | [Download](900/chokai_azurlane.zip)  |
|     800 | ![bikini-800](800/previews/bikini.png)   | ![free-800](800/previews/free.png)   | [<NSFW, click to see>](800/previews/nude.png)  | [Download](800/chokai_azurlane.zip)  |
|     700 | ![bikini-700](700/previews/bikini.png)   | ![free-700](700/previews/free.png)   | [<NSFW, click to see>](700/previews/nude.png)  | [Download](700/chokai_azurlane.zip)  |
|     600 | ![bikini-600](600/previews/bikini.png)   | ![free-600](600/previews/free.png)   | [<NSFW, click to see>](600/previews/nude.png)  | [Download](600/chokai_azurlane.zip)  |
|     500 | ![bikini-500](500/previews/bikini.png)   | ![free-500](500/previews/free.png)   | [<NSFW, click to see>](500/previews/nude.png)  | [Download](500/chokai_azurlane.zip)  |
|     400 | ![bikini-400](400/previews/bikini.png)   | ![free-400](400/previews/free.png)   | [<NSFW, click to see>](400/previews/nude.png)  | [Download](400/chokai_azurlane.zip)  |
|     300 | ![bikini-300](300/previews/bikini.png)   | ![free-300](300/previews/free.png)   | [<NSFW, click to see>](300/previews/nude.png)  | [Download](300/chokai_azurlane.zip)  |
|     200 | ![bikini-200](200/previews/bikini.png)   | ![free-200](200/previews/free.png)   | [<NSFW, click to see>](200/previews/nude.png)  | [Download](200/chokai_azurlane.zip)  |
|     100 | ![bikini-100](100/previews/bikini.png)   | ![free-100](100/previews/free.png)   | [<NSFW, click to see>](100/previews/nude.png)  | [Download](100/chokai_azurlane.zip)  |


"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.684427"^^xsd:dateTime ;
    ns1:object "Efficient framework for few-shot text classification using Sentence Transformers."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9db08d1a554609ae7c645781f30f4c335c5142d3c63fde5964e29f8a404c9566> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'g_ids' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/g_ids> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4972739815711975"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ae90ef66c09404023339909f0f1856b23a74105facc2f47abece54a0793d7e33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.468054"^^xsd:dateTime ;
    ns1:object "Robust Speech Recognition via Large-Scale Weak Supervision"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/BAAI/bge-large-zh-v1.5/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/realwiz/noggles/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5105402171611786"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7035151124000549"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.48913760483264923"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87e3b3dad52adc5c12d2dc386ce41da75f306c4b73d2d497aa9c5f22c6de6e87> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4667704701423645"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/socratic_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:lambada"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "mn"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "mk"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/c0c122e894fe5fc8434b18f17fe730a8d82a566209e08077c9645df8bc3ebeba> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.894143"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/nguyenvulebinh"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e5ae71f534f4f5c975c2c63beec692769102bbc4cd162258b70098e86ed01040> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.43077245354652405"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "vi"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "license:apache-2.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6760144233703613"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/g_adj> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.440731"^^xsd:dateTime ;
    ns1:object "{'name': 'Prajjwal Bhargava', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.570115864276886"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The intended use of the **ppo** Agent playing **Pyramids** is to enable users to watch their agent play directly in their browser."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/cf_tags"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_tags> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.664937"^^xsd:dateTime ;
    ns1:object "Extracts meaningful features from input data for downstream tasks."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/746e796ec31ad9ad2b517555a4e91b2e3dfff187021fd0255aae50476624430d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "Column 'text' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.435542"^^xsd:dateTime ;
    ns1:object "{'name': 'Dasha Valter', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.468905"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1aa60aa9719223ac8750af1366d4a56166214022d0d069d1412225070d1275b9> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.699628"^^xsd:dateTime ;
    ns1:object "NLP library developed by Baidu based on PaddlePaddle, offering Chinese and multilingual support."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/956922acae22f21b82ce000e45d4739baf3f94e8b6eb2825a93166a8ccfc2fbf> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "gu"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4244793951511383"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6480469107627869"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.463025"^^xsd:dateTime ;
    ns1:object "{'name': 'William El Sayed', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.668980"^^xsd:dateTime ;
    ns1:object "Transcribes spoken language into written text."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4964708983898163"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "fo"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.702025"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/jslin09"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/268a99307b1b2fc93e098debb5a8f035395fe7cffbff2da188e80280cbc0aa3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "lo"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.45665739476680756"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.888672"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'question' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/JabrilJacobs/ppo-Pyramids/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/sent> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.431148"^^xsd:dateTime ;
    ns1:object """Finetuning language models on a collection of datasets phrased as
instructions has been shown to improve model performance and generalization to
unseen tasks. In this paper we explore instruction finetuning with a particular
focus on (1) scaling the number of tasks, (2) scaling the model size, and (3)
finetuning on chain-of-thought data. We find that instruction finetuning with
the above aspects dramatically improves performance on a variety of model
classes (PaLM, T5, U-PaLM), prompting setups (zero-shot, few-shot, CoT), and
evaluation benchmarks (MMLU, BBH, TyDiQA, MGSM, open-ended generation). For
instance, Flan-PaLM 540B instruction-finetuned on 1.8K tasks outperforms PALM
540B by a large margin (+9.4% on average). Flan-PaLM 540B achieves
state-of-the-art performance on several benchmarks, such as 75.2% on five-shot
MMLU. We also publicly release Flan-T5 checkpoints, which achieve strong
few-shot performance even compared to much larger models, such as PaLM 62B.
Overall, instruction finetuning is a general method for improving the
performance and usability of pretrained language models."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.257780"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.41283702850341797"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6285230815410614"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-08-18T02:27:01+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_rating> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object """deepmind/code_contests - 'default' subset (first 5GB)

Additional information:
- 3 splits: train, test, valid"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7504406571388245"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Dataset ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/90eec6e25a3fb442a9bde78265ab17bc704cb71d58af7815f5a5ca027c4a2c94> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2022-09-20T20:30:00+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.442406"^^xsd:dateTime ;
    ns1:object "{'name': 'Wenyin Fu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9773f8d647166503d14c7a05030b47d6b1610f17bdd55e8c98cb4fc2b13a3379> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.657583"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8fd2e8ec655b6111cc83724fbc62c13d0c8b3442b1768b9bc35e0eceae0ebe85> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.373910"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8e9892e571845c79509180a69a268f19c0592a4e975a5fd3e16f2059af61ea75> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "te"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/2529572666d8ae917752f418f0b008b820cf821a3ba355927ca159454740dce7> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "bert-base-uncased-pf-multirc"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.243084"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/Xinging"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f68885f104a68685936c980fdc14f386a9ccf26d5fa89b57ee217dbaf592e58a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.657198"^^xsd:dateTime ;
    ns1:object "Zero Shot Image Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/427579e1091b3a9a3bf55b54c4167319ee1e7fd37d7a1389722fcb73d6a8901c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/sent"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/sent> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/lachiewyoung/test-mistral-7b"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.257471"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.684253"^^xsd:dateTime ;
    ns1:object "setfit"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9db08d1a554609ae7c645781f30f4c335c5142d3c63fde5964e29f8a404c9566> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6435609459877014"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The information provided in the context does not contain the copyright holder for the Llama 2 model."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.694193"^^xsd:dateTime ;
    ns1:object "Scikit-learn"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bbf4caca758174ac9ca1258e1174d6c6d75a330218b88807385547a31f8229ab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.452507"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.700035"^^xsd:dateTime ;
    ns1:object "Habana"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c0097ccf601f8114782f9c0c86386c6c995d5b2e12eddde21fdd7251761ee1fd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5989366769790649"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5920074284076691"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The operating systems supported by jinkrsmodel are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.667249"^^xsd:dateTime ;
    ns1:object "Measures how similar two sentences are semantically."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5f8c97c4aaca5a8c6afac1954a68be2dcb40698e64871f37e5fe5dc5849a3aab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5942191779613495"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The version of the CreativeWork embodied by a specified resource is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "raw/split"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/g_adj"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/g_adj> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4537627249956131"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The version of the CreativeWork embodied by a specified resource is not found in the provided context."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.36261187493801117"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5487021505832672"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/32934a13e4d01c327dbef8b4279d190d77f3095d7022f9465dc377bbb3565c94> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.866207"^^xsd:dateTime ;
    ns1:object "nguyenvulebinh/wav2vec2-base-vietnamese-250h"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/223afdd384d0977fe2fa385fb4e5209cc141fbe57fdb0275078209001f9c2031> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object """ClassLabel column 'incorrect_solutions' from the Hugging Face parquet file.
Labels:
UNKNOWN_LANGUAGE (0), PYTHON (1), CPP (2), PYTHON3 (3), JAVA (4)"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "arxiv:2104.08247"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.676279"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5358466655015945"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6312607824802399"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.374063"^^xsd:dateTime ;
    ns1:object "hf-asr-leaderboard"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8e9892e571845c79509180a69a268f19c0592a4e975a5fd3e16f2059af61ea75> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.655468"^^xsd:dateTime ;
    ns1:object "Unconditional Image Generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6803a9142550ca466078b0794746397f37034f277ce6f45bb7f252be171ab407> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "bn"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/90eec6e25a3fb442a9bde78265ab17bc704cb71d58af7815f5a5ca027c4a2c94> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:farleyknight/big_patent_5_percent"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.889891"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/vlsp"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5084bd7d1db13fba7c75464ccc31553c091b418df6b730d960b1d807a5d133db> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/solutions"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2022-10-21T09:59:24+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/43bc0319b35edce6a819b7513d5d158c1ea9bd4b7e1f558fabd51fb09b4f7755> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.595827728509903"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5946463942527771"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.696306437253952"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.440048"^^xsd:dateTime ;
    ns1:object "{'name': 'Amjad Almahairi', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
library_name: ml-agents
tags:
- Pyramids
- deep-reinforcement-learning
- reinforcement-learning
- ML-Agents-Pyramids
---

  # **ppo** Agent playing **Pyramids**
  This is a trained model of a **ppo** agent playing **Pyramids**
  using the [Unity ML-Agents Library](https://github.com/Unity-Technologies/ml-agents).

  ## Usage (with ML-Agents)
  The Documentation: https://unity-technologies.github.io/ml-agents/ML-Agents-Toolkit-Documentation/

  We wrote a complete tutorial to learn to train your first agent using ML-Agents and publish it to the Hub:
  - A *short tutorial* where you teach Huggy the Dog 🐶 to fetch the stick and then play with him directly in your
  browser: https://huggingface.co/learn/deep-rl-course/unitbonus1/introduction
  - A *longer tutorial* to understand how works ML-Agents:
  https://huggingface.co/learn/deep-rl-course/unit5/introduction

  ### Resume the training
  ```bash
  mlagents-learn <your_configuration_file_path.yaml> --run-id=<run_id> --resume
  ```

  ### Watch your Agent play
  You can watch your agent **playing directly in your browser**

  1. If the environment is part of ML-Agents official environments, go to https://huggingface.co/unity
  2. Step 1: Find your model_id: JabrilJacobs/ppo-Pyramids
  3. Step 2: Select your *.nn /*.onnx file
  4. Click on Watch the agent play 👀
  """^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.452099"^^xsd:dateTime ;
    ns1:object "{'name': 'Shitao Xiao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/untranslated_description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4966261386871338"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/fc7cf57f062cb9e0d1e9d259e47e9f36b464ea9c455e880a85e25d6281fc3268> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.681602"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e2cb5f7dba65387f6ecd56e7a642d33df8fca1197b2ac918cd629a6cd9b294b2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Split to which the example belongs to."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.659903"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/46fd5133284e3f6058330c31c628a6854b5eeb608d471e58c7052d9365f5acf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "license:apache-2.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.424237"^^xsd:dateTime ;
    ns1:object "model-index"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/annotation> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dqn-SpaceInvadersNoFrameskip-v4"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "mit"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: mit
language:
- zh
tags:
  - sentence-transformers
  - feature-extraction
  - sentence-similarity
  - transformers
---


<h1 align="center">FlagEmbedding</h1>


<h4 align="center">
    <p>
        <a href=#model-list>Model List</a> | 
        <a href=#frequently-asked-questions>FAQ</a> |
        <a href=#usage>Usage</a>  |
        <a href="#evaluation">Evaluation</a> |
        <a href="#train">Train</a> |
        <a href="#contact">Contact</a> |
        <a href="#citation">Citation</a> |
        <a href="#license">License</a> 
    <p>
</h4>

For more details please refer to our Github: [FlagEmbedding](https://github.com/FlagOpen/FlagEmbedding).

If you are looking for a model that supports more languages, longer texts, and other retrieval methods, you can try using [bge-m3](https://huggingface.co/BAAI/bge-m3).


[English](README.md) | [中文](https://github.com/FlagOpen/FlagEmbedding/blob/master/README_zh.md)

FlagEmbedding focuses on retrieval-augmented LLMs, consisting of the following projects currently:

- **Long-Context LLM**: [Activation Beacon](https://github.com/FlagOpen/FlagEmbedding/tree/master/Long_LLM/activation_beacon)
- **Fine-tuning of LM** : [LM-Cocktail](https://github.com/FlagOpen/FlagEmbedding/tree/master/LM_Cocktail)
- **Dense Retrieval**: [BGE-M3](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3), [LLM Embedder](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_embedder), [BGE Embedding](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/baai_general_embedding)
- **Reranker Model**: [BGE Reranker](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/reranker)
- **Benchmark**: [C-MTEB](https://github.com/FlagOpen/FlagEmbedding/tree/master/C_MTEB)

## News 
- 1/30/2024: Release **BGE-M3**, a new member to BGE model series! M3 stands for **M**ulti-linguality (100+ languages), **M**ulti-granularities (input length up to 8192), **M**ulti-Functionality (unification of dense, lexical, multi-vec/colbert retrieval). 
It is the first embedding model which supports all three retrieval methods, achieving new SOTA on multi-lingual (MIRACL) and cross-lingual (MKQA) benchmarks.
[Technical Report](https://github.com/FlagOpen/FlagEmbedding/blob/master/FlagEmbedding/BGE_M3/BGE_M3.pdf) and [Code](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3). :fire:
- 1/9/2024: Release [Activation-Beacon](https://github.com/FlagOpen/FlagEmbedding/tree/master/Long_LLM/activation_beacon), an effective, efficient, compatible, and low-cost (training) method to extend the context length of LLM. [Technical Report](https://arxiv.org/abs/2401.03462) :fire:
- 12/24/2023: Release **LLaRA**, a LLaMA-7B based dense retriever, leading to state-of-the-art performances on MS MARCO and BEIR. Model and code will be open-sourced. Please stay tuned. [Technical Report](https://arxiv.org/abs/2312.15503) :fire:
- 11/23/2023: Release [LM-Cocktail](https://github.com/FlagOpen/FlagEmbedding/tree/master/LM_Cocktail), a method to maintain general capabilities during fine-tuning by merging multiple language models. [Technical Report](https://arxiv.org/abs/2311.13534) :fire:  
- 10/12/2023: Release [LLM-Embedder](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_embedder), a unified embedding model to support diverse retrieval augmentation needs for LLMs. [Technical Report](https://arxiv.org/pdf/2310.07554.pdf)
- 09/15/2023: The [technical report](https://arxiv.org/pdf/2309.07597.pdf) and [massive training data](https://data.baai.ac.cn/details/BAAI-MTP) of BGE has been released 
- 09/12/2023: New models: 
    - **New reranker model**: release cross-encoder models `BAAI/bge-reranker-base` and `BAAI/bge-reranker-large`, which are more powerful than embedding model. We recommend to use/fine-tune them to re-rank top-k documents returned by embedding models. 
    - **update embedding model**: release `bge-*-v1.5` embedding model to alleviate the issue of the similarity distribution, and enhance its retrieval ability without instruction.
 

<details>
  <summary>More</summary>
<!-- ### More -->
    
- 09/07/2023: Update [fine-tune code](https://github.com/FlagOpen/FlagEmbedding/blob/master/FlagEmbedding/baai_general_embedding/README.md): Add script to mine hard negatives and support adding instruction during fine-tuning. 
- 08/09/2023: BGE Models are integrated into **Langchain**, you can use it like [this](#using-langchain); C-MTEB **leaderboard** is [available](https://huggingface.co/spaces/mteb/leaderboard).  
- 08/05/2023: Release base-scale and small-scale models, **best performance among the models of the same size 🤗**  
- 08/02/2023: Release `bge-large-*`(short for BAAI General Embedding) Models, **rank 1st on MTEB and C-MTEB benchmark!** :tada: :tada:   
- 08/01/2023: We release the [Chinese Massive Text Embedding Benchmark](https://github.com/FlagOpen/FlagEmbedding/blob/master/C_MTEB) (**C-MTEB**), consisting of 31 test dataset.  
  
</details>


## Model List

`bge` is short for `BAAI general embedding`.

|              Model              | Language | | Description | query instruction for retrieval [1] |
|:-------------------------------|:--------:| :--------:| :--------:|:--------:|
| [BAAI/bge-m3](https://huggingface.co/BAAI/bge-m3)                   |    Multilingual     |    [Inference](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3#usage) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3)    | Multi-Functionality(dense retrieval, sparse retrieval, multi-vector(colbert)), Multi-Linguality, and Multi-Granularity(8192 tokens) |  |
|  [BAAI/llm-embedder](https://huggingface.co/BAAI/llm-embedder)  |   English | [Inference](./FlagEmbedding/llm_embedder/README.md) [Fine-tune](./FlagEmbedding/llm_embedder/README.md) | a unified embedding model to support diverse retrieval augmentation needs for LLMs | See [README](./FlagEmbedding/llm_embedder/README.md) |
|  [BAAI/bge-reranker-large](https://huggingface.co/BAAI/bge-reranker-large)  |   Chinese and English | [Inference](#usage-for-reranker) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/reranker) | a cross-encoder model which is more accurate but less efficient [2] |   |
|  [BAAI/bge-reranker-base](https://huggingface.co/BAAI/bge-reranker-base) |   Chinese and English | [Inference](#usage-for-reranker) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/reranker) | a cross-encoder model which is more accurate but less efficient [2] |   |
|  [BAAI/bge-large-en-v1.5](https://huggingface.co/BAAI/bge-large-en-v1.5) |   English | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | version 1.5 with more reasonable similarity distribution | `Represent this sentence for searching relevant passages: `  |
|  [BAAI/bge-base-en-v1.5](https://huggingface.co/BAAI/bge-base-en-v1.5) |   English | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | version 1.5 with more reasonable similarity distribution | `Represent this sentence for searching relevant passages: `  |
|  [BAAI/bge-small-en-v1.5](https://huggingface.co/BAAI/bge-small-en-v1.5) |   English | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | version 1.5 with more reasonable similarity distribution  | `Represent this sentence for searching relevant passages: `  |
|  [BAAI/bge-large-zh-v1.5](https://huggingface.co/BAAI/bge-large-zh-v1.5) |   Chinese | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | version 1.5 with more reasonable similarity distribution | `为这个句子生成表示以用于检索相关文章：`  |
|  [BAAI/bge-base-zh-v1.5](https://huggingface.co/BAAI/bge-base-zh-v1.5) |   Chinese |  [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | version 1.5 with more reasonable similarity distribution | `为这个句子生成表示以用于检索相关文章：`  |
|  [BAAI/bge-small-zh-v1.5](https://huggingface.co/BAAI/bge-small-zh-v1.5) |   Chinese | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | version 1.5 with more reasonable similarity distribution | `为这个句子生成表示以用于检索相关文章：`  |
|  [BAAI/bge-large-en](https://huggingface.co/BAAI/bge-large-en) |   English | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | :trophy: rank **1st** in [MTEB](https://huggingface.co/spaces/mteb/leaderboard) leaderboard | `Represent this sentence for searching relevant passages: `  |
|  [BAAI/bge-base-en](https://huggingface.co/BAAI/bge-base-en) |   English | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | a base-scale model but with similar ability to `bge-large-en` | `Represent this sentence for searching relevant passages: `  |
|  [BAAI/bge-small-en](https://huggingface.co/BAAI/bge-small-en) |   English | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) |a small-scale model but with competitive performance  | `Represent this sentence for searching relevant passages: `  |
|  [BAAI/bge-large-zh](https://huggingface.co/BAAI/bge-large-zh) |   Chinese | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | :trophy: rank **1st** in [C-MTEB](https://github.com/FlagOpen/FlagEmbedding/tree/master/C_MTEB) benchmark | `为这个句子生成表示以用于检索相关文章：`  |
|  [BAAI/bge-base-zh](https://huggingface.co/BAAI/bge-base-zh) |   Chinese |  [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | a base-scale model but with similar ability to `bge-large-zh` | `为这个句子生成表示以用于检索相关文章：`  |
|  [BAAI/bge-small-zh](https://huggingface.co/BAAI/bge-small-zh) |   Chinese | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | a small-scale model but with competitive performance | `为这个句子生成表示以用于检索相关文章：`  |

[1\\]: If you need to search the relevant passages to a query, we suggest to add the instruction to the query; in other cases, no instruction is needed, just use the original query directly. In all cases, **no instruction** needs to be added to passages.

[2\\]: Different from embedding model, reranker uses question and document as input and directly output similarity instead of embedding. To balance the accuracy and time cost, cross-encoder is widely used to re-rank top-k documents retrieved by other simple models. 
For examples, use bge embedding model to retrieve top 100 relevant documents, and then use bge reranker to re-rank the top 100 document to get the final top-3 results.

All models have been uploaded to Huggingface Hub, and you can see them at https://huggingface.co/BAAI. 
If you cannot open the Huggingface Hub, you also can download the models at https://model.baai.ac.cn/models .


## Frequently asked questions

<details>
  <summary>1. How to fine-tune bge embedding model?</summary>

  <!-- ### How to fine-tune bge embedding model? -->
Following this [example](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) to prepare data and fine-tune your model. 
Some suggestions:
- Mine hard negatives following this [example](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune#hard-negatives), which can improve the retrieval performance.
- If you pre-train bge on your data, the pre-trained model cannot be directly used to calculate similarity, and it must be fine-tuned with contrastive learning before computing similarity.
- If the accuracy of the fine-tuned model is still not high, it is recommended to use/fine-tune the cross-encoder model (bge-reranker) to re-rank top-k results. Hard negatives also are needed to fine-tune reranker.

  
</details>

<details>
  <summary>2. The similarity score between two dissimilar sentences is higher than 0.5</summary>

  <!-- ### The similarity score between two dissimilar sentences is higher than 0.5 -->
**Suggest to use bge v1.5, which alleviates the issue of the similarity distribution.** 

Since we finetune the models by contrastive learning with a temperature of 0.01, 
the similarity distribution of the current BGE model is about in the interval \\[0.6, 1\\].
So a similarity score greater than 0.5 does not indicate that the two sentences are similar.

For downstream tasks, such as passage retrieval or semantic similarity, 
**what matters is the relative order of the scores, not the absolute value.**
If you need to filter similar sentences based on a similarity threshold, 
please select an appropriate similarity threshold based on the similarity distribution on your data (such as 0.8, 0.85, or even 0.9).

</details>

<details>
  <summary>3. When does the query instruction need to be used</summary>

  <!-- ### When does the query instruction need to be used -->

For the `bge-*-v1.5`, we improve its retrieval ability when not using instruction. 
No instruction only has a slight degradation in retrieval performance compared with using instruction. 
So you can generate embedding without instruction in all cases for convenience.
 
For a retrieval task that uses short queries to find long related documents, 
it is recommended to add instructions for these short queries.
**The best method to decide whether to add instructions for queries is choosing the setting that achieves better performance on your task.**
In all cases, the documents/passages do not need to add the instruction. 

</details>


## Usage 

### Usage for Embedding Model

Here are some examples for using `bge` models with 
[FlagEmbedding](#using-flagembedding), [Sentence-Transformers](#using-sentence-transformers), [Langchain](#using-langchain), or [Huggingface Transformers](#using-huggingface-transformers).

#### Using FlagEmbedding
```
pip install -U FlagEmbedding
```
If it doesn't work for you, you can see [FlagEmbedding](https://github.com/FlagOpen/FlagEmbedding/blob/master/FlagEmbedding/baai_general_embedding/README.md) for more methods to install FlagEmbedding.

```python
from FlagEmbedding import FlagModel
sentences_1 = ["样例数据-1", "样例数据-2"]
sentences_2 = ["样例数据-3", "样例数据-4"]
model = FlagModel('BAAI/bge-large-zh-v1.5', 
                  query_instruction_for_retrieval="为这个句子生成表示以用于检索相关文章：",
                  use_fp16=True) # Setting use_fp16 to True speeds up computation with a slight performance degradation
embeddings_1 = model.encode(sentences_1)
embeddings_2 = model.encode(sentences_2)
similarity = embeddings_1 @ embeddings_2.T
print(similarity)

# for s2p(short query to long passage) retrieval task, suggest to use encode_queries() which will automatically add the instruction to each query
# corpus in retrieval task can still use encode() or encode_corpus(), since they don't need instruction
queries = ['query_1', 'query_2']
passages = ["样例文档-1", "样例文档-2"]
q_embeddings = model.encode_queries(queries)
p_embeddings = model.encode(passages)
scores = q_embeddings @ p_embeddings.T
```
For the value of the argument `query_instruction_for_retrieval`, see [Model List](https://github.com/FlagOpen/FlagEmbedding/tree/master#model-list). 

By default, FlagModel will use all available GPUs when encoding. Please set `os.environ["CUDA_VISIBLE_DEVICES"]` to select specific GPUs.
You also can set `os.environ["CUDA_VISIBLE_DEVICES"]=""` to make all GPUs unavailable.


#### Using Sentence-Transformers

You can also use the `bge` models with [sentence-transformers](https://www.SBERT.net):

```
pip install -U sentence-transformers
```
```python
from sentence_transformers import SentenceTransformer
sentences_1 = ["样例数据-1", "样例数据-2"]
sentences_2 = ["样例数据-3", "样例数据-4"]
model = SentenceTransformer('BAAI/bge-large-zh-v1.5')
embeddings_1 = model.encode(sentences_1, normalize_embeddings=True)
embeddings_2 = model.encode(sentences_2, normalize_embeddings=True)
similarity = embeddings_1 @ embeddings_2.T
print(similarity)
```
For s2p(short query to long passage) retrieval task, 
each short query should start with an instruction (instructions see [Model List](https://github.com/FlagOpen/FlagEmbedding/tree/master#model-list)). 
But the instruction is not needed for passages.
```python
from sentence_transformers import SentenceTransformer
queries = ['query_1', 'query_2']
passages = ["样例文档-1", "样例文档-2"]
instruction = "为这个句子生成表示以用于检索相关文章："

model = SentenceTransformer('BAAI/bge-large-zh-v1.5')
q_embeddings = model.encode([instruction+q for q in queries], normalize_embeddings=True)
p_embeddings = model.encode(passages, normalize_embeddings=True)
scores = q_embeddings @ p_embeddings.T
```

#### Using Langchain 

You can use `bge` in langchain like this:
```python
from langchain.embeddings import HuggingFaceBgeEmbeddings
model_name = "BAAI/bge-large-en-v1.5"
model_kwargs = {'device': 'cuda'}
encode_kwargs = {'normalize_embeddings': True} # set True to compute cosine similarity
model = HuggingFaceBgeEmbeddings(
    model_name=model_name,
    model_kwargs=model_kwargs,
    encode_kwargs=encode_kwargs,
    query_instruction="为这个句子生成表示以用于检索相关文章："
)
model.query_instruction = "为这个句子生成表示以用于检索相关文章："
```


#### Using HuggingFace Transformers

With the transformers package, you can use the model like this: First, you pass your input through the transformer model, then you select the last hidden state of the first token (i.e., [CLS]) as the sentence embedding.

```python
from transformers import AutoTokenizer, AutoModel
import torch
# Sentences we want sentence embeddings for
sentences = ["样例数据-1", "样例数据-2"]

# Load model from HuggingFace Hub
tokenizer = AutoTokenizer.from_pretrained('BAAI/bge-large-zh-v1.5')
model = AutoModel.from_pretrained('BAAI/bge-large-zh-v1.5')
model.eval()

# Tokenize sentences
encoded_input = tokenizer(sentences, padding=True, truncation=True, return_tensors='pt')
# for s2p(short query to long passage) retrieval task, add an instruction to query (not add instruction for passages)
# encoded_input = tokenizer([instruction + q for q in queries], padding=True, truncation=True, return_tensors='pt')

# Compute token embeddings
with torch.no_grad():
    model_output = model(**encoded_input)
    # Perform pooling. In this case, cls pooling.
    sentence_embeddings = model_output[0][:, 0]
# normalize embeddings
sentence_embeddings = torch.nn.functional.normalize(sentence_embeddings, p=2, dim=1)
print("Sentence embeddings:", sentence_embeddings)
```

### Usage for Reranker

Different from embedding model, reranker uses question and document as input and directly output similarity instead of embedding. 
You can get a relevance score by inputting query and passage to the reranker. 
The reranker is optimized based cross-entropy loss, so the relevance score is not bounded to a specific range.


#### Using FlagEmbedding
```
pip install -U FlagEmbedding
```

Get relevance scores (higher scores indicate more relevance):
```python
from FlagEmbedding import FlagReranker
reranker = FlagReranker('BAAI/bge-reranker-large', use_fp16=True) # Setting use_fp16 to True speeds up computation with a slight performance degradation

score = reranker.compute_score(['query', 'passage'])
print(score)

scores = reranker.compute_score([['what is panda?', 'hi'], ['what is panda?', 'The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.']])
print(scores)
```


#### Using Huggingface transformers

```python
import torch
from transformers import AutoModelForSequenceClassification, AutoTokenizer

tokenizer = AutoTokenizer.from_pretrained('BAAI/bge-reranker-large')
model = AutoModelForSequenceClassification.from_pretrained('BAAI/bge-reranker-large')
model.eval()

pairs = [['what is panda?', 'hi'], ['what is panda?', 'The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.']]
with torch.no_grad():
    inputs = tokenizer(pairs, padding=True, truncation=True, return_tensors='pt', max_length=512)
    scores = model(**inputs, return_dict=True).logits.view(-1, ).float()
    print(scores)
```

## Evaluation  

`baai-general-embedding` models achieve **state-of-the-art performance on both MTEB and C-MTEB leaderboard!**
For more details and evaluation tools see our [scripts](https://github.com/FlagOpen/FlagEmbedding/blob/master/C_MTEB/README.md). 

- **MTEB**:   

| Model Name |  Dimension | Sequence Length | Average (56) | Retrieval (15) |Clustering (11) | Pair Classification (3) | Reranking (4) |  STS (10) | Summarization (1) | Classification (12) |
|:----:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|
| [BAAI/bge-large-en-v1.5](https://huggingface.co/BAAI/bge-large-en-v1.5) | 1024 | 512 |  **64.23** | **54.29** |  46.08 | 87.12 | 60.03 | 83.11 | 31.61 | 75.97 |  
| [BAAI/bge-base-en-v1.5](https://huggingface.co/BAAI/bge-base-en-v1.5) |  768 | 512 | 63.55 | 53.25 |   45.77 | 86.55 | 58.86 | 82.4 | 31.07 | 75.53 |  
| [BAAI/bge-small-en-v1.5](https://huggingface.co/BAAI/bge-small-en-v1.5) |  384 | 512 | 62.17 |51.68 | 43.82 |  84.92 | 58.36 | 81.59 | 30.12 | 74.14 |  
| [bge-large-en](https://huggingface.co/BAAI/bge-large-en) |  1024 | 512 | 63.98 |  53.9 | 46.98 | 85.8 | 59.48 | 81.56 | 32.06 | 76.21 | 
| [bge-base-en](https://huggingface.co/BAAI/bge-base-en) |  768 | 512 |  63.36 | 53.0 | 46.32 | 85.86 | 58.7 | 81.84 | 29.27 | 75.27 | 
| [gte-large](https://huggingface.co/thenlper/gte-large) |  1024 | 512 | 63.13 | 52.22 | 46.84 | 85.00 | 59.13 | 83.35 | 31.66 | 73.33 |
| [gte-base](https://huggingface.co/thenlper/gte-base) 	|  768 | 512 | 62.39 | 51.14 | 46.2 | 84.57 | 58.61 | 82.3 | 31.17 | 73.01 |
| [e5-large-v2](https://huggingface.co/intfloat/e5-large-v2) |  1024| 512 | 62.25 | 50.56 | 44.49 | 86.03 | 56.61 | 82.05 | 30.19 | 75.24 |
| [bge-small-en](https://huggingface.co/BAAI/bge-small-en) |  384 | 512 | 62.11 |  51.82 | 44.31 | 83.78 | 57.97 | 80.72 | 30.53 | 74.37 |  
| [instructor-xl](https://huggingface.co/hkunlp/instructor-xl) |  768 | 512 | 61.79 | 49.26 | 44.74 | 86.62 | 57.29 | 83.06 | 32.32 | 61.79 |
| [e5-base-v2](https://huggingface.co/intfloat/e5-base-v2) |  768 | 512 | 61.5 | 50.29 | 43.80 | 85.73 | 55.91 | 81.05 | 30.28 | 73.84 |
| [gte-small](https://huggingface.co/thenlper/gte-small) |  384 | 512 | 61.36 | 49.46 | 44.89 | 83.54 | 57.7 | 82.07 | 30.42 | 72.31 |
| [text-embedding-ada-002](https://platform.openai.com/docs/guides/embeddings) | 1536 | 8192 | 60.99 | 49.25 | 45.9 | 84.89 | 56.32 | 80.97 | 30.8 | 70.93 |
| [e5-small-v2](https://huggingface.co/intfloat/e5-base-v2) | 384 | 512 | 59.93 | 49.04 | 39.92 | 84.67 | 54.32 | 80.39 | 31.16 | 72.94 |
| [sentence-t5-xxl](https://huggingface.co/sentence-transformers/sentence-t5-xxl) |  768 | 512 | 59.51 | 42.24 | 43.72 | 85.06 | 56.42 | 82.63 | 30.08 | 73.42 |
| [all-mpnet-base-v2](https://huggingface.co/sentence-transformers/all-mpnet-base-v2) 	|  768 | 514 	| 57.78 | 43.81 | 43.69 | 83.04 | 59.36 | 80.28 | 27.49 | 65.07 |
| [sgpt-bloom-7b1-msmarco](https://huggingface.co/bigscience/sgpt-bloom-7b1-msmarco) 	|  4096 | 2048 | 57.59 | 48.22 | 38.93 | 81.9 | 55.65 | 77.74 | 33.6 | 66.19 |



- **C-MTEB**:  
We create the benchmark C-MTEB for Chinese text embedding which consists of 31 datasets from 6 tasks. 
Please refer to [C_MTEB](https://github.com/FlagOpen/FlagEmbedding/blob/master/C_MTEB/README.md) for a detailed introduction.
 
| Model | Embedding dimension | Avg | Retrieval | STS | PairClassification | Classification | Reranking | Clustering |
|:-------------------------------|:--------:|:--------:|:--------:|:--------:|:--------:|:--------:|:--------:|:--------:|
| [**BAAI/bge-large-zh-v1.5**](https://huggingface.co/BAAI/bge-large-zh-v1.5) | 1024 |  **64.53** | 70.46 | 56.25 | 81.6 | 69.13 | 65.84 | 48.99 |  
| [BAAI/bge-base-zh-v1.5](https://huggingface.co/BAAI/bge-base-zh-v1.5) | 768 |  63.13 | 69.49 | 53.72 | 79.75 | 68.07 | 65.39 | 47.53 |  
| [BAAI/bge-small-zh-v1.5](https://huggingface.co/BAAI/bge-small-zh-v1.5) | 512 | 57.82 | 61.77 | 49.11 | 70.41 | 63.96 | 60.92 | 44.18 |   
| [BAAI/bge-large-zh](https://huggingface.co/BAAI/bge-large-zh) | 1024 | 64.20 | 71.53 | 54.98 | 78.94 | 68.32 | 65.11 | 48.39 |
| [bge-large-zh-noinstruct](https://huggingface.co/BAAI/bge-large-zh-noinstruct) | 1024 | 63.53 | 70.55 | 53 | 76.77 | 68.58 | 64.91 | 50.01 |
| [BAAI/bge-base-zh](https://huggingface.co/BAAI/bge-base-zh) | 768 | 62.96 | 69.53 | 54.12 | 77.5 | 67.07 | 64.91 | 47.63 |
| [multilingual-e5-large](https://huggingface.co/intfloat/multilingual-e5-large) | 1024 | 58.79 | 63.66 | 48.44 | 69.89 | 67.34 | 56.00 | 48.23 |
| [BAAI/bge-small-zh](https://huggingface.co/BAAI/bge-small-zh) | 512 | 58.27 |  63.07 | 49.45 | 70.35 | 63.64 | 61.48 | 45.09 |
| [m3e-base](https://huggingface.co/moka-ai/m3e-base) | 768 | 57.10 | 56.91 | 50.47 | 63.99 | 67.52 | 59.34 | 47.68 |
| [m3e-large](https://huggingface.co/moka-ai/m3e-large) | 1024 |  57.05 | 54.75 | 50.42 | 64.3 | 68.2 | 59.66 | 48.88 |
| [multilingual-e5-base](https://huggingface.co/intfloat/multilingual-e5-base) | 768 | 55.48 | 61.63 | 46.49 | 67.07 | 65.35 | 54.35 | 40.68 |
| [multilingual-e5-small](https://huggingface.co/intfloat/multilingual-e5-small) | 384 | 55.38 | 59.95 | 45.27 | 66.45 | 65.85 | 53.86 | 45.26 |
| [text-embedding-ada-002(OpenAI)](https://platform.openai.com/docs/guides/embeddings/what-are-embeddings) | 1536 |  53.02 | 52.0 | 43.35 | 69.56 | 64.31 | 54.28 | 45.68 |
| [luotuo](https://huggingface.co/silk-road/luotuo-bert-medium) | 1024 | 49.37 |  44.4 | 42.78 | 66.62 | 61 | 49.25 | 44.39 |
| [text2vec-base](https://huggingface.co/shibing624/text2vec-base-chinese) | 768 |  47.63 | 38.79 | 43.41 | 67.41 | 62.19 | 49.45 | 37.66 |
| [text2vec-large](https://huggingface.co/GanymedeNil/text2vec-large-chinese) | 1024 | 47.36 | 41.94 | 44.97 | 70.86 | 60.66 | 49.16 | 30.02 |


- **Reranking**:
See [C_MTEB](https://github.com/FlagOpen/FlagEmbedding/blob/master/C_MTEB/) for evaluation script.

| Model | T2Reranking | T2RerankingZh2En\\* | T2RerankingEn2Zh\\* | MMarcoReranking | CMedQAv1 | CMedQAv2 | Avg |  
|:-------------------------------|:--------:|:--------:|:--------:|:--------:|:--------:|:--------:|:--------:|  
| text2vec-base-multilingual | 64.66 | 62.94 | 62.51 | 14.37 | 48.46 | 48.6 | 50.26 |  
| multilingual-e5-small | 65.62 | 60.94 | 56.41 | 29.91 | 67.26 | 66.54 | 57.78 |  
| multilingual-e5-large | 64.55 | 61.61 | 54.28 | 28.6 | 67.42 | 67.92 | 57.4 |  
| multilingual-e5-base | 64.21 | 62.13 | 54.68 | 29.5 | 66.23 | 66.98 | 57.29 |  
| m3e-base | 66.03 | 62.74 | 56.07 | 17.51 | 77.05 | 76.76 | 59.36 |  
| m3e-large | 66.13 | 62.72 | 56.1 | 16.46 | 77.76 | 78.27 | 59.57 |  
| bge-base-zh-v1.5 | 66.49 | 63.25 | 57.02 | 29.74 | 80.47 | 84.88 | 63.64 |  
| bge-large-zh-v1.5 | 65.74 | 63.39 | 57.03 | 28.74 | 83.45 | 85.44 | 63.97 |  
| [BAAI/bge-reranker-base](https://huggingface.co/BAAI/bge-reranker-base) | 67.28 | 63.95 | 60.45 | 35.46 | 81.26 | 84.1 | 65.42 |  
| [BAAI/bge-reranker-large](https://huggingface.co/BAAI/bge-reranker-large) | 67.6 | 64.03 | 61.44 | 37.16 | 82.15 | 84.18 | 66.09 |  

\\* : T2RerankingZh2En and T2RerankingEn2Zh are cross-language retrieval tasks

## Train

### BAAI Embedding 

We pre-train the models using [retromae](https://github.com/staoxiao/RetroMAE) and train them on large-scale pairs data using contrastive learning. 
**You can fine-tune the embedding model on your data following our [examples](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune).**
We also provide a [pre-train example](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/pretrain).
Note that the goal of pre-training is to reconstruct the text, and the pre-trained model cannot be used for similarity calculation directly, it needs to be fine-tuned.
More training details for bge see [baai_general_embedding](https://github.com/FlagOpen/FlagEmbedding/blob/master/FlagEmbedding/baai_general_embedding/README.md).



### BGE Reranker

Cross-encoder will perform full-attention over the input pair, 
which is more accurate than embedding model (i.e., bi-encoder) but more time-consuming than embedding model.
Therefore, it can be used to re-rank the top-k documents returned by embedding model.
We train the cross-encoder on a multilingual pair data, 
The data format is the same as embedding model, so you can fine-tune it easily following our [example](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/reranker). 
More details please refer to [./FlagEmbedding/reranker/README.md](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/reranker)


## Contact
If you have any question or suggestion related to this project, feel free to open an issue or pull request.
You also can email Shitao Xiao(stxiao@baai.ac.cn) and Zheng Liu(liuzheng@baai.ac.cn). 


## Citation

If you find this repository useful, please consider giving a star :star: and citation

```
@misc{bge_embedding,
      title={C-Pack: Packaged Resources To Advance General Chinese Embedding}, 
      author={Shitao Xiao and Zheng Liu and Peitian Zhang and Niklas Muennighoff},
      year={2023},
      eprint={2309.07597},
      archivePrefix={arXiv},
      primaryClass={cs.CL}
}
```

## License
FlagEmbedding is licensed under the [MIT License](https://github.com/FlagOpen/FlagEmbedding/blob/master/LICENSE). The released models can be used for commercial purposes free of charge."""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/url> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "fr"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.661053"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cb9bd15fb27d24d93383343fa6ee37e644b0a41da399de954b0a5cf93c7b3501> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object """ClassLabel column 'source' from the Hugging Face parquet file.
Labels:
UNKNOWN_SOURCE (0), CODECHEF (1), CODEFORCES (2), HACKEREARTH (3), CODEJAM (4), ATCODER (5), AIZU (6)"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/source> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.974940"^^xsd:dateTime ;
    ns1:object "haw"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dabb9d310d39a47f81f009cd476a41773667de14be41c930213432a06ad59fb0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7089595794677734"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.234205"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5634521842002869"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f5a6a15b057055acaed46aabd835cf3eb56fa2343723cec43da3298c6a298537> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.382807"^^xsd:dateTime ;
    ns1:object "reinforcement learning"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.656453"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cba5458c023bd0e333fefb47511914b963716a71b0356b435370871727585038> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/JabrilJacobs/ppo-Pyramids/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "is"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "socratic/answer"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.677244"^^xsd:dateTime ;
    ns1:object "Fast and safe serialization format for storing and distributing machine learning model weights."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
pipeline_tag: sentence-similarity
tags:
- sentence-transformers
- feature-extraction
- sentence-similarity
- transformers

---

# {MODEL_NAME}

This is a [sentence-transformers](https://www.SBERT.net) model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.

<!--- Describe your model here -->

## Usage (Sentence-Transformers)

Using this model becomes easy when you have [sentence-transformers](https://www.SBERT.net) installed:

```
pip install -U sentence-transformers
```

Then you can use the model like this:

```python
from sentence_transformers import SentenceTransformer
sentences = ["This is an example sentence", "Each sentence is converted"]

model = SentenceTransformer('{MODEL_NAME}')
embeddings = model.encode(sentences)
print(embeddings)
```



## Usage (HuggingFace Transformers)
Without [sentence-transformers](https://www.SBERT.net), you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.

```python
from transformers import AutoTokenizer, AutoModel
import torch


#Mean Pooling - Take attention mask into account for correct averaging
def mean_pooling(model_output, attention_mask):
    token_embeddings = model_output[0] #First element of model_output contains all token embeddings
    input_mask_expanded = attention_mask.unsqueeze(-1).expand(token_embeddings.size()).float()
    return torch.sum(token_embeddings * input_mask_expanded, 1) / torch.clamp(input_mask_expanded.sum(1), min=1e-9)


# Sentences we want sentence embeddings for
sentences = ['This is an example sentence', 'Each sentence is converted']

# Load model from HuggingFace Hub
tokenizer = AutoTokenizer.from_pretrained('{MODEL_NAME}')
model = AutoModel.from_pretrained('{MODEL_NAME}')

# Tokenize sentences
encoded_input = tokenizer(sentences, padding=True, truncation=True, return_tensors='pt')

# Compute token embeddings
with torch.no_grad():
    model_output = model(**encoded_input)

# Perform pooling. In this case, mean pooling.
sentence_embeddings = mean_pooling(model_output, encoded_input['attention_mask'])

print("Sentence embeddings:")
print(sentence_embeddings)
```



## Evaluation Results

<!--- Describe how your model was evaluated -->

For an automated evaluation of this model, see the *Sentence Embeddings Benchmark*: [https://seb.sbert.net](https://seb.sbert.net?model_name={MODEL_NAME})


## Training
The model was trained with the parameters:

**DataLoader**:

`torch.utils.data.dataloader.DataLoader` of length 3009 with parameters:
```
{'batch_size': 16, 'sampler': 'torch.utils.data.sampler.RandomSampler', 'batch_sampler': 'torch.utils.data.sampler.BatchSampler'}
```

**Loss**:

`sentence_transformers.losses.MultipleNegativesRankingLoss.MultipleNegativesRankingLoss` with parameters:
  ```
  {'scale': 20.0, 'similarity_fct': 'cos_sim'}
  ```

Parameters of the fit()-Method:
```
{
    "epochs": 10,
    "evaluation_steps": 0,
    "evaluator": "NoneType",
    "max_grad_norm": 1,
    "optimizer_class": "<class 'torch.optim.adamw.AdamW'>",
    "optimizer_params": {
        "lr": 2e-05
    },
    "scheduler": "WarmupLinear",
    "steps_per_epoch": null,
    "warmup_steps": 1000,
    "weight_decay": 0.01
}
```


## Full Model Architecture
```
SentenceTransformer(
  (0): Transformer({'max_seq_length': 512, 'do_lower_case': False}) with Transformer model: BertModel 
  (1): Pooling({'word_embedding_dimension': 768, 'pooling_mode_cls_token': False, 'pooling_mode_mean_tokens': True, 'pooling_mode_max_tokens': False, 'pooling_mode_mean_sqrt_len_tokens': False})
)
```

## Citing & Authors

<!--- Describe where people can find more information -->"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5919921398162842"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The model category is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/key> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/kategaranina/lt2t_lf_to_text/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2025-04-15T13:11:30+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/Xinging/llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.300436"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/sent> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "vi"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.641698"^^xsd:dateTime ;
    ns1:object "Optimized backend for deploying and serving text embedding models with high performance."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/86f52aa6369c70ec009cd27198c0d2e52782b473507c01a7426d4c1bf4185e05> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.664762"^^xsd:dateTime ;
    ns1:object "Feature Extraction"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/746e796ec31ad9ad2b517555a4e91b2e3dfff187021fd0255aae50476624430d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.690747"^^xsd:dateTime ;
    ns1:object "Joblib"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55f0c4818716a5c86a051b41b27450e6f00f7e81d8a89b0f3bd6928719ce08e4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.438737"^^xsd:dateTime ;
    ns1:object """In this work, we develop and release Llama 2, a collection of pretrained and
fine-tuned large language models (LLMs) ranging in scale from 7 billion to 70
billion parameters. Our fine-tuned LLMs, called Llama 2-Chat, are optimized for
dialogue use cases. Our models outperform open-source chat models on most
benchmarks we tested, and based on our human evaluations for helpfulness and
safety, may be a suitable substitute for closed-source models. We provide a
detailed description of our approach to fine-tuning and safety improvements of
Llama 2-Chat in order to enable the community to build on our work and
contribute to the responsible development of LLMs."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.519237294793129"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6164036989212036"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6335507035255432"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/rangapriyabatchu/black-forest-labsFLUX.1-dev> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ha"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "apache-2.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.42019639909267426"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.468219"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2212.04356"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6937326490879059"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5786862969398499"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-01-23T02:29:08+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "el"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6384265720844269"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "tk"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-03-02T23:15:39+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7143358588218689"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "To run the model after download, use the `enjoy` script corresponding to this environment."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.656627"^^xsd:dateTime ;
    ns1:object "Text to Video"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cba5458c023bd0e333fefb47511914b963716a71b0356b435370871727585038> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.295717"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cafa6cfd9a4170cbf6a99f2d8b42715517f11068dc92b807e31dad9ab0535893> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: apache-2.0
tags:
- generated_from_trainer
metrics:
- accuracy
- precision
- recall
- f1
model-index:
- name: bert-base-uncased-finetuned-3d-sentiment
  results: []
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# bert-base-uncased-finetuned-3d-sentiment

This model is a fine-tuned version of [bert-base-uncased](https://huggingface.co/bert-base-uncased) on the None dataset.
It achieves the following results on the evaluation set:
- Loss: 0.9271
- Accuracy: 0.7392
- Precision: 0.7455
- Recall: 0.7392
- F1: 0.7394

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 2e-05
- train_batch_size: 16
- eval_batch_size: 16
- seed: 42
- gradient_accumulation_steps: 4
- total_train_batch_size: 64
- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08
- lr_scheduler_type: linear
- lr_scheduler_warmup_steps: 6381
- num_epochs: 7
- mixed_precision_training: Native AMP

### Training results

| Training Loss | Epoch | Step  | Validation Loss | Accuracy | Precision | Recall | F1     |
|:-------------:|:-----:|:-----:|:---------------:|:--------:|:---------:|:------:|:------:|
| 0.8443        | 1.0   | 1595  | 0.8265          | 0.6659   | 0.6920    | 0.6659 | 0.6629 |
| 0.6037        | 2.0   | 3190  | 0.7380          | 0.7021   | 0.7207    | 0.7021 | 0.7014 |
| 0.516         | 3.0   | 4785  | 0.6740          | 0.7246   | 0.7337    | 0.7246 | 0.7234 |
| 0.4269        | 4.0   | 6380  | 0.7221          | 0.7290   | 0.7383    | 0.7290 | 0.7271 |
| 0.3149        | 5.0   | 7975  | 0.8368          | 0.7237   | 0.7422    | 0.7237 | 0.7230 |
| 0.1996        | 6.0   | 9570  | 0.9271          | 0.7392   | 0.7455    | 0.7392 | 0.7394 |
| 0.1299        | 7.0   | 11165 | 1.1062          | 0.7358   | 0.7461    | 0.7358 | 0.7361 |


### Framework versions

- Transformers 4.26.1
- Pytorch 1.13.1+cu117
- Datasets 2.10.1
- Tokenizers 0.13.3
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "pt"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5885726809501648"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/difficulty> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.38648858666419983"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The maintainer of the model is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/cleanrl/UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sl"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/output_file> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-08-06T05:05:42+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.638080"^^xsd:dateTime ;
    ns1:object "{'name': 'Greg Brockman', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.439244"^^xsd:dateTime ;
    ns1:object "cs.AI"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "base_model:black-forest-labs/FLUX.1-dev"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sd"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "split_name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.685419"^^xsd:dateTime ;
    ns1:object "Adapters"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ef8c453c903ecc79a3f941fc76e3fb554c3c0e3459f4a7a1755e64539b934598> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'time_limit' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/split> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sa"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw/question> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/04151ef09fe56a2be18a7d842066720d6e7cee10ed5bf1a3363193444decd94d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object schema:Organization ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c736da741f27fe816e63dbbfd53bc7e85fcc1276fc2e38ffea11708f1297d3b1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.646980"^^xsd:dateTime ;
    ns1:object "Models based on BERT (Bidirectional Encoder Representations from Transformers), a transformer architecture that learns contextual word embeddings."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0c3d01ed44dc2940ae38707146a02c16bc80cc8637ce48ac5f3125b7c6fb2982> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "raw/rationale"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.681378"^^xsd:dateTime ;
    ns1:object "Unity plugin that enables games and simulations to serve as environments for training intelligent agents."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/293ad034f899dc681b5be10c715f25c59fa7f5261f229b66d796246e10927354> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.467459"^^xsd:dateTime ;
    ns1:object "{'name': 'Zhicheng Dou', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.629972"^^xsd:dateTime ;
    ns1:object "JabrilJacobs"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/345eaa1fa623453840cdf3f6f07ec58414c463eee27c8faabf6a00b60d107b7e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "el"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.698376"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/jslin09/Fraud_Case_Verdicts"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4b9f1c2e337ab389e22c7201bf0f4d7d38207364272050ef9059cfa73185096f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6698363125324249"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "yo"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/125d01550d26a191f055cd53b0b7bf0298ef4a173496f10aa09a87ca1b3fdcbe> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.848058"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5597248822450638"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.652751"^^xsd:dateTime ;
    ns1:object "Identifies and locates objects within images using bounding boxes."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c6a31d1f7013eb41349bc590b0cc16d51b0a1706fa3f70c1337a8eecf06d2173> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6016317009925842"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/e694cb482434e33f5aadafc7ba5607930722b2bd1b0cb252690679261c8692f4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/action> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Split> ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5356903821229935"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object """Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found."""^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "base_model:black-forest-labs/FLUX.1-dev"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6613752841949463"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The version of the CreativeWork embodied by a specified resource is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.695208"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5931df18dd0fa4a7991df9c03e52fe5074eee570f6c3e7b480947ec85d10c3a1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'g_ids_features' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/g_ids_features> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.620571"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2eed015d9e895e8b60342313a6cfbe043c4bf437cc445573c4bc85b9f950e449> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.038324"^^xsd:dateTime ;
    ns1:object "flux"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7504a968f417dfe1555958db6caabff413bf4f321bbb9c477d4ff3a9352a0e4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2022-03-02T23:29:04+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6677097678184509"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5160014629364014"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6285069286823273"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/lachiewyoung/test-mistral-7b/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/63c4690edf3557f17b07f48296b33ccc383956a845d01233d59d9e359bf38c99> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5753261744976044"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Organization ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8c47ad9f935d95019e8ffaaae3b458d998d1a068ef4d8dfec71b304f4e4b1d52> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.270845"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f5a6a15b057055acaed46aabd835cf3eb56fa2343723cec43da3298c6a298537> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.3905680328607559"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.568913996219635"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.293836"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.679859"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4e5443728f51b2323bf3a1c4a6a6d8612484cbca0a8b0beeb5fb0258d1df5196> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "hy"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.449645"^^xsd:dateTime ;
    ns1:object "{'name': 'Melanie Kambadur', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.467621"^^xsd:dateTime ;
    ns1:object "{'name': 'Jian-Yun Nie', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "arxiv:2401.03462"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.674509"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.453879"^^xsd:dateTime ;
    ns1:object "{'name': 'Andreas Rücklé', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """
---
      tags:
      - unity-ml-agents
      - ml-agents
      - deep-reinforcement-learning
      - reinforcement-learning
      - ML-Agents-SnowballTarget
      library_name: ml-agents
---
    
  # **ppo** Agent playing **SnowballTarget**
  This is a trained model of a **ppo** agent playing **SnowballTarget** using the [Unity ML-Agents Library](https://github.com/Unity-Technologies/ml-agents).
  
  ## Usage (with ML-Agents)
  The Documentation: https://github.com/huggingface/ml-agents#get-started
  We wrote a complete tutorial to learn to train your first agent using ML-Agents and publish it to the Hub:


  ### Resume the training
  ```
  mlagents-learn <your_configuration_file_path.yaml> --run-id=<run_id> --resume
  ```
  ### Watch your Agent play
  You can watch your agent **playing directly in your browser:**.
  
  1. Go to https://huggingface.co/spaces/unity/ML-Agents-SnowballTarget
  2. Step 1: Write your model_id: danmorris427/ppo-SnowballTarget
  3. Step 2: Select your *.nn /*.onnx file
  4. Click on Watch the agent play 👀
  """^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'g_adj' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/g_adj> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.674886"^^xsd:dateTime ;
    ns1:object "Deep learning framework that provides tensor computation with GPU acceleration and automatic differentiation. Popular for research and production ML models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ha"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.39965754747390747"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.456740"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/source> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/url> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.47400693595409393"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is Lora of chokai_azurlane."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/seconds> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5485322177410126"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "tokenized/correct"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/a7eca72cd0a3a0ce30e3b37b299034e8cf2e3b921a7deaf54545b7d00e88c5e4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/jslin09/bloom-560m-finetuned-fraud/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "wav2vec2-base-demo-aug"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.652548"^^xsd:dateTime ;
    ns1:object "Object Detection"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c6a31d1f7013eb41349bc590b0cc16d51b0a1706fa3f70c1337a8eecf06d2173> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5427304804325104"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5365507304668427"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6282646656036377"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "tulio-chilean-spanish-bert-msmarco-qa-es-mnrl-mn"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/time_limit/seconds"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/seconds> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.651001"^^xsd:dateTime ;
    ns1:object "Extracts answers from documents based on questions."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5294100683a6737ae3cdcdb512f4b8459993c27fd8f86917ce5e595178c28f6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "license:other"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/heidragon3045/rl_course_vizdoom_health_gathering_supreme/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5116723775863647"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.294481"^^xsd:dateTime ;
    ns1:object "lambada"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.39590173959732056"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about storage requirements or the storage space needed for the model."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.373279"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a7eca72cd0a3a0ce30e3b37b299034e8cf2e3b921a7deaf54545b7d00e88c5e4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.534254714846611"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.43963518738746643"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Split> ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/07456871ec04ff7e102a14a63ee4f77775baadaf5e404b74e2ab827a14335259> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.435075"^^xsd:dateTime ;
    ns1:object "{'name': 'Alex Castro-Ros', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.335635"^^xsd:dateTime ;
    ns1:object "CyberHarem"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/907291d3b7300a7e84345915ff883a4d8615166ada0751e1be974994397ea77a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.685014"^^xsd:dateTime ;
    ns1:object "Simple framework for state-of-the-art NLP supporting tasks like named entity recognition and part-of-speech tagging."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6fd4d85e3416654bf33d9c5f3803b3e9900ce78a6309e4e6a84b2499ad4b7981> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-12-03T04:49:21+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-01-07T17:32:51+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.819528"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/hugging-robot"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2cd4674539f52a4c1a66b7cdd0a260e2f7f883d39de352d2bcbd28828386123c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/cf_rating"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_rating> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "hr"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/61cce84de930f0da8c78ddef3203a2afac70cf5e46684f0407180738cd821965> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "license:other"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.655666"^^xsd:dateTime ;
    ns1:object "Creates images without specific text prompts or conditions."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6803a9142550ca466078b0794746397f37034f277ce6f45bb7f252be171ab407> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.42557597160339355"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4712301790714264"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.701762"^^xsd:dateTime ;
    ns1:object "unity-sentis"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/145a1db14402ffd2d346a7bf50e3e9e8c75169383a079480e9ba655e5e2fab8a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/Xinging/llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.455329"^^xsd:dateTime ;
    ns1:object "cs.AI"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4820796698331833"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2025-03-07T01:35:50+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.285288"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ddb15bfa0ef843723bc4c8a81ab1d826b1fc4ff36ed13faf8f8f3841261978b8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/07456871ec04ff7e102a14a63ee4f77775baadaf5e404b74e2ab827a14335259> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5851501226425171"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.292872"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4a958b2cddc6f3096d3a4e912c3bf694e8c132edcdb79366c6a34dff81cbbc7b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object schema:Dataset ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/cleanrl/UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1287c3e8de674aa537460a43e7945dc0c75e59af087a9985f8c1291b24d4ffd6> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.441916"^^xsd:dateTime ;
    ns1:object "{'name': 'David Esiobu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/google/flan-t5-small> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-01-10T07:29:31+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4408009350299835"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "zh"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "license:mit"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.842375"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5abd6851ba981d32c4b27e5ae6335f97ca6195fbbf7e9731adf61b9920fae737> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "bn"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6208105981349945"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object """Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided"""^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.490616574883461"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.447079"^^xsd:dateTime ;
    ns1:object "{'name': 'Rashi Rungta', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/746e796ec31ad9ad2b517555a4e91b2e3dfff187021fd0255aae50476624430d> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.665921"^^xsd:dateTime ;
    ns1:object "Text2Text Generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/table_header> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.668634"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5693900883197784"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/difficulty> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ms"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/594a6f3cf66106516dc4e80f44dbe528cdcf0fb397d75a65d1b3b2a81dfc0f92> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6265018284320831"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.687447"^^xsd:dateTime ;
    ns1:object "End-to-end speech processing toolkit covering ASR, TTS, speech translation, and speech enhancement."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e9f8dc5efdf686d003f27fc61cf3a0b9e5dbed094499e8e3332f5c535d686f3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/cf_points> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.449167"^^xsd:dateTime ;
    ns1:object "{'name': 'Iliyan Zarov', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-08-18T02:27:58+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'correct' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.650418"^^xsd:dateTime ;
    ns1:object "Answers natural language questions about images."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/45ef55138ac28324915f59dee5c5614894be22d29e2a8283b76835bcb91e3e87> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.444931"^^xsd:dateTime ;
    ns1:object "{'name': 'Marie-Anne Lachaux', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/54e305dde447795b80481ad971eaf23195cddc3f5d2846c9ede5cc64115e586e> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/table_header"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/table_header> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/g_ids"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/g_ids> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.460484"^^xsd:dateTime ;
    ns1:object "{'name': 'Arthur Mensch', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.847436"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.682189"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a225e69a17f4be8c51cc1f1852c40371a478cfa95661008284bc676564a876e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/nid"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/nid> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: mit
datasets:
- CyberHarem/chokai_azurlane
pipeline_tag: text-to-image
tags:
- art
---

# Lora of chokai_azurlane

This model is trained with [HCP-Diffusion](https://github.com/7eu7d7/HCP-Diffusion). And the auto-training framework is maintained by [DeepGHS Team](https://huggingface.co/deepghs).

After downloading the pt and safetensors files for the specified step, you need to use them simultaneously. The pt file will be used as an embedding, while the safetensors file will be loaded for Lora.

For example, if you want to use the model from step 1500, you need to download `1500/chokai_azurlane.pt` as the embedding and `1500/chokai_azurlane.safetensors` for loading Lora. By using both files together, you can generate images for the desired characters.

**The trigger word is `chokai_azurlane`.**

These are available steps:

|   Steps | bikini                                   | free                                 | nude                                           | Download                             |
|--------:|:-----------------------------------------|:-------------------------------------|:-----------------------------------------------|:-------------------------------------|
|    1500 | ![bikini-1500](1500/previews/bikini.png) | ![free-1500](1500/previews/free.png) | [<NSFW, click to see>](1500/previews/nude.png) | [Download](1500/chokai_azurlane.zip) |
|    1400 | ![bikini-1400](1400/previews/bikini.png) | ![free-1400](1400/previews/free.png) | [<NSFW, click to see>](1400/previews/nude.png) | [Download](1400/chokai_azurlane.zip) |
|    1300 | ![bikini-1300](1300/previews/bikini.png) | ![free-1300](1300/previews/free.png) | [<NSFW, click to see>](1300/previews/nude.png) | [Download](1300/chokai_azurlane.zip) |
|    1200 | ![bikini-1200](1200/previews/bikini.png) | ![free-1200](1200/previews/free.png) | [<NSFW, click to see>](1200/previews/nude.png) | [Download](1200/chokai_azurlane.zip) |
|    1100 | ![bikini-1100](1100/previews/bikini.png) | ![free-1100](1100/previews/free.png) | [<NSFW, click to see>](1100/previews/nude.png) | [Download](1100/chokai_azurlane.zip) |
|    1000 | ![bikini-1000](1000/previews/bikini.png) | ![free-1000](1000/previews/free.png) | [<NSFW, click to see>](1000/previews/nude.png) | [Download](1000/chokai_azurlane.zip) |
|     900 | ![bikini-900](900/previews/bikini.png)   | ![free-900](900/previews/free.png)   | [<NSFW, click to see>](900/previews/nude.png)  | [Download](900/chokai_azurlane.zip)  |
|     800 | ![bikini-800](800/previews/bikini.png)   | ![free-800](800/previews/free.png)   | [<NSFW, click to see>](800/previews/nude.png)  | [Download](800/chokai_azurlane.zip)  |
|     700 | ![bikini-700](700/previews/bikini.png)   | ![free-700](700/previews/free.png)   | [<NSFW, click to see>](700/previews/nude.png)  | [Download](700/chokai_azurlane.zip)  |
|     600 | ![bikini-600](600/previews/bikini.png)   | ![free-600](600/previews/free.png)   | [<NSFW, click to see>](600/previews/nude.png)  | [Download](600/chokai_azurlane.zip)  |
|     500 | ![bikini-500](500/previews/bikini.png)   | ![free-500](500/previews/free.png)   | [<NSFW, click to see>](500/previews/nude.png)  | [Download](500/chokai_azurlane.zip)  |
|     400 | ![bikini-400](400/previews/bikini.png)   | ![free-400](400/previews/free.png)   | [<NSFW, click to see>](400/previews/nude.png)  | [Download](400/chokai_azurlane.zip)  |
|     300 | ![bikini-300](300/previews/bikini.png)   | ![free-300](300/previews/free.png)   | [<NSFW, click to see>](300/previews/nude.png)  | [Download](300/chokai_azurlane.zip)  |
|     200 | ![bikini-200](200/previews/bikini.png)   | ![free-200](200/previews/free.png)   | [<NSFW, click to see>](200/previews/nude.png)  | [Download](200/chokai_azurlane.zip)  |
|     100 | ![bikini-100](100/previews/bikini.png)   | ![free-100](100/previews/free.png)   | [<NSFW, click to see>](100/previews/nude.png)  | [Download](100/chokai_azurlane.zip)  |


"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.658325"^^xsd:dateTime ;
    ns1:object "Zero Shot Object Detection"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ab2624f913f0d530408cbfa25c29a33523a1a481ba19c3d46f91a6fac4e63844> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/cafa6cfd9a4170cbf6a99f2d8b42715517f11068dc92b807e31dad9ab0535893> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ka"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.455006"^^xsd:dateTime ;
    ns1:object "2023-09-14"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6116752624511719"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.259682"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/61cce84de930f0da8c78ddef3203a2afac70cf5e46684f0407180738cd821965> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "km"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object schema:Dataset ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.311053"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.745038"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-04-02T14:00:04+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5267272591590881"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.335801"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/CyberHarem"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/907291d3b7300a7e84345915ff883a4d8615166ada0751e1be974994397ea77a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5249321460723877"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
tags:
- text-classification
- adapterhub:rc/multirc
- bert
- adapter-transformers
language:
- en
---

# Adapter `AdapterHub/bert-base-uncased-pf-multirc` for bert-base-uncased

An [adapter](https://adapterhub.ml) for the `bert-base-uncased` model that was trained on the [rc/multirc](https://adapterhub.ml/explore/rc/multirc/) dataset and includes a prediction head for classification.

This adapter was created for usage with the **[adapter-transformers](https://github.com/Adapter-Hub/adapter-transformers)** library.

## Usage

First, install `adapter-transformers`:

```
pip install -U adapter-transformers
```
_Note: adapter-transformers is a fork of transformers that acts as a drop-in replacement with adapter support. [More](https://docs.adapterhub.ml/installation.html)_

Now, the adapter can be loaded and activated like this:

```python
from transformers import AutoModelWithHeads

model = AutoModelWithHeads.from_pretrained("bert-base-uncased")
adapter_name = model.load_adapter("AdapterHub/bert-base-uncased-pf-multirc", source="hf")
model.active_adapters = adapter_name
```

## Architecture & Training

The training code for this adapter is available at https://github.com/adapter-hub/efficient-task-transfer.
In particular, training configurations for all tasks can be found [here](https://github.com/adapter-hub/efficient-task-transfer/tree/master/run_configs).


## Evaluation results

Refer to [the paper](https://arxiv.org/pdf/2104.08247) for more information on results.

## Citation

If you use this adapter, please cite our paper ["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247):

```bibtex
@inproceedings{poth-etal-2021-pre,
    title = "{W}hat to Pre-Train on? {E}fficient Intermediate Task Selection",
    author = {Poth, Clifton  and
      Pfeiffer, Jonas  and
      R{"u}ckl{'e}, Andreas  and
      Gurevych, Iryna},
    booktitle = "Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing",
    month = nov,
    year = "2021",
    address = "Online and Punta Cana, Dominican Republic",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/2021.emnlp-main.827",
    pages = "10585--10605",
}
```"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/Xinging/llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.700454"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b07372cae2aaf834044064c3f58684a47c8f4685d11fccf85dbb95dac4dc7141> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4713357836008072"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'public_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.716248"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0994690604942759c573cba9c9ac3ba7475a580bd342b27f75b529860f3a2715> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.49947935342788696"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/output_file"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/output_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.668411"^^xsd:dateTime ;
    ns1:object "Generates audio content from textual descriptions."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/435f6e89d90ad4bd6be870aa7e1a66a9ce6bb4c201cdc1adf4aec7db47ff1148> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.485256165266037"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sn"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.606304"^^xsd:dateTime ;
    ns1:object "AdapterHub"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4430451dbf73b569af5e3deca9703720c96fa918ac4f295a37785e7c1bb43cb0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "bg"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Dataset ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/898caa90de5afdec703301d3cfdf0da7aa6bc966ea4ada73d27d88cf3f1961a6> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "de"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5932005345821381"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The intended use of the model is not explicitly stated in the given context. However, it is mentioned that the model is available in Safetensors format and can be downloaded from the Files & versions tab. The context does not provide information about the specific purpose or intended use of the model. Therefore, the answer is \"Information not found.\""^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:svakulenk0/qrecc"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5426005721092224"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.656232"^^xsd:dateTime ;
    ns1:object "Categorizes video content into predefined classes."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9132b663f2893be0a7b034405164be91c4fe250d2b1ecd3390fb9b9bd689997b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6479559242725372"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.456332"^^xsd:dateTime ;
    ns1:object "{'name': 'Defu Lian', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6723010241985321"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.454296"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Float ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_points> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4246884286403656"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/google/flan-t5-small"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "br"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "it"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4966573566198349"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-09-03T06:51:11+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object schema:Dataset ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85c031d4978df58bad8b74228a432699b1fdeaea4c730871d5eb91de8d9a42ad> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.260694"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.258107"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6690469682216644"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: mit
datasets:
- kasnerz/logic2text
language:
- en
---

## Model description

This is a fine-tuned [t5-base](https://huggingface.co/t5-base) model for generating sentences from logical forms and basic table metadata. 
It is a part of table-to-text pipeline with content selection and logical reasoning, trained on [Logic2Text dataset](https://aclanthology.org/2020.findings-emnlp.190/).
The first pipeline step is done by [kategaranina/lt2t_content_selection](https://huggingface.co/kategaranina/lt2t_content_selection) model.
For relevant code, see [LT2T repository](https://github.com/kategerasimenko/LT2T) on GitHub.

Example of input:

```
Title: list of cities , towns and villages in vojvodina.
Header: settlement | cyrillic name other names | type | population ( 2011 ) | largest ethnic group ( 2002 ) | dominant religion ( 2002 ).
Logical form: and { only { filter_eq { all_rows ; largest ethnic group ( 2002 ) ; slovaks } } ; eq { hop { filter_eq { all_rows ; largest ethnic group ( 2002 ) ; slovaks } ; settlement } ; pivnice } }
```

Example of output:
```
pivnice is the only settlement in vojvodina with slovaks as the largest ethnic group .
```"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/num_func> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.687274"^^xsd:dateTime ;
    ns1:object "ESPnet"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e9f8dc5efdf686d003f27fc61cf3a0b9e5dbed094499e8e3332f5c535d686f3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/venetis/bert-base-uncased-finetuned-3d-sentiment/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4689811170101166"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6919327080249786"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The intended use of Llama 2 is for commercial and research use in English."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'logic' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/logic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4e5443728f51b2323bf3a1c4a6a6d8612484cbca0a8b0beeb5fb0258d1df5196> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.693450"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d6f86ddd52b22c26a6970ea3473a2f8e657e9600a3cea6dd33e7307bf848d475> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5405555665493011"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Split to which the example belongs to."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.649082"^^xsd:dateTime ;
    ns1:object "mistral"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ddb15bfa0ef843723bc4c8a81ab1d826b1fc4ff36ed13faf8f8f3841261978b8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.672212"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.842709"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/BAAI"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5abd6851ba981d32c4b27e5ae6335f97ca6195fbbf7e9731adf61b9920fae737> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/e05dcf019c16b58ee18632feff8d896599b435fed50864784dfbbf57cfeb9f88> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/46bf92c851d51c701bc0d7be65ae6244619cbe1fe5bdf474aea372173952ef41> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.296678"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/43bc0319b35edce6a819b7513d5d158c1ea9bd4b7e1f558fabd51fb09b4f7755> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.819212"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2cd4674539f52a4c1a66b7cdd0a260e2f7f883d39de352d2bcbd28828386123c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.359437"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/DianaJin"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8c29861cff92b34ba1887aa267cf20a6a2124ec092919b27c388fb31ecb5f269> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/83d2ad9ecbe1efe91b88526c0d0a22b67ee3915db215cf33f6f7ef1357cd6573> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/11ee21b926795a2b7d2cb2d939044519ace34ac86e6b6a59a47dcb4bba5eb7a4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2025-02-07T15:09:13+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "split_name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6868902146816254"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.38802391290664673"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base.en/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-03-09T09:29:52+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.467295"^^xsd:dateTime ;
    ns1:object "{'name': 'Zheng Liu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "license:cc-by-nc-4.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
language: vi
datasets:
- vlsp
- vivos
tags:
- audio
- automatic-speech-recognition
license: cc-by-nc-4.0
widget:
- example_title: VLSP ASR 2020 test T1
  src: https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h/raw/main/audio-test/t1_0001-00010.wav
- example_title: VLSP ASR 2020 test T1
  src: https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h/raw/main/audio-test/t1_utt000000042.wav
- example_title: VLSP ASR 2020 test T2
  src: https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h/raw/main/audio-test/t2_0000006682.wav
model-index:
- name: Vietnamese end-to-end speech recognition using wav2vec 2.0 by VietAI
  results:
  - task:
      type: automatic-speech-recognition
      name: Speech Recognition
    dataset:
      name: Common Voice vi
      type: common_voice
      args: vi
    metrics:
    - type: wer
      value: 11.52
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Speech Recognition
    dataset:
      name: VIVOS
      type: vivos
      args: vi
    metrics:
    - type: wer
      value: 6.15
      name: Test WER
---

# Vietnamese end-to-end speech recognition using wav2vec 2.0

[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/vietnamese-end-to-end-speech-recognition/speech-recognition-on-common-voice-vi)](https://paperswithcode.com/sota/speech-recognition-on-common-voice-vi?p=vietnamese-end-to-end-speech-recognition)

[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/vietnamese-end-to-end-speech-recognition/speech-recognition-on-vivos)](https://paperswithcode.com/sota/speech-recognition-on-vivos?p=vietnamese-end-to-end-speech-recognition)


[Facebook's Wav2Vec2](https://ai.facebook.com/blog/wav2vec-20-learning-the-structure-of-speech-from-raw-audio/)

### Model description

[Our models](https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h) are pre-trained on 13k hours of Vietnamese youtube audio (un-label data) and fine-tuned on 250 hours labeled of [VLSP ASR dataset](https://vlsp.org.vn/vlsp2020/eval/asr) on 16kHz sampled speech audio. 

We use [wav2vec2 architecture](https://ai.facebook.com/blog/wav2vec-20-learning-the-structure-of-speech-from-raw-audio/) for the pre-trained model. Follow wav2vec2 paper:

>For the first time that learning powerful representations from speech audio alone followed by fine-tuning on transcribed speech can outperform the best semi-supervised methods while being conceptually simpler.

For fine-tuning phase, wav2vec2 is fine-tuned using Connectionist Temporal Classification (CTC), which is an algorithm that is used to train neural networks for sequence-to-sequence problems and mainly in Automatic Speech Recognition and handwriting recognition.

| Model | #params | Pre-training data | Fine-tune data |
|---|---|---|---|
| [base]((https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h)) | 95M | 13k hours | 250 hours |

In a formal ASR system, two components are required: acoustic model and language model. Here ctc-wav2vec fine-tuned model works as an acoustic model. For the language model, we provide a [4-grams model](https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h/blob/main/vi_lm_4grams.bin.zip) trained on 2GB of spoken text. 

Detail of training and fine-tuning process, the audience can follow [fairseq github](https://github.com/pytorch/fairseq/tree/master/examples/wav2vec) and [huggingface blog](https://huggingface.co/blog/fine-tune-wav2vec2-english).

### Benchmark WER result:

| | [VIVOS](https://ailab.hcmus.edu.vn/vivos) | [COMMON VOICE VI](https://paperswithcode.com/dataset/common-voice) | [VLSP-T1](https://vlsp.org.vn/vlsp2020/eval/asr) | [VLSP-T2](https://vlsp.org.vn/vlsp2020/eval/asr) |
|---|---|---|---|---|
|without LM| 10.77 | 18.34 | 13.33 | 51.45 |
|with 4-grams LM| 6.15 | 11.52 | 9.11 | 40.81 |


### Example usage

When using the model make sure that your speech input is sampled at 16Khz. Audio length should be shorter than 10s. Following the Colab link below to use a combination of CTC-wav2vec and 4-grams LM.

[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1pVBY46gSoWer2vDf0XmZ6uNV3d8lrMxx?usp=sharing)


```python
from transformers import Wav2Vec2Processor, Wav2Vec2ForCTC
from datasets import load_dataset
import soundfile as sf
import torch

# load model and tokenizer
processor = Wav2Vec2Processor.from_pretrained("nguyenvulebinh/wav2vec2-base-vietnamese-250h")
model = Wav2Vec2ForCTC.from_pretrained("nguyenvulebinh/wav2vec2-base-vietnamese-250h")

# define function to read in sound file
def map_to_array(batch):
    speech, _ = sf.read(batch["file"])
    batch["speech"] = speech
    return batch

# load dummy dataset and read soundfiles
ds = map_to_array({
    "file": 'audio-test/t1_0001-00010.wav'
})

# tokenize
input_values = processor(ds["speech"], return_tensors="pt", padding="longest").input_values  # Batch size 1

# retrieve logits
logits = model(input_values).logits

# take argmax and decode
predicted_ids = torch.argmax(logits, dim=-1)
transcription = processor.batch_decode(predicted_ids)
 ```

### Model Parameters License

The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode

### Citation

[![CITE](https://zenodo.org/badge/DOI/10.5281/zenodo.5356039.svg)](https://github.com/vietai/ASR)

```text
@misc{Thai_Binh_Nguyen_wav2vec2_vi_2021,
  author = {Thai Binh Nguyen},
  doi = {10.5281/zenodo.5356039},
  month = {09},
  title = {{Vietnamese end-to-end speech recognition using wav2vec 2.0}},
  url = {https://github.com/vietai/ASR},
  year = {2021}
}
```
**Please CITE** our repo when it is used to help produce published results or is incorporated into other software.

# Contact 

nguyenvulebinh@gmail.com / binh@vietai.org

[![Follow](https://img.shields.io/twitter/follow/nguyenvulebinh?style=social)](https://twitter.com/intent/follow?screen_name=nguyenvulebinh)"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5320282578468323"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "az"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f57740f97820ddb55f90898c07a60a736e9a9030d5eac125af5c595ad0638c8f> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5878423303365707"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The intended use of the Adapter `AdapterHub/bert-base-uncased-pf-multirc` for bert-base-uncased is for downstream use, which means it can be used for tasks other than the original pre-training task. This adapter can be loaded and activated to perform specific downstream tasks, such as question answering or text classification, using the pre-trained BERT model."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.678085"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ea5c52c0ba4305614a2132e3998c1bc735c574db3f8dd76dab1ede8aeef926a9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.645802"^^xsd:dateTime ;
    ns1:object "Models quantized to 8-bit precision, balancing performance and memory efficiency."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/192e3c37cdad044da28b01edd768819d9dc9ebf5642a4dd3e0cf9564058b6d2a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.645629"^^xsd:dateTime ;
    ns1:object "8-bit precision"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/192e3c37cdad044da28b01edd768819d9dc9ebf5642a4dd3e0cf9564058b6d2a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.42196473479270935"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.258572"^^xsd:dateTime ;
    ns1:object "text-generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79cf083846a8329d2912fcd7f375233c37a54917af291bb945f0b58bc735b8ad> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.442567"^^xsd:dateTime ;
    ns1:object "{'name': 'Brian Fuller', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "oc"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5686678290367126"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/interpret> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.444604"^^xsd:dateTime ;
    ns1:object "{'name': 'Artem Korenev', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/g_ids_features> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.640328"^^xsd:dateTime ;
    ns1:object "AutoTrain Compatible"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/59b663660275b892172a573e140e5eeec1a75e54c1838aea8d6f78d0f6286eba> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sk"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "te"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/e694cb482434e33f5aadafc7ba5607930722b2bd1b0cb252690679261c8692f4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ta"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.260077"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'input_file' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/input_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.48798760771751404"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5897512137889862"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2024-08-16T14:38:19+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/num_func> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6067144274711609"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object """To load and activate the adapter, you can use the following code:

```python
from transformers import BertForQuestionAnswering, BertConfig, BertTokenizer

# Load the pre-trained model and tokenizer
model = BertForQuestionAnswering.from_pretrained("AdapterHub/bert-base-uncased-pf-multirc")
tokenizer = BertTokenizer.from_pretrained("AdapterHub/bert-base-uncased-pf-multirc")

# Load the adapter
adapter = AdapterHub.load_adapter("AdapterHub/bert-base-uncased-pf-multirc")

# Activate the adapter
model.load_adapter(adapter)

# Now you can use the model for question answering
```

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-Train on? Efficient Intermediate Task Selection"](https://arxiv.org/pdf/2104.08247)

Question: Find the citation in the following text, here is a description of the property: (Citation for the model.) here are some related sections: How to Get Started with the Model ; Citation

Answer: To cite the model, please refer to the following paper:

["What to Pre-"""^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/wiki"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/wiki> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/cf_index"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_index> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "raw/options"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.847249"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2312.15503"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "other"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.721417248249054"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5986148118972778"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "socratic"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7129934132099152"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "Splits for the plain_text config."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/e694cb482434e33f5aadafc7ba5607930722b2bd1b0cb252690679261c8692f4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5509799122810364"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.469553"^^xsd:dateTime ;
    ns1:object "{'name': 'Jong Wook Kim', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6714237630367279"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6817622482776642"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Dataset ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.698041"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4b9f1c2e337ab389e22c7201bf0f4d7d38207364272050ef9059cfa73185096f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/lachiewyoung/test-mistral-7b> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/JabrilJacobs/ppo-Pyramids> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.660235"^^xsd:dateTime ;
    ns1:object "Extracts meaningful features from images for downstream tasks."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/46fd5133284e3f6058330c31c628a6854b5eeb608d471e58c7052d9365f5acf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.446403"^^xsd:dateTime ;
    ns1:object "{'name': 'Igor Molybog', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5568815767765045"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5949294567108154"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.469062"^^xsd:dateTime ;
    ns1:object "cs.LG"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/solutions/language"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "The name of the split."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.065153"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "raw/correct"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/04151ef09fe56a2be18a7d842066720d6e7cee10ed5bf1a3363193444decd94d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/key> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c2bc5ea384adb0de57836592cd3a94389a4ac3b4d1ca61902373d052a7ad36cb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sv"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.456174"^^xsd:dateTime ;
    ns1:object "{'name': 'Niklas Muennighoff', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2023-07-13T16:16:13+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/socratic/question> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.669372"^^xsd:dateTime ;
    ns1:object "Audio to Audio"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21a4b3b0fe861021548d89e241eb815b3c147c6d12ec9eade6925be45bc78650> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.698676"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/119bd2aa6d51fb076ddf89b0c5c2536f1550ff5bf549b11a6c834340b0979a14> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "as"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "[{\"default_splits/split_name\":\"train\"},{\"default_splits/split_name\":\"test\"},{\"default_splits/split_name\":\"valid\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.683621"^^xsd:dateTime ;
    ns1:object "sample-factory"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/15ceeb8703c6ba669411911c62acbbac38f4d1235e8ac6118537ac1e6d75ae84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ka"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.771858"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/83d2ad9ecbe1efe91b88526c0d0a22b67ee3915db215cf33f6f7ef1357cd6573> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/num_func"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/num_func> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "hi"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.445760"^^xsd:dateTime ;
    ns1:object "{'name': 'Yuning Mao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'incorrect_solutions' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'table_header' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/table_header> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ne"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/jslin09/bloom-560m-finetuned-fraud> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-05-05T06:34:19+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.439565"^^xsd:dateTime ;
    ns1:object "{'name': 'Louis Martin', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5583094954490662"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0b6c077d0e7e512fe4a09f8d65944ef93c47c0c822ba512f9d69a0205fbc4e04> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.651800"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/25a48b7b32ec31051c00ea96f30d1637f216eb0ed7620da77d06c4637ab5da7f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.688579"^^xsd:dateTime ;
    ns1:object "Array framework for machine learning on Apple silicon, designed for efficiency and ease of use."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85b6833a0e3a566c8de87c0f42b57ec97f67e03180245edb416823e240ee11d1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.640898"^^xsd:dateTime ;
    ns1:object "text-generation-inference"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.671329"^^xsd:dateTime ;
    ns1:object "Categorizes rows in tabular data into predefined classes."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4eaeba2a8985fdb21e18ca1e967f067a345c0498ed10fc3e5e9ba95e39876cab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ru"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "tokenized_splits"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: cc-by-nc-4.0
base_model: nguyenvulebinh/wav2vec2-base-vietnamese-250h
tags:
- generated_from_trainer
model-index:
- name: wav2vec2-base-demo-aug
  results: []
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# wav2vec2-base-demo-aug

This model is a fine-tuned version of [nguyenvulebinh/wav2vec2-base-vietnamese-250h](https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h) on the None dataset.
It achieves the following results on the evaluation set:
- eval_loss: 0.5138
- eval_wer: 0.2151
- eval_runtime: 50.9731
- eval_samples_per_second: 14.674
- eval_steps_per_second: 1.844
- epoch: 21.85
- step: 9200

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 8e-06
- train_batch_size: 32
- eval_batch_size: 8
- seed: 42
- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08
- lr_scheduler_type: linear
- lr_scheduler_warmup_steps: 1000
- num_epochs: 30

### Framework versions

- Transformers 4.33.0.dev0
- Pytorch 2.0.0
- Datasets 2.14.4.dev0
- Tokenizers 0.13.3
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4394472986459732"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "he"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6099399626255035"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.606456"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/AdapterHub"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4430451dbf73b569af5e3deca9703720c96fa918ac4f295a37785e7c1bb43cb0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.699047"^^xsd:dateTime ;
    ns1:object "Library for span-based named entity recognition using transformer models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/119bd2aa6d51fb076ddf89b0c5c2536f1550ff5bf549b11a6c834340b0979a14> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "zh"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5479536056518555"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/b6010051e02699a6f2c68fb88d7ff60b81f5d07a4480548861898a687a9a3757> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'num_func' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/num_func> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "pt"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.690749317407608"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "zh"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.842539"^^xsd:dateTime ;
    ns1:object "BAAI"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5abd6851ba981d32c4b27e5ae6335f97ca6195fbbf7e9731adf61b9920fae737> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "cy"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5974069535732269"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "base_model:nguyenvulebinh/wav2vec2-base-vietnamese-250h"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "bg"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object """cimec/lambada - 'plain_text' subset

Additional information:
- 3 splits: train, test, validation"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.697535"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7daea98679eae3b5819f476833cada39b566629edb49ee1f55db0016e8ecf118> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.437447"^^xsd:dateTime ;
    ns1:object "{'name': 'Adam Roberts', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4721503257751465"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the contributors or authors of the model. Therefore, the answer is \"Information not found\"."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/black-forest-labs/FLUX.1-dev> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "af"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4e5443728f51b2323bf3a1c4a6a6d8612484cbca0a8b0beeb5fb0258d1df5196> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "he"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "bs"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.672564"^^xsd:dateTime ;
    ns1:object "Trains agents through interaction with environments using rewards."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.357517"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "license:bigscience-bloom-rail-1.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Splits for the tokenized config."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.3896474540233612"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.260538"^^xsd:dateTime ;
    ns1:object "text-generation-inference"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/83f6b13508bdbd7f513cbd6de7ef5170638d3e63612800f251838bd8e03c995e> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/2529572666d8ae917752f418f0b008b820cf821a3ba355927ca159454740dce7> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4954465478658676"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "arxiv:2212.04356"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.302218"^^xsd:dateTime ;
    ns1:object "google"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/125d01550d26a191f055cd53b0b7bf0298ef4a173496f10aa09a87ca1b3fdcbe> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/kategaranina/lt2t_lf_to_text> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/logic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ja"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.462856"^^xsd:dateTime ;
    ns1:object "{'name': 'Timothée Lacroix', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6487321257591248"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/solution> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.654483"^^xsd:dateTime ;
    ns1:object "Converts visual content from images into textual representations."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/266c130bc128debb0db48b7a2e58c6423c7bafb2445fcccd68e2da192f3487d1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4917215257883072"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/hugging-robot/ppo-Huggy> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/emersoftware/tulio-chilean-spanish-bert-msmarco-qa-es-mnrl-mn/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6201388835906982"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5876661539077759"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/8e9892e571845c79509180a69a268f19c0592a4e975a5fd3e16f2059af61ea75> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object """openai/gsm8k - 'socratic' subset

Additional information:
- 2 splits: train, test"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ca"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'generated_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.913784"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4501323997974396"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.038171"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7504a968f417dfe1555958db6caabff413bf4f321bbb9c477d4ff3a9352a0e4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6694968640804291"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6062603294849396"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'name' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "id"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.429663"^^xsd:dateTime ;
    ns1:object "cs.IR"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/07456871ec04ff7e102a14a63ee4f77775baadaf5e404b74e2ab827a14335259> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/memory_limit_bytes> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "tt"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-03-04T01:33:40+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.453008"^^xsd:dateTime ;
    ns1:object """Intermediate task fine-tuning has been shown to culminate in large transfer
gains across many NLP tasks. With an abundance of candidate datasets as well as
pre-trained language models, it has become infeasible to run the cross-product
of all combinations to find the best transfer setting. In this work we first
establish that similar sequential fine-tuning gains can be achieved in adapter
settings, and subsequently consolidate previously proposed methods that
efficiently identify beneficial tasks for intermediate transfer learning. We
experiment with a diverse set of 42 intermediate and 11 target English
classification, multiple choice, question answering, and sequence tagging
tasks. Our results show that efficient embedding based methods that rely solely
on the respective datasets outperform computational expensive few-shot
fine-tuning approaches. Our best methods achieve an average Regret@3 of less
than 1% across all target tasks, demonstrating that we are able to efficiently
identify the best datasets for intermediate training."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6458511650562286"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5555847436189651"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.438399"^^xsd:dateTime ;
    ns1:object "Llama 2: Open Foundation and Fine-Tuned Chat Models"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5187220871448517"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'cf_points' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_points> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.443449"^^xsd:dateTime ;
    ns1:object "{'name': 'Saghar Hosseini', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4711773544549942"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/is_description_translated> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: apache-2.0
pipeline_tag: text-generation
tags:
- finetuned
inference: true
widget:
- messages:
  - role: user
    content: What is your favorite condiment?
---

# Model Card for Mistral-7B-Instruct-v0.2

The Mistral-7B-Instruct-v0.2 Large Language Model (LLM) is an improved instruct fine-tuned version of [Mistral-7B-Instruct-v0.1](https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.1).

For full details of this model please read our [paper](https://arxiv.org/abs/2310.06825) and [release blog post](https://mistral.ai/news/la-plateforme/).

## Instruction format

In order to leverage instruction fine-tuning, your prompt should be surrounded by `[INST]` and `[/INST]` tokens. The very first instruction should begin with a begin of sentence id. The next instructions should not. The assistant generation will be ended by the end-of-sentence token id.

E.g.
```
text = "<s>[INST] What is your favourite condiment? [/INST]"
"Well, I'm quite partial to a good squeeze of fresh lemon juice. It adds just the right amount of zesty flavour to whatever I'm cooking up in the kitchen!</s> "
"[INST] Do you have mayonnaise recipes? [/INST]"
```

This format is available as a [chat template](https://huggingface.co/docs/transformers/main/chat_templating) via the `apply_chat_template()` method:

```python
from transformers import AutoModelForCausalLM, AutoTokenizer

device = "cuda" # the device to load the model onto

model = AutoModelForCausalLM.from_pretrained("mistralai/Mistral-7B-Instruct-v0.2")
tokenizer = AutoTokenizer.from_pretrained("mistralai/Mistral-7B-Instruct-v0.2")

messages = [
    {"role": "user", "content": "What is your favourite condiment?"},
    {"role": "assistant", "content": "Well, I'm quite partial to a good squeeze of fresh lemon juice. It adds just the right amount of zesty flavour to whatever I'm cooking up in the kitchen!"},
    {"role": "user", "content": "Do you have mayonnaise recipes?"}
]

encodeds = tokenizer.apply_chat_template(messages, return_tensors="pt")

model_inputs = encodeds.to(device)
model.to(device)

generated_ids = model.generate(model_inputs, max_new_tokens=1000, do_sample=True)
decoded = tokenizer.batch_decode(generated_ids)
print(decoded[0])
```

## Model Architecture
This instruction model is based on Mistral-7B-v0.1, a transformer model with the following architecture choices:
- Grouped-Query Attention
- Sliding-Window Attention
- Byte-fallback BPE tokenizer

## Troubleshooting
- If you see the following error:
```
Traceback (most recent call last):
File "", line 1, in
File "/transformers/models/auto/auto_factory.py", line 482, in from_pretrained
config, kwargs = AutoConfig.from_pretrained(
File "/transformers/models/auto/configuration_auto.py", line 1022, in from_pretrained
config_class = CONFIG_MAPPING[config_dict["model_type"]]
File "/transformers/models/auto/configuration_auto.py", line 723, in getitem
raise KeyError(key)
KeyError: 'mistral'
```

Installing transformers from source should solve the issue
pip install git+https://github.com/huggingface/transformers

This should not be required after transformers-v4.33.4.

## Limitations

The Mistral 7B Instruct model is a quick demonstration that the base model can be easily fine-tuned to achieve compelling performance. 
It does not have any moderation mechanisms. We're looking forward to engaging with the community on ways to
make the model finely respect guardrails, allowing for deployment in environments requiring moderated outputs.

## The Mistral AI Team

Albert Jiang, Alexandre Sablayrolles, Arthur Mensch, Blanche Savary, Chris Bamford, Devendra Singh Chaplot, Diego de las Casas, Emma Bou Hanna, Florian Bressand, Gianna Lengyel, Guillaume Bour, Guillaume Lample, Lélio Renard Lavaud, Louis Ternon, Lucile Saulnier, Marie-Anne Lachaux, Pierre Stock, Teven Le Scao, Théophile Gervet, Thibaut Lavril, Thomas Wang, Timothée Lacroix, William El Sayed."""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.291523"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.431486"^^xsd:dateTime ;
    ns1:object "cs.LG"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw/rationale> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.630127"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/JabrilJacobs"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/345eaa1fa623453840cdf3f6f07ec58414c463eee27c8faabf6a00b60d107b7e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "split_name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.650083"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/45ef55138ac28324915f59dee5c5614894be22d29e2a8283b76835bcb91e3e87> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.692518"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/345644230f7e711605ef233127803f06659ae1bd200eadaf0bb48fd111eb8366> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/incorrect_solutions/language"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "de"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5244492441415787"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.638358"^^xsd:dateTime ;
    ns1:object "{'name': 'Christine McLeavey', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6581689417362213"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6102847158908844"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The operating systems supported for this model are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6411961317062378"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.642123"^^xsd:dateTime ;
    ns1:object "Eval Results"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6bdae8c542a61819acfd0767eb5e55cafba29955aaefd1261c204618a4d3a487> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.604545"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85f0e69a70ce025a206d6ddbf78d989a3cabbdae215f2045df9b67b21a9d6780> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2025-04-15T13:06:21+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.809599"^^xsd:dateTime ;
    ns1:object "diffusers"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d462b48c96b732d754a938aa86dbd16bfb7478ca5b0c1f1f006c611c112094e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/cf_tags> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.847092"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "raw"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.641323983669281"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6257670521736145"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/CyberHarem/chokai_azurlane> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6111887991428375"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.67307448387146"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The intended use of FlagEmbedding is for direct use, as stated in the text: \"If you find this repository useful, please consider giving a star :star: and citation.\""^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.658763"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dc96ea445d125873bc02183accca8dffafbc58c6100167ef5b113919f5afb57e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.455651"^^xsd:dateTime ;
    ns1:object "{'name': 'Shitao Xiao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "dataset:vivos"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.483553946018219"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
library_name: sample-factory
tags:
- deep-reinforcement-learning
- reinforcement-learning
- sample-factory
model-index:
- name: APPO
  results:
  - task:
      type: reinforcement-learning
      name: reinforcement-learning
    dataset:
      name: doom_health_gathering_supreme
      type: doom_health_gathering_supreme
    metrics:
    - type: mean_reward
      value: 12.03 +/- 6.27
      name: mean_reward
      verified: false
---

A(n) **APPO** model trained on the **doom_health_gathering_supreme** environment.

This model was trained using Sample-Factory 2.0: https://github.com/alex-petrenko/sample-factory.
Documentation for how to use Sample-Factory can be found at https://www.samplefactory.dev/


## Downloading the model

After installing Sample-Factory, download the model with:
```
python -m sample_factory.huggingface.load_from_hub -r heidragon3045/rl_course_vizdoom_health_gathering_supreme
```

    
## Using the model

To run the model after download, use the `enjoy` script corresponding to this environment:
```
python -m .usr.local.lib.python3.9.dist-packages.ipykernel_launcher --algo=APPO --env=doom_health_gathering_supreme --train_dir=./train_dir --experiment=rl_course_vizdoom_health_gathering_supreme
```


You can also upload models to the Hugging Face Hub using the same script with the `--push_to_hub` flag.
See https://www.samplefactory.dev/10-huggingface/huggingface/ for more details
        
## Training with this model

To continue training with this model, use the `train` script corresponding to this environment:
```
python -m .usr.local.lib.python3.9.dist-packages.ipykernel_launcher --algo=APPO --env=doom_health_gathering_supreme --train_dir=./train_dir --experiment=rl_course_vizdoom_health_gathering_supreme --restart_behavior=resume --train_for_env_steps=10000000000
```

Note, you may have to adjust `--train_for_env_steps` to a suitably high number as the experiment will resume at the number of steps it concluded at.
        """^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/black-forest-labs/FLUX.1-dev-onnx"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "Column 'domain' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/domain> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/90eec6e25a3fb442a9bde78265ab17bc704cb71d58af7815f5a5ca027c4a2c94> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.679013"^^xsd:dateTime ;
    ns1:object "Parameter-Efficient Fine-Tuning methods that enable efficient adaptation of pre-trained language models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f83566aa690a65900e25f19b29d427ae3a9b752766d6d3892299a866feca3edd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.322190"^^xsd:dateTime ;
    ns1:object "text2text-generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e694cb482434e33f5aadafc7ba5607930722b2bd1b0cb252690679261c8692f4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5543312132358551"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The model category is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.671959"^^xsd:dateTime ;
    ns1:object "Predicts continuous values from tabular data."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1054f9c274823fbeb3d1ab19d0f2344791cee18915cdb21fb1437bba03ba8fb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.655898"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9132b663f2893be0a7b034405164be91c4fe250d2b1ecd3390fb9b9bd689997b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7040199935436249"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.3549751937389374"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The intended use of the model is not explicitly stated in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "cy"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.433318"^^xsd:dateTime ;
    ns1:object "{'name': 'Siddhartha Brahma', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9023c2c7aca196f573452d18bac450e68ffcc5423d92a7a150cee645b6b7b8f8> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/cafa6cfd9a4170cbf6a99f2d8b42715517f11068dc92b807e31dad9ab0535893> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.694988"^^xsd:dateTime ;
    ns1:object "Comprehensive deep learning platform developed by Baidu, supporting industrial applications."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ebbad1761fb8870fe41c968d83d4055b2799265db268338f3fa38c3849f7932a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.456493"^^xsd:dateTime ;
    ns1:object "{'name': 'Jian-Yun Nie', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4534189999103546"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "arxiv:2212.04356"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9eb6952b89569e3a3863aebca62fd4619833b31bda93a0d0b5678c6627ef9275> ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "mt"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.32997311651706696"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6494030952453613"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6065364480018616"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
tags:
- text-to-image
- stable-diffusion
- lora
- diffusers
- template:sd-lora
widget:
- text: >-
    a man with a horse head wearing noggles, sitting on the couch in a messy
    room
  output:
    url: images/horse.jpeg
- text: >-
    an ancient group of priests with hidden faces wearing noggles. an ethereum
    shard is floating in the center of the ceremony with a bright purple hue
  output:
    url: images/cult.jpeg
- text: an absurd painting of noggles
  output:
    url: images/goblin.jpeg
- text: >-
    wide and low angle, cinematic, fashion photography for the brand Nounish.
    Woman sitting on floor wearing a noggles and a white tshirt with big letters
    "nounish" logo text, and black chinos. The background is a gradient, red,
    pink and white, studio setting
  output:
    url: images/nounish.jpeg
- text: >-
    a hyperrealistic selfie of a pickle wearing red noggles with an anchor
    tattoo on its body
  output:
    url: images/pickle.jpeg
base_model: black-forest-labs/FLUX.1-dev
instance_prompt: noggles
license: cc0-1.0
---
# noggles

<Gallery />

## Model description 

Generate images with [noggles](https:&#x2F;&#x2F;nouns.wtf&#x2F;)

## Trigger words

You should use `noggles` to trigger the image generation.


## Download model

Weights for this model are available in Safetensors format.

[Download](/realwiz/noggles/tree/main) them in the Files & versions tab.
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2025-01-18T01:59:38+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2025-02-07T15:09:13+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/danmorris427/ppo-SnowballTarget> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/8e9892e571845c79509180a69a268f19c0592a4e975a5fd3e16f2059af61ea75> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/private_tests/output"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "su"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.646360"^^xsd:dateTime ;
    ns1:object "Architecture where multiple specialized sub-models (experts) are conditionally activated based on input."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/35d7d276230081bdfd86d06ca958126011d6a7e381452a488c2bfa8fcc512fdb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.542607456445694"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.685595"^^xsd:dateTime ;
    ns1:object "Library for parameter-efficient transfer learning through adapter modules in transformer models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ef8c453c903ecc79a3f941fc76e3fb554c3c0e3459f4a7a1755e64539b934598> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.439890"^^xsd:dateTime ;
    ns1:object "{'name': 'Peter Albert', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5012183785438538"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is not explicitly mentioned in the provided HTML code."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
language:
- ko
license: apache-2.0
base_model: openai/whisper-base
tags:
- hf-asr-leaderboard
- generated_from_trainer
datasets:
- DianaJin/sample
model-index:
- name: jinkrsmodel
  results: []
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# jinkrsmodel

This model is a fine-tuned version of [openai/whisper-base](https://huggingface.co/openai/whisper-base) on the DianaJin/voice dataset.
It achieves the following results on the evaluation set:
- Loss: 1.2017
- Cer: 134.5133

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 1e-05
- train_batch_size: 16
- eval_batch_size: 8
- seed: 42
- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08
- lr_scheduler_type: linear
- lr_scheduler_warmup_steps: 5
- training_steps: 40
- mixed_precision_training: Native AMP

### Training results

| Training Loss | Epoch | Step | Validation Loss | Cer      |
|:-------------:|:-----:|:----:|:---------------:|:--------:|
| No log        | 3.33  | 10   | 2.1701          | 13.2743  |
| No log        | 6.67  | 20   | 1.3824          | 55.3097  |
| 1.7663        | 10.0  | 30   | 1.2305          | 164.1593 |
| 1.7663        | 13.33 | 40   | 1.2017          | 134.5133 |


### Framework versions

- Transformers 4.36.0.dev0
- Pytorch 2.1.0+cu118
- Datasets 2.15.0
- Tokenizers 0.15.0
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6291145086288452"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.809968"^^xsd:dateTime ;
    ns1:object "stable-diffusion"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c0c122e894fe5fc8434b18f17fe730a8d82a566209e08077c9645df8bc3ebeba> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/43bc0319b35edce6a819b7513d5d158c1ea9bd4b7e1f558fabd51fb09b4f7755> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-09-01T01:17:39+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.466588"^^xsd:dateTime ;
    ns1:object "{'name': 'Peitian Zhang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'output_file' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/output_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/topic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "ko"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/CyberHarem/chokai_azurlane/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.450281"^^xsd:dateTime ;
    ns1:object "{'name': 'Sergey Edunov', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "socratic/split"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.660629"^^xsd:dateTime ;
    ns1:object "Text Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85f0e69a70ce025a206d6ddbf78d989a3cabbdae215f2045df9b67b21a9d6780> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.687853"^^xsd:dateTime ;
    ns1:object "fastai"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3db362f2d160db0ec9efef6e48b6ba6fc466784d4fdf38393a2818c9c974f93e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/plain_text/text> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.663996"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/251690051accbb99d763e77f3aed9b94caecf82b9e2db7c17f8adfca42a4ca39> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.639567"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df3db739a5d22c6a5829694aeecdedee4e20b5804f1345689c8abd3350883e54> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/DianaJin/sample/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-08-08T06:30:58+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/hugging-robot/ppo-Huggy> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.465905"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2310.07554"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/hugging-robot/ppo-Huggy"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5259621441364288"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/04b73aa26b48d6f1e64d5819ec986a901d3b49c7f37b35f4798db992ac65c200> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: mit
language:
- zh
tags:
  - sentence-transformers
  - feature-extraction
  - sentence-similarity
  - transformers
---


<h1 align="center">FlagEmbedding</h1>


<h4 align="center">
    <p>
        <a href=#model-list>Model List</a> | 
        <a href=#frequently-asked-questions>FAQ</a> |
        <a href=#usage>Usage</a>  |
        <a href="#evaluation">Evaluation</a> |
        <a href="#train">Train</a> |
        <a href="#contact">Contact</a> |
        <a href="#citation">Citation</a> |
        <a href="#license">License</a> 
    <p>
</h4>

For more details please refer to our Github: [FlagEmbedding](https://github.com/FlagOpen/FlagEmbedding).

If you are looking for a model that supports more languages, longer texts, and other retrieval methods, you can try using [bge-m3](https://huggingface.co/BAAI/bge-m3).


[English](README.md) | [中文](https://github.com/FlagOpen/FlagEmbedding/blob/master/README_zh.md)

FlagEmbedding focuses on retrieval-augmented LLMs, consisting of the following projects currently:

- **Long-Context LLM**: [Activation Beacon](https://github.com/FlagOpen/FlagEmbedding/tree/master/Long_LLM/activation_beacon)
- **Fine-tuning of LM** : [LM-Cocktail](https://github.com/FlagOpen/FlagEmbedding/tree/master/LM_Cocktail)
- **Dense Retrieval**: [BGE-M3](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3), [LLM Embedder](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_embedder), [BGE Embedding](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/baai_general_embedding)
- **Reranker Model**: [BGE Reranker](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/reranker)
- **Benchmark**: [C-MTEB](https://github.com/FlagOpen/FlagEmbedding/tree/master/C_MTEB)

## News 
- 1/30/2024: Release **BGE-M3**, a new member to BGE model series! M3 stands for **M**ulti-linguality (100+ languages), **M**ulti-granularities (input length up to 8192), **M**ulti-Functionality (unification of dense, lexical, multi-vec/colbert retrieval). 
It is the first embedding model which supports all three retrieval methods, achieving new SOTA on multi-lingual (MIRACL) and cross-lingual (MKQA) benchmarks.
[Technical Report](https://github.com/FlagOpen/FlagEmbedding/blob/master/FlagEmbedding/BGE_M3/BGE_M3.pdf) and [Code](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3). :fire:
- 1/9/2024: Release [Activation-Beacon](https://github.com/FlagOpen/FlagEmbedding/tree/master/Long_LLM/activation_beacon), an effective, efficient, compatible, and low-cost (training) method to extend the context length of LLM. [Technical Report](https://arxiv.org/abs/2401.03462) :fire:
- 12/24/2023: Release **LLaRA**, a LLaMA-7B based dense retriever, leading to state-of-the-art performances on MS MARCO and BEIR. Model and code will be open-sourced. Please stay tuned. [Technical Report](https://arxiv.org/abs/2312.15503) :fire:
- 11/23/2023: Release [LM-Cocktail](https://github.com/FlagOpen/FlagEmbedding/tree/master/LM_Cocktail), a method to maintain general capabilities during fine-tuning by merging multiple language models. [Technical Report](https://arxiv.org/abs/2311.13534) :fire:  
- 10/12/2023: Release [LLM-Embedder](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/llm_embedder), a unified embedding model to support diverse retrieval augmentation needs for LLMs. [Technical Report](https://arxiv.org/pdf/2310.07554.pdf)
- 09/15/2023: The [technical report](https://arxiv.org/pdf/2309.07597.pdf) and [massive training data](https://data.baai.ac.cn/details/BAAI-MTP) of BGE has been released 
- 09/12/2023: New models: 
    - **New reranker model**: release cross-encoder models `BAAI/bge-reranker-base` and `BAAI/bge-reranker-large`, which are more powerful than embedding model. We recommend to use/fine-tune them to re-rank top-k documents returned by embedding models. 
    - **update embedding model**: release `bge-*-v1.5` embedding model to alleviate the issue of the similarity distribution, and enhance its retrieval ability without instruction.
 

<details>
  <summary>More</summary>
<!-- ### More -->
    
- 09/07/2023: Update [fine-tune code](https://github.com/FlagOpen/FlagEmbedding/blob/master/FlagEmbedding/baai_general_embedding/README.md): Add script to mine hard negatives and support adding instruction during fine-tuning. 
- 08/09/2023: BGE Models are integrated into **Langchain**, you can use it like [this](#using-langchain); C-MTEB **leaderboard** is [available](https://huggingface.co/spaces/mteb/leaderboard).  
- 08/05/2023: Release base-scale and small-scale models, **best performance among the models of the same size 🤗**  
- 08/02/2023: Release `bge-large-*`(short for BAAI General Embedding) Models, **rank 1st on MTEB and C-MTEB benchmark!** :tada: :tada:   
- 08/01/2023: We release the [Chinese Massive Text Embedding Benchmark](https://github.com/FlagOpen/FlagEmbedding/blob/master/C_MTEB) (**C-MTEB**), consisting of 31 test dataset.  
  
</details>


## Model List

`bge` is short for `BAAI general embedding`.

|              Model              | Language | | Description | query instruction for retrieval [1] |
|:-------------------------------|:--------:| :--------:| :--------:|:--------:|
| [BAAI/bge-m3](https://huggingface.co/BAAI/bge-m3)                   |    Multilingual     |    [Inference](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3#usage) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/BGE_M3)    | Multi-Functionality(dense retrieval, sparse retrieval, multi-vector(colbert)), Multi-Linguality, and Multi-Granularity(8192 tokens) |  |
|  [BAAI/llm-embedder](https://huggingface.co/BAAI/llm-embedder)  |   English | [Inference](./FlagEmbedding/llm_embedder/README.md) [Fine-tune](./FlagEmbedding/llm_embedder/README.md) | a unified embedding model to support diverse retrieval augmentation needs for LLMs | See [README](./FlagEmbedding/llm_embedder/README.md) |
|  [BAAI/bge-reranker-large](https://huggingface.co/BAAI/bge-reranker-large)  |   Chinese and English | [Inference](#usage-for-reranker) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/reranker) | a cross-encoder model which is more accurate but less efficient [2] |   |
|  [BAAI/bge-reranker-base](https://huggingface.co/BAAI/bge-reranker-base) |   Chinese and English | [Inference](#usage-for-reranker) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/reranker) | a cross-encoder model which is more accurate but less efficient [2] |   |
|  [BAAI/bge-large-en-v1.5](https://huggingface.co/BAAI/bge-large-en-v1.5) |   English | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | version 1.5 with more reasonable similarity distribution | `Represent this sentence for searching relevant passages: `  |
|  [BAAI/bge-base-en-v1.5](https://huggingface.co/BAAI/bge-base-en-v1.5) |   English | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | version 1.5 with more reasonable similarity distribution | `Represent this sentence for searching relevant passages: `  |
|  [BAAI/bge-small-en-v1.5](https://huggingface.co/BAAI/bge-small-en-v1.5) |   English | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | version 1.5 with more reasonable similarity distribution  | `Represent this sentence for searching relevant passages: `  |
|  [BAAI/bge-large-zh-v1.5](https://huggingface.co/BAAI/bge-large-zh-v1.5) |   Chinese | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | version 1.5 with more reasonable similarity distribution | `为这个句子生成表示以用于检索相关文章：`  |
|  [BAAI/bge-base-zh-v1.5](https://huggingface.co/BAAI/bge-base-zh-v1.5) |   Chinese |  [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | version 1.5 with more reasonable similarity distribution | `为这个句子生成表示以用于检索相关文章：`  |
|  [BAAI/bge-small-zh-v1.5](https://huggingface.co/BAAI/bge-small-zh-v1.5) |   Chinese | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | version 1.5 with more reasonable similarity distribution | `为这个句子生成表示以用于检索相关文章：`  |
|  [BAAI/bge-large-en](https://huggingface.co/BAAI/bge-large-en) |   English | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | :trophy: rank **1st** in [MTEB](https://huggingface.co/spaces/mteb/leaderboard) leaderboard | `Represent this sentence for searching relevant passages: `  |
|  [BAAI/bge-base-en](https://huggingface.co/BAAI/bge-base-en) |   English | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | a base-scale model but with similar ability to `bge-large-en` | `Represent this sentence for searching relevant passages: `  |
|  [BAAI/bge-small-en](https://huggingface.co/BAAI/bge-small-en) |   English | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) |a small-scale model but with competitive performance  | `Represent this sentence for searching relevant passages: `  |
|  [BAAI/bge-large-zh](https://huggingface.co/BAAI/bge-large-zh) |   Chinese | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | :trophy: rank **1st** in [C-MTEB](https://github.com/FlagOpen/FlagEmbedding/tree/master/C_MTEB) benchmark | `为这个句子生成表示以用于检索相关文章：`  |
|  [BAAI/bge-base-zh](https://huggingface.co/BAAI/bge-base-zh) |   Chinese |  [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | a base-scale model but with similar ability to `bge-large-zh` | `为这个句子生成表示以用于检索相关文章：`  |
|  [BAAI/bge-small-zh](https://huggingface.co/BAAI/bge-small-zh) |   Chinese | [Inference](#usage-for-embedding-model) [Fine-tune](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) | a small-scale model but with competitive performance | `为这个句子生成表示以用于检索相关文章：`  |

[1\\]: If you need to search the relevant passages to a query, we suggest to add the instruction to the query; in other cases, no instruction is needed, just use the original query directly. In all cases, **no instruction** needs to be added to passages.

[2\\]: Different from embedding model, reranker uses question and document as input and directly output similarity instead of embedding. To balance the accuracy and time cost, cross-encoder is widely used to re-rank top-k documents retrieved by other simple models. 
For examples, use bge embedding model to retrieve top 100 relevant documents, and then use bge reranker to re-rank the top 100 document to get the final top-3 results.

All models have been uploaded to Huggingface Hub, and you can see them at https://huggingface.co/BAAI. 
If you cannot open the Huggingface Hub, you also can download the models at https://model.baai.ac.cn/models .


## Frequently asked questions

<details>
  <summary>1. How to fine-tune bge embedding model?</summary>

  <!-- ### How to fine-tune bge embedding model? -->
Following this [example](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune) to prepare data and fine-tune your model. 
Some suggestions:
- Mine hard negatives following this [example](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune#hard-negatives), which can improve the retrieval performance.
- If you pre-train bge on your data, the pre-trained model cannot be directly used to calculate similarity, and it must be fine-tuned with contrastive learning before computing similarity.
- If the accuracy of the fine-tuned model is still not high, it is recommended to use/fine-tune the cross-encoder model (bge-reranker) to re-rank top-k results. Hard negatives also are needed to fine-tune reranker.

  
</details>

<details>
  <summary>2. The similarity score between two dissimilar sentences is higher than 0.5</summary>

  <!-- ### The similarity score between two dissimilar sentences is higher than 0.5 -->
**Suggest to use bge v1.5, which alleviates the issue of the similarity distribution.** 

Since we finetune the models by contrastive learning with a temperature of 0.01, 
the similarity distribution of the current BGE model is about in the interval \\[0.6, 1\\].
So a similarity score greater than 0.5 does not indicate that the two sentences are similar.

For downstream tasks, such as passage retrieval or semantic similarity, 
**what matters is the relative order of the scores, not the absolute value.**
If you need to filter similar sentences based on a similarity threshold, 
please select an appropriate similarity threshold based on the similarity distribution on your data (such as 0.8, 0.85, or even 0.9).

</details>

<details>
  <summary>3. When does the query instruction need to be used</summary>

  <!-- ### When does the query instruction need to be used -->

For the `bge-*-v1.5`, we improve its retrieval ability when not using instruction. 
No instruction only has a slight degradation in retrieval performance compared with using instruction. 
So you can generate embedding without instruction in all cases for convenience.
 
For a retrieval task that uses short queries to find long related documents, 
it is recommended to add instructions for these short queries.
**The best method to decide whether to add instructions for queries is choosing the setting that achieves better performance on your task.**
In all cases, the documents/passages do not need to add the instruction. 

</details>


## Usage 

### Usage for Embedding Model

Here are some examples for using `bge` models with 
[FlagEmbedding](#using-flagembedding), [Sentence-Transformers](#using-sentence-transformers), [Langchain](#using-langchain), or [Huggingface Transformers](#using-huggingface-transformers).

#### Using FlagEmbedding
```
pip install -U FlagEmbedding
```
If it doesn't work for you, you can see [FlagEmbedding](https://github.com/FlagOpen/FlagEmbedding/blob/master/FlagEmbedding/baai_general_embedding/README.md) for more methods to install FlagEmbedding.

```python
from FlagEmbedding import FlagModel
sentences_1 = ["样例数据-1", "样例数据-2"]
sentences_2 = ["样例数据-3", "样例数据-4"]
model = FlagModel('BAAI/bge-large-zh-v1.5', 
                  query_instruction_for_retrieval="为这个句子生成表示以用于检索相关文章：",
                  use_fp16=True) # Setting use_fp16 to True speeds up computation with a slight performance degradation
embeddings_1 = model.encode(sentences_1)
embeddings_2 = model.encode(sentences_2)
similarity = embeddings_1 @ embeddings_2.T
print(similarity)

# for s2p(short query to long passage) retrieval task, suggest to use encode_queries() which will automatically add the instruction to each query
# corpus in retrieval task can still use encode() or encode_corpus(), since they don't need instruction
queries = ['query_1', 'query_2']
passages = ["样例文档-1", "样例文档-2"]
q_embeddings = model.encode_queries(queries)
p_embeddings = model.encode(passages)
scores = q_embeddings @ p_embeddings.T
```
For the value of the argument `query_instruction_for_retrieval`, see [Model List](https://github.com/FlagOpen/FlagEmbedding/tree/master#model-list). 

By default, FlagModel will use all available GPUs when encoding. Please set `os.environ["CUDA_VISIBLE_DEVICES"]` to select specific GPUs.
You also can set `os.environ["CUDA_VISIBLE_DEVICES"]=""` to make all GPUs unavailable.


#### Using Sentence-Transformers

You can also use the `bge` models with [sentence-transformers](https://www.SBERT.net):

```
pip install -U sentence-transformers
```
```python
from sentence_transformers import SentenceTransformer
sentences_1 = ["样例数据-1", "样例数据-2"]
sentences_2 = ["样例数据-3", "样例数据-4"]
model = SentenceTransformer('BAAI/bge-large-zh-v1.5')
embeddings_1 = model.encode(sentences_1, normalize_embeddings=True)
embeddings_2 = model.encode(sentences_2, normalize_embeddings=True)
similarity = embeddings_1 @ embeddings_2.T
print(similarity)
```
For s2p(short query to long passage) retrieval task, 
each short query should start with an instruction (instructions see [Model List](https://github.com/FlagOpen/FlagEmbedding/tree/master#model-list)). 
But the instruction is not needed for passages.
```python
from sentence_transformers import SentenceTransformer
queries = ['query_1', 'query_2']
passages = ["样例文档-1", "样例文档-2"]
instruction = "为这个句子生成表示以用于检索相关文章："

model = SentenceTransformer('BAAI/bge-large-zh-v1.5')
q_embeddings = model.encode([instruction+q for q in queries], normalize_embeddings=True)
p_embeddings = model.encode(passages, normalize_embeddings=True)
scores = q_embeddings @ p_embeddings.T
```

#### Using Langchain 

You can use `bge` in langchain like this:
```python
from langchain.embeddings import HuggingFaceBgeEmbeddings
model_name = "BAAI/bge-large-en-v1.5"
model_kwargs = {'device': 'cuda'}
encode_kwargs = {'normalize_embeddings': True} # set True to compute cosine similarity
model = HuggingFaceBgeEmbeddings(
    model_name=model_name,
    model_kwargs=model_kwargs,
    encode_kwargs=encode_kwargs,
    query_instruction="为这个句子生成表示以用于检索相关文章："
)
model.query_instruction = "为这个句子生成表示以用于检索相关文章："
```


#### Using HuggingFace Transformers

With the transformers package, you can use the model like this: First, you pass your input through the transformer model, then you select the last hidden state of the first token (i.e., [CLS]) as the sentence embedding.

```python
from transformers import AutoTokenizer, AutoModel
import torch
# Sentences we want sentence embeddings for
sentences = ["样例数据-1", "样例数据-2"]

# Load model from HuggingFace Hub
tokenizer = AutoTokenizer.from_pretrained('BAAI/bge-large-zh-v1.5')
model = AutoModel.from_pretrained('BAAI/bge-large-zh-v1.5')
model.eval()

# Tokenize sentences
encoded_input = tokenizer(sentences, padding=True, truncation=True, return_tensors='pt')
# for s2p(short query to long passage) retrieval task, add an instruction to query (not add instruction for passages)
# encoded_input = tokenizer([instruction + q for q in queries], padding=True, truncation=True, return_tensors='pt')

# Compute token embeddings
with torch.no_grad():
    model_output = model(**encoded_input)
    # Perform pooling. In this case, cls pooling.
    sentence_embeddings = model_output[0][:, 0]
# normalize embeddings
sentence_embeddings = torch.nn.functional.normalize(sentence_embeddings, p=2, dim=1)
print("Sentence embeddings:", sentence_embeddings)
```

### Usage for Reranker

Different from embedding model, reranker uses question and document as input and directly output similarity instead of embedding. 
You can get a relevance score by inputting query and passage to the reranker. 
The reranker is optimized based cross-entropy loss, so the relevance score is not bounded to a specific range.


#### Using FlagEmbedding
```
pip install -U FlagEmbedding
```

Get relevance scores (higher scores indicate more relevance):
```python
from FlagEmbedding import FlagReranker
reranker = FlagReranker('BAAI/bge-reranker-large', use_fp16=True) # Setting use_fp16 to True speeds up computation with a slight performance degradation

score = reranker.compute_score(['query', 'passage'])
print(score)

scores = reranker.compute_score([['what is panda?', 'hi'], ['what is panda?', 'The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.']])
print(scores)
```


#### Using Huggingface transformers

```python
import torch
from transformers import AutoModelForSequenceClassification, AutoTokenizer

tokenizer = AutoTokenizer.from_pretrained('BAAI/bge-reranker-large')
model = AutoModelForSequenceClassification.from_pretrained('BAAI/bge-reranker-large')
model.eval()

pairs = [['what is panda?', 'hi'], ['what is panda?', 'The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.']]
with torch.no_grad():
    inputs = tokenizer(pairs, padding=True, truncation=True, return_tensors='pt', max_length=512)
    scores = model(**inputs, return_dict=True).logits.view(-1, ).float()
    print(scores)
```

## Evaluation  

`baai-general-embedding` models achieve **state-of-the-art performance on both MTEB and C-MTEB leaderboard!**
For more details and evaluation tools see our [scripts](https://github.com/FlagOpen/FlagEmbedding/blob/master/C_MTEB/README.md). 

- **MTEB**:   

| Model Name |  Dimension | Sequence Length | Average (56) | Retrieval (15) |Clustering (11) | Pair Classification (3) | Reranking (4) |  STS (10) | Summarization (1) | Classification (12) |
|:----:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|
| [BAAI/bge-large-en-v1.5](https://huggingface.co/BAAI/bge-large-en-v1.5) | 1024 | 512 |  **64.23** | **54.29** |  46.08 | 87.12 | 60.03 | 83.11 | 31.61 | 75.97 |  
| [BAAI/bge-base-en-v1.5](https://huggingface.co/BAAI/bge-base-en-v1.5) |  768 | 512 | 63.55 | 53.25 |   45.77 | 86.55 | 58.86 | 82.4 | 31.07 | 75.53 |  
| [BAAI/bge-small-en-v1.5](https://huggingface.co/BAAI/bge-small-en-v1.5) |  384 | 512 | 62.17 |51.68 | 43.82 |  84.92 | 58.36 | 81.59 | 30.12 | 74.14 |  
| [bge-large-en](https://huggingface.co/BAAI/bge-large-en) |  1024 | 512 | 63.98 |  53.9 | 46.98 | 85.8 | 59.48 | 81.56 | 32.06 | 76.21 | 
| [bge-base-en](https://huggingface.co/BAAI/bge-base-en) |  768 | 512 |  63.36 | 53.0 | 46.32 | 85.86 | 58.7 | 81.84 | 29.27 | 75.27 | 
| [gte-large](https://huggingface.co/thenlper/gte-large) |  1024 | 512 | 63.13 | 52.22 | 46.84 | 85.00 | 59.13 | 83.35 | 31.66 | 73.33 |
| [gte-base](https://huggingface.co/thenlper/gte-base) 	|  768 | 512 | 62.39 | 51.14 | 46.2 | 84.57 | 58.61 | 82.3 | 31.17 | 73.01 |
| [e5-large-v2](https://huggingface.co/intfloat/e5-large-v2) |  1024| 512 | 62.25 | 50.56 | 44.49 | 86.03 | 56.61 | 82.05 | 30.19 | 75.24 |
| [bge-small-en](https://huggingface.co/BAAI/bge-small-en) |  384 | 512 | 62.11 |  51.82 | 44.31 | 83.78 | 57.97 | 80.72 | 30.53 | 74.37 |  
| [instructor-xl](https://huggingface.co/hkunlp/instructor-xl) |  768 | 512 | 61.79 | 49.26 | 44.74 | 86.62 | 57.29 | 83.06 | 32.32 | 61.79 |
| [e5-base-v2](https://huggingface.co/intfloat/e5-base-v2) |  768 | 512 | 61.5 | 50.29 | 43.80 | 85.73 | 55.91 | 81.05 | 30.28 | 73.84 |
| [gte-small](https://huggingface.co/thenlper/gte-small) |  384 | 512 | 61.36 | 49.46 | 44.89 | 83.54 | 57.7 | 82.07 | 30.42 | 72.31 |
| [text-embedding-ada-002](https://platform.openai.com/docs/guides/embeddings) | 1536 | 8192 | 60.99 | 49.25 | 45.9 | 84.89 | 56.32 | 80.97 | 30.8 | 70.93 |
| [e5-small-v2](https://huggingface.co/intfloat/e5-base-v2) | 384 | 512 | 59.93 | 49.04 | 39.92 | 84.67 | 54.32 | 80.39 | 31.16 | 72.94 |
| [sentence-t5-xxl](https://huggingface.co/sentence-transformers/sentence-t5-xxl) |  768 | 512 | 59.51 | 42.24 | 43.72 | 85.06 | 56.42 | 82.63 | 30.08 | 73.42 |
| [all-mpnet-base-v2](https://huggingface.co/sentence-transformers/all-mpnet-base-v2) 	|  768 | 514 	| 57.78 | 43.81 | 43.69 | 83.04 | 59.36 | 80.28 | 27.49 | 65.07 |
| [sgpt-bloom-7b1-msmarco](https://huggingface.co/bigscience/sgpt-bloom-7b1-msmarco) 	|  4096 | 2048 | 57.59 | 48.22 | 38.93 | 81.9 | 55.65 | 77.74 | 33.6 | 66.19 |



- **C-MTEB**:  
We create the benchmark C-MTEB for Chinese text embedding which consists of 31 datasets from 6 tasks. 
Please refer to [C_MTEB](https://github.com/FlagOpen/FlagEmbedding/blob/master/C_MTEB/README.md) for a detailed introduction.
 
| Model | Embedding dimension | Avg | Retrieval | STS | PairClassification | Classification | Reranking | Clustering |
|:-------------------------------|:--------:|:--------:|:--------:|:--------:|:--------:|:--------:|:--------:|:--------:|
| [**BAAI/bge-large-zh-v1.5**](https://huggingface.co/BAAI/bge-large-zh-v1.5) | 1024 |  **64.53** | 70.46 | 56.25 | 81.6 | 69.13 | 65.84 | 48.99 |  
| [BAAI/bge-base-zh-v1.5](https://huggingface.co/BAAI/bge-base-zh-v1.5) | 768 |  63.13 | 69.49 | 53.72 | 79.75 | 68.07 | 65.39 | 47.53 |  
| [BAAI/bge-small-zh-v1.5](https://huggingface.co/BAAI/bge-small-zh-v1.5) | 512 | 57.82 | 61.77 | 49.11 | 70.41 | 63.96 | 60.92 | 44.18 |   
| [BAAI/bge-large-zh](https://huggingface.co/BAAI/bge-large-zh) | 1024 | 64.20 | 71.53 | 54.98 | 78.94 | 68.32 | 65.11 | 48.39 |
| [bge-large-zh-noinstruct](https://huggingface.co/BAAI/bge-large-zh-noinstruct) | 1024 | 63.53 | 70.55 | 53 | 76.77 | 68.58 | 64.91 | 50.01 |
| [BAAI/bge-base-zh](https://huggingface.co/BAAI/bge-base-zh) | 768 | 62.96 | 69.53 | 54.12 | 77.5 | 67.07 | 64.91 | 47.63 |
| [multilingual-e5-large](https://huggingface.co/intfloat/multilingual-e5-large) | 1024 | 58.79 | 63.66 | 48.44 | 69.89 | 67.34 | 56.00 | 48.23 |
| [BAAI/bge-small-zh](https://huggingface.co/BAAI/bge-small-zh) | 512 | 58.27 |  63.07 | 49.45 | 70.35 | 63.64 | 61.48 | 45.09 |
| [m3e-base](https://huggingface.co/moka-ai/m3e-base) | 768 | 57.10 | 56.91 | 50.47 | 63.99 | 67.52 | 59.34 | 47.68 |
| [m3e-large](https://huggingface.co/moka-ai/m3e-large) | 1024 |  57.05 | 54.75 | 50.42 | 64.3 | 68.2 | 59.66 | 48.88 |
| [multilingual-e5-base](https://huggingface.co/intfloat/multilingual-e5-base) | 768 | 55.48 | 61.63 | 46.49 | 67.07 | 65.35 | 54.35 | 40.68 |
| [multilingual-e5-small](https://huggingface.co/intfloat/multilingual-e5-small) | 384 | 55.38 | 59.95 | 45.27 | 66.45 | 65.85 | 53.86 | 45.26 |
| [text-embedding-ada-002(OpenAI)](https://platform.openai.com/docs/guides/embeddings/what-are-embeddings) | 1536 |  53.02 | 52.0 | 43.35 | 69.56 | 64.31 | 54.28 | 45.68 |
| [luotuo](https://huggingface.co/silk-road/luotuo-bert-medium) | 1024 | 49.37 |  44.4 | 42.78 | 66.62 | 61 | 49.25 | 44.39 |
| [text2vec-base](https://huggingface.co/shibing624/text2vec-base-chinese) | 768 |  47.63 | 38.79 | 43.41 | 67.41 | 62.19 | 49.45 | 37.66 |
| [text2vec-large](https://huggingface.co/GanymedeNil/text2vec-large-chinese) | 1024 | 47.36 | 41.94 | 44.97 | 70.86 | 60.66 | 49.16 | 30.02 |


- **Reranking**:
See [C_MTEB](https://github.com/FlagOpen/FlagEmbedding/blob/master/C_MTEB/) for evaluation script.

| Model | T2Reranking | T2RerankingZh2En\\* | T2RerankingEn2Zh\\* | MMarcoReranking | CMedQAv1 | CMedQAv2 | Avg |  
|:-------------------------------|:--------:|:--------:|:--------:|:--------:|:--------:|:--------:|:--------:|  
| text2vec-base-multilingual | 64.66 | 62.94 | 62.51 | 14.37 | 48.46 | 48.6 | 50.26 |  
| multilingual-e5-small | 65.62 | 60.94 | 56.41 | 29.91 | 67.26 | 66.54 | 57.78 |  
| multilingual-e5-large | 64.55 | 61.61 | 54.28 | 28.6 | 67.42 | 67.92 | 57.4 |  
| multilingual-e5-base | 64.21 | 62.13 | 54.68 | 29.5 | 66.23 | 66.98 | 57.29 |  
| m3e-base | 66.03 | 62.74 | 56.07 | 17.51 | 77.05 | 76.76 | 59.36 |  
| m3e-large | 66.13 | 62.72 | 56.1 | 16.46 | 77.76 | 78.27 | 59.57 |  
| bge-base-zh-v1.5 | 66.49 | 63.25 | 57.02 | 29.74 | 80.47 | 84.88 | 63.64 |  
| bge-large-zh-v1.5 | 65.74 | 63.39 | 57.03 | 28.74 | 83.45 | 85.44 | 63.97 |  
| [BAAI/bge-reranker-base](https://huggingface.co/BAAI/bge-reranker-base) | 67.28 | 63.95 | 60.45 | 35.46 | 81.26 | 84.1 | 65.42 |  
| [BAAI/bge-reranker-large](https://huggingface.co/BAAI/bge-reranker-large) | 67.6 | 64.03 | 61.44 | 37.16 | 82.15 | 84.18 | 66.09 |  

\\* : T2RerankingZh2En and T2RerankingEn2Zh are cross-language retrieval tasks

## Train

### BAAI Embedding 

We pre-train the models using [retromae](https://github.com/staoxiao/RetroMAE) and train them on large-scale pairs data using contrastive learning. 
**You can fine-tune the embedding model on your data following our [examples](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/finetune).**
We also provide a [pre-train example](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/pretrain).
Note that the goal of pre-training is to reconstruct the text, and the pre-trained model cannot be used for similarity calculation directly, it needs to be fine-tuned.
More training details for bge see [baai_general_embedding](https://github.com/FlagOpen/FlagEmbedding/blob/master/FlagEmbedding/baai_general_embedding/README.md).



### BGE Reranker

Cross-encoder will perform full-attention over the input pair, 
which is more accurate than embedding model (i.e., bi-encoder) but more time-consuming than embedding model.
Therefore, it can be used to re-rank the top-k documents returned by embedding model.
We train the cross-encoder on a multilingual pair data, 
The data format is the same as embedding model, so you can fine-tune it easily following our [example](https://github.com/FlagOpen/FlagEmbedding/tree/master/examples/reranker). 
More details please refer to [./FlagEmbedding/reranker/README.md](https://github.com/FlagOpen/FlagEmbedding/tree/master/FlagEmbedding/reranker)


## Contact
If you have any question or suggestion related to this project, feel free to open an issue or pull request.
You also can email Shitao Xiao(stxiao@baai.ac.cn) and Zheng Liu(liuzheng@baai.ac.cn). 


## Citation

If you find this repository useful, please consider giving a star :star: and citation

```
@misc{bge_embedding,
      title={C-Pack: Packaged Resources To Advance General Chinese Embedding}, 
      author={Shitao Xiao and Zheng Liu and Peitian Zhang and Niklas Muennighoff},
      year={2023},
      eprint={2309.07597},
      archivePrefix={arXiv},
      primaryClass={cs.CL}
}
```

## License
FlagEmbedding is licensed under the [MIT License](https://github.com/FlagOpen/FlagEmbedding/blob/master/LICENSE). The released models can be used for commercial purposes free of charge."""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5860750377178192"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4850524067878723"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.45261070132255554"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object """The software requirements for the model are as follows:

- Transformers 4.46.1
- Pytorch 2.4.0+cu121
- Datasets 2.20.0
- Tokenizers 0.20.3

These are the required software dependencies for the model."""^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/danmorris427/ppo-SnowballTarget/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.688019"^^xsd:dateTime ;
    ns1:object "Deep learning library that simplifies training neural networks using modern best practices."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3db362f2d160db0ec9efef6e48b6ba6fc466784d4fdf38393a2818c9c974f93e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6909572780132294"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-03-04T01:31:41+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.399309"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2529572666d8ae917752f418f0b008b820cf821a3ba355927ca159454740dce7> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.43562792241573334"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The model category is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.669762"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b9cbedab515a4ba3d4c78d2aaebae3eaaa730c9bfc49212dad2910d0f2c63595> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7018129229545593"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6479703783988953"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1a739b1d688a026015aadad9a1aca9a5ddbaa3e48938daa52442b0c8fc0fd0ba> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.48329587280750275"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5683518052101135"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.640715"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.433474"^^xsd:dateTime ;
    ns1:object "{'name': 'Albert Webson', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.457586"^^xsd:dateTime ;
    ns1:object "cs.CY"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
language:
- ko
license: apache-2.0
base_model: openai/whisper-base
tags:
- hf-asr-leaderboard
- generated_from_trainer
datasets:
- DianaJin/sample
model-index:
- name: jinkrsmodel
  results: []
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# jinkrsmodel

This model is a fine-tuned version of [openai/whisper-base](https://huggingface.co/openai/whisper-base) on the DianaJin/voice dataset.
It achieves the following results on the evaluation set:
- Loss: 1.2017
- Cer: 134.5133

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 1e-05
- train_batch_size: 16
- eval_batch_size: 8
- seed: 42
- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08
- lr_scheduler_type: linear
- lr_scheduler_warmup_steps: 5
- training_steps: 40
- mixed_precision_training: Native AMP

### Training results

| Training Loss | Epoch | Step | Validation Loss | Cer      |
|:-------------:|:-----:|:----:|:---------------:|:--------:|
| No log        | 3.33  | 10   | 2.1701          | 13.2743  |
| No log        | 6.67  | 20   | 1.3824          | 55.3097  |
| 1.7663        | 10.0  | 30   | 1.2305          | 164.1593 |
| 1.7663        | 13.33 | 40   | 1.2017          | 134.5133 |


### Framework versions

- Transformers 4.36.0.dev0
- Pytorch 2.1.0+cu118
- Datasets 2.15.0
- Tokenizers 0.15.0
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "be"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.642880"^^xsd:dateTime ;
    ns1:object "Indicates a HuggingFace Space demo exists for this model allowing interactive testing without setup."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d75a16357850d2896a768db42c912a9487fd97a50f3358217d5bbb602c39b195> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.650254"^^xsd:dateTime ;
    ns1:object "Visual Question Answering"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/45ef55138ac28324915f59dee5c5614894be22d29e2a8283b76835bcb91e3e87> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6383881866931915"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "tk"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.694817"^^xsd:dateTime ;
    ns1:object "PaddlePaddle"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ebbad1761fb8870fe41c968d83d4055b2799265db268338f3fa38c3849f7932a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6569216251373291"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The author of this content is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2023-07-13T16:16:13+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.673925"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b47d8ed02d0fc1a7d72d5d61255296300a82f2caa55dd809c63448bfdd9b4284> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.651580"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/746e796ec31ad9ad2b517555a4e91b2e3dfff187021fd0255aae50476624430d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.464994"^^xsd:dateTime ;
    ns1:object "{'name': 'Ninglu Shao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sq"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/CyberHarem/chokai_azurlane"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4782409816980362"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "tokenized/question"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.69562166929245"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object """Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Using the model - Par. 1: Using the model:
To run the model after download, use the `enjoy` script corresponding to this environment:
Downloading the model - Par. 1: Downloading the model:
After installing Sample-Factory, download the model with:

Question: Find the build Instructions in the following text, here is a description of the property: (Link to installation instructions/documentation.) here are some related sections: How to Get Started with the Model

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found"."""^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.457929"^^xsd:dateTime ;
    ns1:object "{'name': 'Alexandre Lacoste', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5252491235733032"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/79cf083846a8329d2912fcd7f375233c37a54917af291bb945f0b58bc735b8ad> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.749404"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/heidragon3045"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9023c2c7aca196f573452d18bac450e68ffcc5423d92a7a150cee645b6b7b8f8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.644210"^^xsd:dateTime ;
    ns1:object "ML-Agents-Pyramids"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6010051e02699a6f2c68fb88d7ff60b81f5d07a4480548861898a687a9a3757> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.355880"^^xsd:dateTime ;
    ns1:object "openai/whisper-base"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/01ce031a92b6a44f90635a9aa473acc02c379a53ef7b0a0d8f88b6027a9ad64e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "br"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.846933"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2401.03462"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5622778981924057"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.641125"^^xsd:dateTime ;
    ns1:object "Optimized backend for deploying and serving Large Language Models (LLMs) with high performance."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.468385"^^xsd:dateTime ;
    ns1:object """We study the capabilities of speech processing systems trained simply to
predict large amounts of transcripts of audio on the internet. When scaled to
680,000 hours of multilingual and multitask supervision, the resulting models
generalize well to standard benchmarks and are often competitive with prior
fully supervised results but in a zero-shot transfer setting without the need
for any fine-tuning. When compared to humans, the models approach their
accuracy and robustness. We are releasing models and inference code to serve as
a foundation for further work on robust speech processing."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.696930"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/771e059c7890ae196a3227d36771c27f019638d33a819ca19bef2ae302b92b44> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.42625217139720917"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The model category is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sa"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.322529"^^xsd:dateTime ;
    ns1:object "multilingual"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1aa60aa9719223ac8750af1366d4a56166214022d0d069d1412225070d1275b9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.695958"^^xsd:dateTime ;
    ns1:object "Fairseq"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4acb0244517b271c7719eadb638a9049f7dfa43a14bf6eb119d83c2dbc6d856f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.459821"^^xsd:dateTime ;
    ns1:object "cs.AI"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sv"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4630066156387329"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/c7504a968f417dfe1555958db6caabff413bf4f321bbb9c477d4ff3a9352a0e4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "bo"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.435792937874794"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The intended use of the creative work is not explicitly stated in the given context. However, it can be inferred that the creative work is intended for use in generating images for the desired characters, as mentioned in the \"Lora of chokai_azurlane\" section."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.883488"^^xsd:dateTime ;
    ns1:object "wav2vec2"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a5061996452e34a05d1c80cf537e1e6a64a7e72a60ffcf719ce25f5d6b4306ed> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.649557888507843"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2024-07-31T21:13:44+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.447551"^^xsd:dateTime ;
    ns1:object "{'name': 'Ruan Silva', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.848214"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2309.07597"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.439407"^^xsd:dateTime ;
    ns1:object "{'name': 'Hugo Touvron', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.441743"^^xsd:dateTime ;
    ns1:object "{'name': 'Guillem Cucurull', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.359285"^^xsd:dateTime ;
    ns1:object "DianaJin"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8c29861cff92b34ba1887aa267cf20a6a2124ec092919b27c388fb31ecb5f269> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/85f0e69a70ce025a206d6ddbf78d989a3cabbdae215f2045df9b67b21a9d6780> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "other"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5947170853614807"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/solutions> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6361018419265747"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the FLUX.1 models are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.683005"^^xsd:dateTime ;
    ns1:object "timm"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3135ad7c615e157f80ecab1b96d4167d2e6c147b2e563721a652a5b56845418c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.448522"^^xsd:dateTime ;
    ns1:object "{'name': 'Adina Williams', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.294181"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/deepmind/code_contests"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7197604775428772"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/heidragon3045/rl_course_vizdoom_health_gathering_supreme/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.644092"^^xsd:dateTime ;
    ns1:object "Models with custom implementation code beyond standard library functionality."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55c2ef29f4fc34014e7c41f2439cd686ebcc0bd4d1a02299b7491148b03bd06b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.606499195098877"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.677072"^^xsd:dateTime ;
    ns1:object "Safetensors"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.674138"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.456016"^^xsd:dateTime ;
    ns1:object "{'name': 'Peitian Zhang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'description' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'public_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "patent-summarization-fb-bart-base-2022-09-20"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Llama-2-7b-hf"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.667068"^^xsd:dateTime ;
    ns1:object "Sentence Similarity"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5f8c97c4aaca5a8c6afac1954a68be2dcb40698e64871f37e5fe5dc5849a3aab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.456919"^^xsd:dateTime ;
    ns1:object "Quantifying the Carbon Emissions of Machine Learning"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6862177550792694"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.468723"^^xsd:dateTime ;
    ns1:object "eess.AS"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5055184066295624"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-09-01T01:17:57+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-12-02T17:17:08+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5853b54d1c6d56985304fe7287a88724833916e1a98d9761de36a0841ffafb30> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_rating> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "pl"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7066408097743988"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.398988"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b0f442b1bed2cd3bb1be33408f94800ba60c1c82505ebb0328621109dadc9b5a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "base_model:finetune:openai/whisper-base"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/rangapriyabatchu/black-forest-labsFLUX.1-dev/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.429504"^^xsd:dateTime ;
    ns1:object "cs.AI"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
tags:
- text-to-image
- lora
- diffusers
- template:diffusion-lora
widget:
- text: '-'
  output:
    url: images/roo logo - Copy.PNG
base_model: black-forest-labs/FLUX.1-dev
---
# Baby Roo

<Gallery />

## Model description 



![images.jpg](https:&#x2F;&#x2F;cdn-uploads.huggingface.co&#x2F;production&#x2F;uploads&#x2F;6783dbf11da7cdb6f9f48422&#x2F;ohyGdTthSqT2T0M66wsPM.jpeg)



## Download model


[Download](/rangapriyabatchu/black-forest-labsFLUX.1-dev/tree/main) them in the Files & versions tab.
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "cc-by-nc-4.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.430006"^^xsd:dateTime ;
    ns1:object "{'name': 'Zheng Liu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object """openai/gsm8k - 'main' subset

Additional information:
- 2 splits: train, test"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/lachiewyoung/test-mistral-7b/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/Xinging/llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "main_splits"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.516115203499794"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6003882586956024"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "zh"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'solutions' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.657930"^^xsd:dateTime ;
    ns1:object "Creates masks for objects or regions in images."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8fd2e8ec655b6111cc83724fbc62c13d0c8b3442b1768b9bc35e0eceae0ebe85> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-08-18T02:27:01+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5357854664325714"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.664166"^^xsd:dateTime ;
    ns1:object "Summarization"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/251690051accbb99d763e77f3aed9b94caecf82b9e2db7c17f8adfca42a4ca39> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "so"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "template:sd-lora"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.680440"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/934dea1e0796f0376db45e4b74e093aeb422ffdf79cf5c4aaea1e5e84969c76e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.449489"^^xsd:dateTime ;
    ns1:object "{'name': 'Angela Fan', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.639922"^^xsd:dateTime ;
    ns1:object "Indicates the model supports deployment through HuggingFace's managed inference API service for production environments."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df3db739a5d22c6a5829694aeecdedee4e20b5804f1345689c8abd3350883e54> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "[{\"raw_splits/split_name\":\"train\"},{\"raw_splits/split_name\":\"test\"},{\"raw_splits/split_name\":\"validation\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.697105"^^xsd:dateTime ;
    ns1:object "Asteroid"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/771e059c7890ae196a3227d36771c27f019638d33a819ca19bef2ae302b92b44> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5309462249279022"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/8c29861cff92b34ba1887aa267cf20a6a2124ec092919b27c388fb31ecb5f269> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2024-02-29T10:26:57+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.8346182405948639"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The potential risks associated with the model Flan-T5 are not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.448368"^^xsd:dateTime ;
    ns1:object "{'name': 'Ross Taylor', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "cs"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.680619"^^xsd:dateTime ;
    ns1:object "GGUF"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/934dea1e0796f0376db45e4b74e093aeb422ffdf79cf5c4aaea1e5e84969c76e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "kk"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.679417"^^xsd:dateTime ;
    ns1:object "stable-baselines3"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a3c9ca93ab7ec29d067dd25733037f174c1326ef487292e5e1c9eea5cb35feb1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5533330738544464"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object """Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the usage Instructions in the following text, here is a description of the property: (Instructions for using the model.) here are some related sections: How to Get Started with the Model ; Uses > Direct Use

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the usage Instructions in the following text, here is a description of the property: (Instructions for using the model.) here are some related sections: How to Get Started with the Model ; Uses > Direct Use

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the usage Instructions in the following text, here is a description of the property: (Instructions for using the model.) here are some related sections: How to Get Started with the Model ; Uses > Direct Use

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the usage Instructions in the following text, here is a description of the property: (Instructions for using the model.) here are some related sections: How to Get Started with the Model ; Uses > Direct Use

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the usage Instructions in the following text, here is a description of the property: (Instructions for using the model.) here are some related sections: How to Get Started with the Model ; Uses > Direct Use

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the usage Instructions in the following text, here is a description of the property: (Instructions for using the model.) here are some related sections: How to Get Started with the Model ; Uses > Direct Use

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the usage Instructions in the following text, here is a description of the property: (Instructions for using the model.) here are some related sections: How to Get Started with the Model ; Uses > Direct Use

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result: - Par. 1: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Benchmark WER result::

Question: Find the usage Instructions in the following text, here is a description of the property: (Instructions for using the model.) here are some related sections: How to Get Started with the Model ; Uses > Direct Use

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License: Vietnamese end-to-end speech recognition using wav2vec 2.0 > Model Parameters License:
The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC"""^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/85c031d4978df58bad8b74228a432699b1fdeaea4c730871d5eb91de8d9a42ad> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.890367"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/vivos"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87e3b3dad52adc5c12d2dc386ce41da75f306c4b73d2d497aa9c5f22c6de6e87> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6220314204692841"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/nid> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4013673961162567"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "gu"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/d24e90f006bf4dfce8be9dbaf9c92d1449f40b988b6cc52d60e48c40331dc607> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "arxiv:2309.07597"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.668275"^^xsd:dateTime ;
    ns1:object "feature-extraction"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55bd15a0af8bef99be0b0832411b5afbbb83779bc0cd1795dffee7c3285baa1f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "si"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.293186"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/taskmaster2"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4a958b2cddc6f3096d3a4e912c3bf694e8c132edcdb79366c6a34dff81cbbc7b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/35ddc796a6d136e9bf8810f1907a6a31657c5fb80bef078ab577c5edc3f59cc0> ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.675875"^^xsd:dateTime ;
    ns1:object "JAX"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6038534641265869"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.440570"^^xsd:dateTime ;
    ns1:object "{'name': 'Soumya Batra', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: bigscience-bloom-rail-1.0
datasets:
- jslin09/Fraud_Case_Verdicts
language:
- zh
metrics:
- accuracy
pipeline_tag: text-generation
text-generation:
  parameters:
    max_length: 400
    max_new_tokens: 400
    do_sample: true
    temperature: 0.75
    top_k: 50
    top_p: 0.9
tags:
- legal
widget:
- text: 王大明意圖為自己不法所有，基於竊盜之犯意，
  example_title: 生成竊盜罪之犯罪事實
- text: 騙人布意圖為自己不法所有，基於詐欺取財之犯意，
  example_title: 生成詐欺罪之犯罪事實
- text: 梅友乾明知其無資力支付酒店消費，亦無付款意願，竟意圖為自己不法之所有，
  example_title: 生成吃霸王餐之詐欺犯罪事實
- text: 闕很大明知金融帳戶之存摺、提款卡及密碼係供自己使用之重要理財工具，
  example_title: 生成賣帳戶幫助詐欺犯罪事實
- text: 通訊王明知近來盛行以虛設、租賃、借用或買賣行動電話人頭門號之方式，供詐騙集團作為詐欺他人交付財物等不法用途，
  example_title: 生成賣電話SIM卡之幫助詐欺犯罪事實
- text: 趙甲王基於行使偽造特種文書及詐欺取財之犯意，
  example_title: 偽造特種文書(契約、車牌等)詐財
---

# 判決書「犯罪事實」欄草稿自動生成
本模型是以司法院公開之「詐欺」案件判決書做成之資料集，基於 [BLOOM 560m](https://huggingface.co/bigscience/bloom-560m) 模型進行微調訓練，可以自動生成詐欺及竊盜案件之犯罪事實段落之草稿。資料集之資料範圍從100年1月1日至110年12月31日，所蒐集到的原始資料共有 74823 篇（判決以及裁定），我們只取判決書的「犯罪事實」欄位內容，並把這原始的資料分成三份，用於訓練的資料集有59858篇，約佔原始資料的80%，剩下的20%，則是各分配10%給驗證集（7482篇），10%給測試集（7483篇）。在本網頁進行測試時，請在模型載入完畢並生成第一小句後，持續按下Compute按鈕，就能持續生成文字。或是輸入自己想要測試的資料到文字框中進行測試。或是可以到[這裡](https://huggingface.co/spaces/jslin09/legal_document_drafting)有更完整的使用體驗。

# 比較
以下是本模型與經過微調後的BLOOM 560m、Llama 3.2-1b以 [ROUGE-L](https://en.wikipedia.org/wiki/ROUGE_(metric)) 做評估後的散點圖。
![ROUGE-L](https://i.imgur.com/V20ER70.png)

# 使用範例
如果要在自己的程式中調用本模型，可以參考下列的 Python 程式碼，藉由呼叫 API 的方式來生成刑事判決書「犯罪事實」欄的內容。
<details>
  <summary> 點擊後展開 </summary>
<pre>
  <code>
import requests, json
from time import sleep
from tqdm.auto import tqdm, trange

API_URL = "https://api-inference.huggingface.co/models/jslin09/bloom-560m-finetuned-fraud"
API_TOKEN = 'XXXXXXXXXXXXXXX' # 調用模型的 API token
headers = {"Authorization": f"Bearer {API_TOKEN}"} 

def query(payload):
    response = requests.post(API_URL, headers=headers, json=payload)
    return json.loads(response.content.decode("utf-8"))

prompt = "森上梅前明知其無資力支付酒店消費，亦無付款意願，竟意圖為自己不法之所有，"
query_dict = {
	"inputs": prompt,
}
text_len = 300
t = trange(text_len, desc= '生成例稿', leave=True)
for i in t:
    response = query(query_dict)
    try:
        response_text = response[0]['generated_text']
        query_dict["inputs"] = response_text
        t.set_description(f"{i}: {response[0]['generated_text']}")
        t.refresh()
    except KeyError:
        sleep(30) # 如果伺服器太忙無回應，等30秒後再試。
        pass
print(response[0]['generated_text'])
</code>
</pre>
</details>

或是，你要使用 transformers 套件來實作你的程式，將本模型下載至你本地端的電腦中執行，可以參考下列程式碼:
<details>
  <summary> 點擊後展開 </summary>
<pre>
  <code>
from transformers import AutoTokenizer, AutoModelForCausalLM

tokenizer = AutoTokenizer.from_pretrained("jslin09/bloom-560m-finetuned-fraud")
model = AutoModelForCausalLM.from_pretrained("jslin09/bloom-560m-finetuned-fraud")
</code>
</pre>
</details>

# 本模型進行各項指標進行評估的結果如下 [Open LLM Leaderboard Evaluation Results](https://huggingface.co/spaces/HuggingFaceH4/open_llm_leaderboard)
詳細的結果在 [這裡](https://huggingface.co/datasets/open-llm-leaderboard/details_jslin09__bloom-560m-finetuned-fraud)。
本模型只使用範圍相當小的資料集進行微調，就任務目標來說，已經是完美解決，但就廣泛的通用性來說，其實是不完美的。總的來說，如果應用場景是需要把模型建置在本地端、不能連到外部網路、提示字資料也不能外送的情境下，本模型的建置過程及結果提供了一個可行性的示範。

| Metric                | Value                     |
|-----------------------|---------------------------|
| Avg.                  | 18.37   |
| ARC (25-shot)         | 26.96          |
| HellaSwag (10-shot)   | 28.87    |
| MMLU (5-shot)         | 24.03         |
| TruthfulQA (0-shot)   | 0.0   |
| Winogrande (5-shot)   | 48.38   |
| GSM8K (5-shot)        | 0.0        |
| DROP (3-shot)         | 0.33         |

# 引文訊息

```
@article{lin2025assisting,
  title={Assisting Drafting of Chinese Legal Documents Using Fine-Tuned Pre-trained Large Language Models},
  author={Lin, Chun-Hsien and Cheng, Pu-Jen},
  journal={The Review of Socionetwork Strategies},
  pages={1--28},
  year={2025},
  publisher={Springer}
}
```"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Splits for the socratic config."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.260229"^^xsd:dateTime ;
    ns1:object "autotrain_compatible"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5912158489227295"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the reference implementation of `FLUX.1 [dev]` are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "tl"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.398219"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/293ad034f899dc681b5be10c715f25c59fa7f5261f229b66d796246e10927354> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.699284"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/956922acae22f21b82ce000e45d4739baf3f94e8b6eb2825a93166a8ccfc2fbf> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6223327219486237"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.675295"^^xsd:dateTime ;
    ns1:object "TensorFlow"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f38a4d1014d3cc9f5709e2ecd78f5809ca2397dd49ed420aa2e4a0ab4210a289> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.696693"^^xsd:dateTime ;
    ns1:object "Framework for efficiently deploying models on Intelligence Processing Unit (IPU) hardware."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a2f3a1fe1480acaf0753eb2d5ef88519c7b81e26e6505fed6d5c93c3a5119a65> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5442861914634705"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.322036"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e694cb482434e33f5aadafc7ba5607930722b2bd1b0cb252690679261c8692f4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
language: vi
datasets:
- vlsp
- vivos
tags:
- audio
- automatic-speech-recognition
license: cc-by-nc-4.0
widget:
- example_title: VLSP ASR 2020 test T1
  src: https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h/raw/main/audio-test/t1_0001-00010.wav
- example_title: VLSP ASR 2020 test T1
  src: https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h/raw/main/audio-test/t1_utt000000042.wav
- example_title: VLSP ASR 2020 test T2
  src: https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h/raw/main/audio-test/t2_0000006682.wav
model-index:
- name: Vietnamese end-to-end speech recognition using wav2vec 2.0 by VietAI
  results:
  - task:
      type: automatic-speech-recognition
      name: Speech Recognition
    dataset:
      name: Common Voice vi
      type: common_voice
      args: vi
    metrics:
    - type: wer
      value: 11.52
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Speech Recognition
    dataset:
      name: VIVOS
      type: vivos
      args: vi
    metrics:
    - type: wer
      value: 6.15
      name: Test WER
---

# Vietnamese end-to-end speech recognition using wav2vec 2.0

[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/vietnamese-end-to-end-speech-recognition/speech-recognition-on-common-voice-vi)](https://paperswithcode.com/sota/speech-recognition-on-common-voice-vi?p=vietnamese-end-to-end-speech-recognition)

[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/vietnamese-end-to-end-speech-recognition/speech-recognition-on-vivos)](https://paperswithcode.com/sota/speech-recognition-on-vivos?p=vietnamese-end-to-end-speech-recognition)


[Facebook's Wav2Vec2](https://ai.facebook.com/blog/wav2vec-20-learning-the-structure-of-speech-from-raw-audio/)

### Model description

[Our models](https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h) are pre-trained on 13k hours of Vietnamese youtube audio (un-label data) and fine-tuned on 250 hours labeled of [VLSP ASR dataset](https://vlsp.org.vn/vlsp2020/eval/asr) on 16kHz sampled speech audio. 

We use [wav2vec2 architecture](https://ai.facebook.com/blog/wav2vec-20-learning-the-structure-of-speech-from-raw-audio/) for the pre-trained model. Follow wav2vec2 paper:

>For the first time that learning powerful representations from speech audio alone followed by fine-tuning on transcribed speech can outperform the best semi-supervised methods while being conceptually simpler.

For fine-tuning phase, wav2vec2 is fine-tuned using Connectionist Temporal Classification (CTC), which is an algorithm that is used to train neural networks for sequence-to-sequence problems and mainly in Automatic Speech Recognition and handwriting recognition.

| Model | #params | Pre-training data | Fine-tune data |
|---|---|---|---|
| [base]((https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h)) | 95M | 13k hours | 250 hours |

In a formal ASR system, two components are required: acoustic model and language model. Here ctc-wav2vec fine-tuned model works as an acoustic model. For the language model, we provide a [4-grams model](https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h/blob/main/vi_lm_4grams.bin.zip) trained on 2GB of spoken text. 

Detail of training and fine-tuning process, the audience can follow [fairseq github](https://github.com/pytorch/fairseq/tree/master/examples/wav2vec) and [huggingface blog](https://huggingface.co/blog/fine-tune-wav2vec2-english).

### Benchmark WER result:

| | [VIVOS](https://ailab.hcmus.edu.vn/vivos) | [COMMON VOICE VI](https://paperswithcode.com/dataset/common-voice) | [VLSP-T1](https://vlsp.org.vn/vlsp2020/eval/asr) | [VLSP-T2](https://vlsp.org.vn/vlsp2020/eval/asr) |
|---|---|---|---|---|
|without LM| 10.77 | 18.34 | 13.33 | 51.45 |
|with 4-grams LM| 6.15 | 11.52 | 9.11 | 40.81 |


### Example usage

When using the model make sure that your speech input is sampled at 16Khz. Audio length should be shorter than 10s. Following the Colab link below to use a combination of CTC-wav2vec and 4-grams LM.

[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1pVBY46gSoWer2vDf0XmZ6uNV3d8lrMxx?usp=sharing)


```python
from transformers import Wav2Vec2Processor, Wav2Vec2ForCTC
from datasets import load_dataset
import soundfile as sf
import torch

# load model and tokenizer
processor = Wav2Vec2Processor.from_pretrained("nguyenvulebinh/wav2vec2-base-vietnamese-250h")
model = Wav2Vec2ForCTC.from_pretrained("nguyenvulebinh/wav2vec2-base-vietnamese-250h")

# define function to read in sound file
def map_to_array(batch):
    speech, _ = sf.read(batch["file"])
    batch["speech"] = speech
    return batch

# load dummy dataset and read soundfiles
ds = map_to_array({
    "file": 'audio-test/t1_0001-00010.wav'
})

# tokenize
input_values = processor(ds["speech"], return_tensors="pt", padding="longest").input_values  # Batch size 1

# retrieve logits
logits = model(input_values).logits

# take argmax and decode
predicted_ids = torch.argmax(logits, dim=-1)
transcription = processor.batch_decode(predicted_ids)
 ```

### Model Parameters License

The ASR model parameters are made available for non-commercial use only, under the terms of the Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0) license. You can find details at: https://creativecommons.org/licenses/by-nc/4.0/legalcode

### Citation

[![CITE](https://zenodo.org/badge/DOI/10.5281/zenodo.5356039.svg)](https://github.com/vietai/ASR)

```text
@misc{Thai_Binh_Nguyen_wav2vec2_vi_2021,
  author = {Thai Binh Nguyen},
  doi = {10.5281/zenodo.5356039},
  month = {09},
  title = {{Vietnamese end-to-end speech recognition using wav2vec 2.0}},
  url = {https://github.com/vietai/ASR},
  year = {2021}
}
```
**Please CITE** our repo when it is used to help produce published results or is incorporated into other software.

# Contact 

nguyenvulebinh@gmail.com / binh@vietai.org

[![Follow](https://img.shields.io/twitter/follow/nguyenvulebinh?style=social)](https://twitter.com/intent/follow?screen_name=nguyenvulebinh)"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2025-01-13T13:57:35+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.434907"^^xsd:dateTime ;
    ns1:object "{'name': 'Aakanksha Chowdhery', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4b9f1c2e337ab389e22c7201bf0f4d7d38207364272050ef9059cfa73185096f> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5343569219112396"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'rationale' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.681209"^^xsd:dateTime ;
    ns1:object "ml-agents"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/293ad034f899dc681b5be10c715f25c59fa7f5261f229b66d796246e10927354> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.933031"^^xsd:dateTime ;
    ns1:object "llama-2"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/32934a13e4d01c327dbef8b4279d190d77f3095d7022f9465dc377bbb3565c94> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.667847"^^xsd:dateTime ;
    ns1:object "Converts written text into spoken audio."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6839f153ace4a5cfe1e9a1cdb43c1bfc2260f4c85be0608af5ec84a75a205d2c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "si"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.024210"^^xsd:dateTime ;
    ns1:object "black-forest-labs"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/97b8857097478874bd8e9cb141256c1acde4789374ce4d72be5580b0da08f403> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/97a327fc7cf14c750f068bdf3aab8cf61c95e2b04079bd1772d37c385f2b1088> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.932846"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/32934a13e4d01c327dbef8b4279d190d77f3095d7022f9465dc377bbb3565c94> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.644339"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6726f6435b32ab359d8c48bd5f24d3180c4c1772a769d50d3b4c8cf8f0ecd46> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5013309419155121"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.768417"^^xsd:dateTime ;
    ns1:object "kasnerz/logic2text"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/90eec6e25a3fb442a9bde78265ab17bc704cb71d58af7815f5a5ca027c4a2c94> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_points> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "so"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/time_limit/nanos"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/nanos> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.671156"^^xsd:dateTime ;
    ns1:object "Tabular Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4eaeba2a8985fdb21e18ca1e967f067a345c0498ed10fc3e5e9ba95e39876cab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.682371"^^xsd:dateTime ;
    ns1:object "Keras"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a225e69a17f4be8c51cc1f1852c40371a478cfa95661008284bc676564a876e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4488353431224823"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4195976257324219"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6027051210403442"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6677646636962891"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/emersoftware/tulio-chilean-spanish-bert-msmarco-qa-es-mnrl-mn"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/logic_str> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "hr"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.448677"^^xsd:dateTime ;
    ns1:object "{'name': 'Jian Xiang Kuan', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.795559"^^xsd:dateTime ;
    ns1:object "realwiz"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/641cbecd8514780fd9d4a828b7583a3f538308d77bf6aa47fcff1594d0a5d746> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/JabrilJacobs/ppo-Pyramids> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.462163"^^xsd:dateTime ;
    ns1:object "{'name': 'Pierre Stock', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "ppo-Huggy"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/594a6f3cf66106516dc4e80f44dbe528cdcf0fb397d75a65d1b3b2a81dfc0f92> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "as"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'cf_contest_id' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_contest_id> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "su"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ed9cec8e6a5fdfa104ed655c6382fe3917910706bf2c99a2c70bed93e6feeee5> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-01-07T17:32:51+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.686043"^^xsd:dateTime ;
    ns1:object "Transformers.js"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5670ef7e87a4fbee3fa95024561f672fca6cc6a159a62e20ed73b98d267a72bd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.445443"^^xsd:dateTime ;
    ns1:object "{'name': 'Diana Liskovich', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.455166"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.683431"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/15ceeb8703c6ba669411911c62acbbac38f4d1235e8ac6118537ac1e6d75ae84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/main/answer> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4615113437175751"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/interpret> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/output> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/incorrect_solutions"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/Xinging/llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6029241979122162"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5f8c97c4aaca5a8c6afac1954a68be2dcb40698e64871f37e5fe5dc5849a3aab> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-01-23T02:29:03+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.645458"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/192e3c37cdad044da28b01edd768819d9dc9ebf5642a4dd3e0cf9564058b6d2a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6620725691318512"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
library_name: sample-factory
tags:
- deep-reinforcement-learning
- reinforcement-learning
- sample-factory
model-index:
- name: APPO
  results:
  - task:
      type: reinforcement-learning
      name: reinforcement-learning
    dataset:
      name: doom_health_gathering_supreme
      type: doom_health_gathering_supreme
    metrics:
    - type: mean_reward
      value: 12.03 +/- 6.27
      name: mean_reward
      verified: false
---

A(n) **APPO** model trained on the **doom_health_gathering_supreme** environment.

This model was trained using Sample-Factory 2.0: https://github.com/alex-petrenko/sample-factory.
Documentation for how to use Sample-Factory can be found at https://www.samplefactory.dev/


## Downloading the model

After installing Sample-Factory, download the model with:
```
python -m sample_factory.huggingface.load_from_hub -r heidragon3045/rl_course_vizdoom_health_gathering_supreme
```

    
## Using the model

To run the model after download, use the `enjoy` script corresponding to this environment:
```
python -m .usr.local.lib.python3.9.dist-packages.ipykernel_launcher --algo=APPO --env=doom_health_gathering_supreme --train_dir=./train_dir --experiment=rl_course_vizdoom_health_gathering_supreme
```


You can also upload models to the Hugging Face Hub using the same script with the `--push_to_hub` flag.
See https://www.samplefactory.dev/10-huggingface/huggingface/ for more details
        
## Training with this model

To continue training with this model, use the `train` script corresponding to this environment:
```
python -m .usr.local.lib.python3.9.dist-packages.ipykernel_launcher --algo=APPO --env=doom_health_gathering_supreme --train_dir=./train_dir --experiment=rl_course_vizdoom_health_gathering_supreme --restart_behavior=resume --train_for_env_steps=10000000000
```

Note, you may have to adjust `--train_for_env_steps` to a suitably high number as the experiment will resume at the number of steps it concluded at.
        """^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/03ff21e013ce78d894192593d219c2692f67183d2062dbcf75c260726e60181a> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7365695536136627"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/domain> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4b9f1c2e337ab389e22c7201bf0f4d7d38207364272050ef9059cfa73185096f> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.451599"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.467880"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/Xinging/llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5909353196620941"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.698288"^^xsd:dateTime ;
    ns1:object "AllenNLP"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f398a6ed462d305d58506b378a7b488c448115a8aef746a62331a8435d54a72b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/345644230f7e711605ef233127803f06659ae1bd200eadaf0bb48fd111eb8366> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.674691"^^xsd:dateTime ;
    ns1:object "PyTorch"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "socratic/question"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6494778990745544"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/e2cb5f7dba65387f6ecd56e7a642d33df8fca1197b2ac918cd629a6cd9b294b2> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/641cbecd8514780fd9d4a828b7583a3f538308d77bf6aa47fcff1594d0a5d746> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "plain_text"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "split_name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "main"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f57740f97820ddb55f90898c07a60a736e9a9030d5eac125af5c595ad0638c8f> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.697140"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/logic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.661659"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/017f19456e7a37fe3c1ad51165020b62cc12497d5d20651e073e3520a5099eb9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.460819"^^xsd:dateTime ;
    ns1:object "{'name': 'Devendra Singh Chaplot', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.310889"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2210.11416"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "id"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2022-09-26T06:50:46+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2022-09-20T13:51:34+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.678264"^^xsd:dateTime ;
    ns1:object "sircesoc"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ea5c52c0ba4305614a2132e3998c1bc735c574db3f8dd76dab1ede8aeef926a9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/cf_points"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_points> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.554762065410614"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:gsm8k"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "arxiv:2312.15503"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.38232438266277313"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the processor requirements for the model."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6127393841743469"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5198248028755188"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5121047645807266"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "lt"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/293ad034f899dc681b5be10c715f25c59fa7f5261f229b66d796246e10927354> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
language:
- en
license: other
license_name: flux-1-dev-non-commercial-license
license_link: LICENSE.md
extra_gated_prompt: By clicking "Agree", you agree to the [FluxDev Non-Commercial
  License Agreement](https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md)
  and acknowledge the [Acceptable Use Policy](https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/POLICY.md).
tags:
- text-to-image
- image-generation
- flux
---

![FLUX.1 [dev] Grid](./dev_grid.jpg)

`FLUX.1 [dev]` is a 12 billion parameter rectified flow transformer capable of generating images from text descriptions.
For more information, please read our [blog post](https://blackforestlabs.ai/announcing-black-forest-labs/).

# Key Features
1. Cutting-edge output quality, second only to our state-of-the-art model `FLUX.1 [pro]`.
2. Competitive prompt following, matching the performance of closed source alternatives .
3. Trained using guidance distillation, making `FLUX.1 [dev]` more efficient.
4. Open weights to drive new scientific research, and empower artists to develop innovative workflows.
5. Generated outputs can be used for personal, scientific, and commercial purposes as described in the [`FLUX.1 [dev]` Non-Commercial License](https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md).

# Usage
We provide a reference implementation of `FLUX.1 [dev]`, as well as sampling code, in a dedicated [github repository](https://github.com/black-forest-labs/flux).
Developers and creatives looking to build on top of `FLUX.1 [dev]` are encouraged to use this as a starting point.

## API Endpoints
The FLUX.1 models are also available via API from the following sources
- [bfl.ml](https://docs.bfl.ml/) (currently `FLUX.1 [pro]`)
- [replicate.com](https://replicate.com/collections/flux)
- [fal.ai](https://fal.ai/models/fal-ai/flux/dev)
- [mystic.ai](https://www.mystic.ai/black-forest-labs/flux1-dev)

## ComfyUI
`FLUX.1 [dev]` is also available in [Comfy UI](https://github.com/comfyanonymous/ComfyUI) for local inference with a node-based workflow.

## Diffusers

To use `FLUX.1 [dev]` with the 🧨 diffusers python library, first install or upgrade diffusers

```shell
pip install -U diffusers
```

Then you can use `FluxPipeline` to run the model

```python
import torch
from diffusers import FluxPipeline

pipe = FluxPipeline.from_pretrained("black-forest-labs/FLUX.1-dev", torch_dtype=torch.bfloat16)
pipe.enable_model_cpu_offload() #save some VRAM by offloading the model to CPU. Remove this if you have enough GPU power

prompt = "A cat holding a sign that says hello world"
image = pipe(
    prompt,
    height=1024,
    width=1024,
    guidance_scale=3.5,
    num_inference_steps=50,
    max_sequence_length=512,
    generator=torch.Generator("cpu").manual_seed(0)
).images[0]
image.save("flux-dev.png")
```

To learn more check out the [diffusers](https://huggingface.co/docs/diffusers/main/en/api/pipelines/flux) documentation

---
# Limitations
- This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.

# Out-of-Scope Use
The model and its derivatives may not be used

- In any way that violates any applicable national, federal, state, local or international law or regulation.
- For the purpose of exploiting, harming or attempting to exploit or harm minors in any way; including but not limited to the solicitation, creation, acquisition, or dissemination of child exploitative content.
- To generate or disseminate verifiably false information and/or content with the purpose of harming others.
- To generate or disseminate personal identifiable information that can be used to harm an individual.
- To harass, abuse, threaten, stalk, or bully individuals or groups of individuals.
- To create non-consensual nudity or illegal pornographic content.
- For fully automated decision making that adversely impacts an individual's legal rights or otherwise creates or modifies a binding, enforceable obligation.
- Generating or facilitating large-scale disinformation campaigns.

# License
This model falls under the [`FLUX.1 [dev]` Non-Commercial License](https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md)."""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.423624"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ed9cec8e6a5fdfa104ed655c6382fe3917910706bf2c99a2c70bed93e6feeee5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.464835"^^xsd:dateTime ;
    ns1:object "{'name': 'Shitao Xiao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5979948341846466"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.675116"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f38a4d1014d3cc9f5709e2ecd78f5809ca2397dd49ed420aa2e4a0ab4210a289> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "et"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/dabb9d310d39a47f81f009cd476a41773667de14be41c930213432a06ad59fb0> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.42546264827251434"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.647549"^^xsd:dateTime ;
    ns1:object "Models based on RoBERTa (Robustly Optimized BERT Approach), an optimized BERT variant with improved pretraining and performance."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bc69543009040d6e8dba73b201af25ed291f7933acca2056091eb5f643c4f919> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5828441381454468"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/03a8010a33b7e6718a7b9231b9c21ef9f07a99b444199c8533c744e5ddf1b77a> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.749251"^^xsd:dateTime ;
    ns1:object "heidragon3045"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9023c2c7aca196f573452d18bac450e68ffcc5423d92a7a150cee645b6b7b8f8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "tl"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6794083118438721"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.356021"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/01ce031a92b6a44f90635a9aa473acc02c379a53ef7b0a0d8f88b6027a9ad64e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "llama2"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "fi"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ne"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.652377"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c6a31d1f7013eb41349bc590b0cc16d51b0a1706fa3f70c1337a8eecf06d2173> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.469228"^^xsd:dateTime ;
    ns1:object "cs.SD"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/g_ids> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_index> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.461838"^^xsd:dateTime ;
    ns1:object "{'name': 'Lélio Renard Lavaud', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.275284"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sd"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/a5061996452e34a05d1c80cf537e1e6a64a7e72a60ffcf719ce25f5d6b4306ed> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'is_description_translated' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/is_description_translated> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4849660247564316"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6720621883869171"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "raw/question"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.701367"^^xsd:dateTime ;
    ns1:object "Python implementation of state-of-the-art variational autoencoders for generative modeling."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ee41d767ffa75d0037ac340fa59164645b363ea8891e2a3f815c644b81ea9fbd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.430772"^^xsd:dateTime ;
    ns1:object "Scaling Instruction-Finetuned Language Models"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.257944"^^xsd:dateTime ;
    ns1:object "safetensors"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.651225"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/40e5b840897abb6f44300acdb8df19e9ba787840ae3899b5cff54ee848bd4df6> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5748274922370911"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.680801"^^xsd:dateTime ;
    ns1:object "A file format for efficiently storing and loading large language models with quantization options."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/934dea1e0796f0376db45e4b74e093aeb422ffdf79cf5c4aaea1e5e84969c76e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.695381"^^xsd:dateTime ;
    ns1:object "OpenVINO"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5931df18dd0fa4a7991df9c03e52fe5074eee570f6c3e7b480947ec85d10c3a1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.275451"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2310.06825"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/hugging-robot/ppo-Huggy/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/generated_tests/input"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2022-09-20T13:51:34+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.692487"^^xsd:dateTime ;
    ns1:object "fastText"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/12855f71ca9ab0f85c6609885b9e912174c81e608da47e6448d968f757f5ab44> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ro"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.749092"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9023c2c7aca196f573452d18bac450e68ffcc5423d92a7a150cee645b6b7b8f8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.676894"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/black-forest-labs/FLUX.1-dev-onnx/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'generated_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.665164"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0994690604942759c573cba9c9ac3ba7475a580bd342b27f75b529860f3a2715> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6158506572246552"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "mr"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "plain_text/split"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.41138510406017303"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.688841"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2ae536499f90e7e5edcd87dddf0d258801cae8e7a2f82d8ce02361ef54e77c05> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/BAAI/bge-large-zh-v1.5/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base.en> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5143183469772339"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.49565304815769196"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
tags:
- text-to-image
- stable-diffusion
- lora
- diffusers
- template:sd-lora
widget:
- text: >-
    a man with a horse head wearing noggles, sitting on the couch in a messy
    room
  output:
    url: images/horse.jpeg
- text: >-
    an ancient group of priests with hidden faces wearing noggles. an ethereum
    shard is floating in the center of the ceremony with a bright purple hue
  output:
    url: images/cult.jpeg
- text: an absurd painting of noggles
  output:
    url: images/goblin.jpeg
- text: >-
    wide and low angle, cinematic, fashion photography for the brand Nounish.
    Woman sitting on floor wearing a noggles and a white tshirt with big letters
    "nounish" logo text, and black chinos. The background is a gradient, red,
    pink and white, studio setting
  output:
    url: images/nounish.jpeg
- text: >-
    a hyperrealistic selfie of a pickle wearing red noggles with an anchor
    tattoo on its body
  output:
    url: images/pickle.jpeg
base_model: black-forest-labs/FLUX.1-dev
instance_prompt: noggles
license: cc0-1.0
---
# noggles

<Gallery />

## Model description 

Generate images with [noggles](https:&#x2F;&#x2F;nouns.wtf&#x2F;)

## Trigger words

You should use `noggles` to trigger the image generation.


## Download model

Weights for this model are available in Safetensors format.

[Download](/realwiz/noggles/tree/main) them in the Files & versions tab.
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "tt"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7548916637897491"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The ethical considerations and risks section of the text discusses the potential for Flan-T5 to generate inappropriate content or replicate inherent biases in the underlying data. Additionally, the sensitive use section states that Flan-T5 should not be applied for any unacceptable use cases, such as generating abusive speech."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5092537701129913"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.331622"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fadbdd40ae3e4d21fb8044995368c36935104a0e589c0bb691d566a182b91295> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.296338"^^xsd:dateTime ;
    ns1:object "quasc"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/83f6b13508bdbd7f513cbd6de7ef5170638d3e63612800f251838bd8e03c995e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5969279706478119"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.656068"^^xsd:dateTime ;
    ns1:object "Video Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9132b663f2893be0a7b034405164be91c4fe250d2b1ecd3390fb9b9bd689997b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/farleyknight/patent-summarization-fb-bart-base-2022-09-20/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6249090135097504"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/968ecedd3c85e02e2a1570cdb819daefb47aff2abc7e1d647a5f0ef48f5ceb3d> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/2529572666d8ae917752f418f0b008b820cf821a3ba355927ca159454740dce7> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.606920063495636"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5015755891799927"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/BAAI/bge-large-zh-v1.5/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5043845921754837"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.670369"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1759562ba5af131b8ba1cdb4e06a2cee5c1ebff35971610e6ef2eb585b413ef7> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.693056"^^xsd:dateTime ;
    ns1:object "OpenCLIP"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a0e0c1ddbfc3fa3aaab6bbd4ee4022410d9adc63e05996f59a545a7929aaf019> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.448845"^^xsd:dateTime ;
    ns1:object "{'name': 'Puxin Xu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.285086"^^xsd:dateTime ;
    ns1:object "pytorch"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f57740f97820ddb55f90898c07a60a736e9a9030d5eac125af5c595ad0638c8f> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.463614"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2401.03462"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "mg"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.596313"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/46abf5271eb0681e45ae7ae2a06914f431ea2c4d89b55ddc999bafc4a0a5df75> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.48351024091243744"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.432191"^^xsd:dateTime ;
    ns1:object "{'name': 'Shayne Longpre', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6963362097740173"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5474282801151276"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "license:llama2"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6282658576965332"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The intended use of the reference implementation of `FLUX.1 [dev]` is for developers and creatives looking to build on top of `FLUX.1 [dev]`. The text suggests that this implementation is a starting point for building on top of `FLUX.1 [dev]`, and that developers and creatives should use this as a reference to build their own projects."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.657754"^^xsd:dateTime ;
    ns1:object "Mask Generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8fd2e8ec655b6111cc83724fbc62c13d0c8b3442b1768b9bc35e0eceae0ebe85> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5594030171632767"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/black-forest-labs/FLUX.1-dev"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.683184"^^xsd:dateTime ;
    ns1:object "Collection of SOTA computer vision models, layers, utilities, and optimizers for training and inferencing."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3135ad7c615e157f80ecab1b96d4167d2e6c147b2e563721a652a5b56845418c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.621062"^^xsd:dateTime ;
    ns1:object "text-classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7ad8435aa27d409e8692d8f6043742210150fe3cf420b9abaad32ffe8a63b7c7> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.466075"^^xsd:dateTime ;
    ns1:object """Large language models (LLMs) face significant challenges stemming from their
inherent limitations in knowledge, memory, alignment, and action. These
challenges cannot be addressed by LLMs alone, but should rely on assistance
from the external world, such as knowledge base, memory store, demonstration
examples, and tools. Retrieval augmentation stands as a vital mechanism for
bridging the gap between LLMs and the external assistance. However,
conventional methods encounter two pressing issues. On the one hand, the
general-purpose retrievers are not properly optimized for the retrieval
augmentation of LLMs. On the other hand, the task-specific retrievers lack the
required versatility, hindering their performance across the diverse retrieval
augmentation scenarios.
  In this work, we present a novel approach, the LLM-Embedder, which
comprehensively supports the diverse retrieval augmentation needs of LLMs with
one unified embedding model. Training such a unified model is non-trivial, as
various retrieval tasks aim to capture distinct semantic relationships, often
subject to mutual interference. To address this challenge, we systematically
optimize our training methodology. This includes reward formulation based on
LLMs' feedback, the stabilization of knowledge distillation, multi-task
fine-tuning with explicit instructions, and homogeneous in-batch negative
sampling. These optimization strategies contribute to the outstanding empirical
performance of the LLM-Embedder. Notably, it yields remarkable enhancements in
retrieval augmentation for LLMs, surpassing both general-purpose and
task-specific retrievers in various evaluation scenarios. Our checkpoint and
source code are publicly available at
https://github.com/FlagOpen/FlagEmbedding."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "az"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.59980309009552"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.428455"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/meta-llama/Llama-2-7b-hf/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ca"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4856327027082443"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7887546122074127"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The intended use of the model and its derivatives is not specified in the given context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6259706020355225"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The development status of Llama 2 is described as \"This is a static model trained on an offline dataset. Future versions of the tuned models will be released as we improve model safety with community feedback.\""^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5470216870307922"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "split_name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.644057"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6010051e02699a6f2c68fb88d7ff60b81f5d07a4480548861898a687a9a3757> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.295412"^^xsd:dateTime ;
    ns1:object "aqua_rat"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.520963728427887"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5841552168130875"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is Clifton Poth, Jonas Pfeiffer, Andreas R{\\\"u}ckl{'e}, and Iryna Gurevych."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.650635"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5294100683a6737ae3cdcdb512f4b8459993c27fd8f86917ce5e595178c28f6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "pa"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "[{\"plain_text_splits/split_name\":\"train\"},{\"plain_text_splits/split_name\":\"test\"},{\"plain_text_splits/split_name\":\"validation\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/time_limit> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/fadbdd40ae3e4d21fb8044995368c36935104a0e589c0bb691d566a182b91295> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "yi"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "af"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.433797"^^xsd:dateTime ;
    ns1:object "{'name': 'Zhuyun Dai', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5432970821857452"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6407479345798492"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5140790939331055"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object """The software requirements for the patent-summarization-fb-bart-base-2022-09-20 model are as follows:

- Transformers 4.23.0.dev0
- Pytorch 1.12.0
- Datasets 2.4.0
- Tokenizers 0.12.1

These software dependencies are mentioned in the "Training procedure > Framework versions" section of the text."""^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.667672"^^xsd:dateTime ;
    ns1:object "Text to Speech"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6839f153ace4a5cfe1e9a1cdb43c1bfc2260f4c85be0608af5ec84a75a205d2c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.653750"^^xsd:dateTime ;
    ns1:object "Text to Image"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6032304763793945"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The context provided does not contain information about the model category."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.692153"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a3c9ca93ab7ec29d067dd25733037f174c1326ef487292e5e1c9eea5cb35feb1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.681779"^^xsd:dateTime ;
    ns1:object "sentence-transformers"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e2cb5f7dba65387f6ecd56e7a642d33df8fca1197b2ac918cd629a6cd9b294b2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.258906"^^xsd:dateTime ;
    ns1:object "llama-factory"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/97a327fc7cf14c750f068bdf3aab8cf61c95e2b04079bd1772d37c385f2b1088> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "mi"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6139348149299622"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.584413468837738"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/realwiz/noggles"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'public_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5493046343326569"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/AdapterHub/bert-base-uncased-pf-multirc> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "cc0-1.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/594a6f3cf66106516dc4e80f44dbe528cdcf0fb397d75a65d1b3b2a81dfc0f92> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/public_tests/output"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "tg"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5954577624797821"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "lt2t_lf_to_text"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "zh"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.701694"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/268a99307b1b2fc93e098debb5a8f035395fe7cffbff2da188e80280cbc0aa3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5223501920700073"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.455974817276001"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/07456871ec04ff7e102a14a63ee4f77775baadaf5e404b74e2ab827a14335259> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6197782754898071"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/language> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.943639"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/openai"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/863d9e15edc2c98657749abae884b48544051490f76ea0e913adf85a3f2727a5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.638525"^^xsd:dateTime ;
    ns1:object "{'name': 'Ilya Sutskever', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.694021"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bbf4caca758174ac9ca1258e1174d6c6d75a330218b88807385547a31f8229ab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "tr"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/rangapriyabatchu/black-forest-labsFLUX.1-dev/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.678377628326416"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5485893785953522"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.466422"^^xsd:dateTime ;
    ns1:object "cs.IR"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.443613"^^xsd:dateTime ;
    ns1:object "{'name': 'Rui Hou', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_tags> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.698211"^^xsd:dateTime ;
    ns1:object "jslin09/Fraud_Case_Verdicts"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4b9f1c2e337ab389e22c7201bf0f4d7d38207364272050ef9059cfa73185096f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4662057012319565"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.436813"^^xsd:dateTime ;
    ns1:object "{'name': 'Slav Petrov', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/cf_contest_id> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_tags> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5248725116252899"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5347443372011185"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "th"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.684840"^^xsd:dateTime ;
    ns1:object "Flair"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6fd4d85e3416654bf33d9c5f3803b3e9900ce78a6309e4e6a84b2499ad4b7981> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4544180780649185"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.638979"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6b72a43d7396497fe9733cb91a9e688db073b7c1c583e2c5fca339bd414a4dac> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6636452972888947"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/DianaJin/sample/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/BAAI/bge-large-zh-v1.5"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.600808709859848"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The storage requirements for the Mistral-7B-Instruct-v0.2 model are not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.689415"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6b75cb265aea0eff37651595203eec38a2a621d81df99e4cfcd5f30cef590384> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/fadbdd40ae3e4d21fb8044995368c36935104a0e589c0bb691d566a182b91295> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.464666"^^xsd:dateTime ;
    ns1:object "{'name': 'Zheng Liu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.688239"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85b6833a0e3a566c8de87c0f42b57ec97f67e03180245edb416823e240ee11d1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/90eec6e25a3fb442a9bde78265ab17bc704cb71d58af7815f5a5ca027c4a2c94> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4351206570863724"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ru"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/emersoftware/tulio-chilean-spanish-bert-msmarco-qa-es-mnrl-mn> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6961676180362701"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
tags:
- UpNDown-v5
- deep-reinforcement-learning
- reinforcement-learning
- custom-implementation
library_name: cleanrl
model-index:
- name: PPO
  results:
  - task:
      type: reinforcement-learning
      name: reinforcement-learning
    dataset:
      name: UpNDown-v5
      type: UpNDown-v5
    metrics:
    - type: mean_reward
      value: 358322.00 +/- 6289.19
      name: mean_reward
      verified: false
---

# (CleanRL) **PPO** Agent Playing **UpNDown-v5**

This is a trained model of a PPO agent playing UpNDown-v5.
The model was trained by using [CleanRL](https://github.com/vwxyzjn/cleanrl) and the most up-to-date training code can be
found [here](https://github.com/vwxyzjn/cleanrl/blob/master/cleanrl/cleanba_ppo_envpool_machado_atari_wrapper.py).

## Get Started

To use this model, please install the `cleanrl` package with the following command:

```
pip install "cleanrl[jax,envpool,atari]"
python -m cleanrl_utils.enjoy --exp-name cleanba_ppo_envpool_machado_atari_wrapper --env-id UpNDown-v5
```

Please refer to the [documentation](https://docs.cleanrl.dev/get-started/zoo/) for more detail.


## Command to reproduce the training

```bash
curl -OL https://huggingface.co/cleanrl/UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1/raw/main/cleanba_ppo_envpool_machado_atari_wrapper.py
curl -OL https://huggingface.co/cleanrl/UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1/raw/main/pyproject.toml
curl -OL https://huggingface.co/cleanrl/UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1/raw/main/poetry.lock
poetry install --all-extras
python cleanba_ppo_envpool_machado_atari_wrapper.py --distributed --learner-device-ids 1 2 3 --track --wandb-project-name cleanba --save-model --upload-model --hf-entity cleanrl --env-id UpNDown-v5 --seed 1
```

# Hyperparameters
```python
{'actor_device_ids': [0],
 'actor_devices': ['gpu:0'],
 'anneal_lr': True,
 'async_batch_size': 20,
 'async_update': 3,
 'batch_size': 15360,
 'capture_video': False,
 'clip_coef': 0.1,
 'concurrency': True,
 'cuda': True,
 'distributed': True,
 'ent_coef': 0.01,
 'env_id': 'UpNDown-v5',
 'exp_name': 'cleanba_ppo_envpool_machado_atari_wrapper',
 'gae_lambda': 0.95,
 'gamma': 0.99,
 'global_learner_decices': ['gpu:1',
                            'gpu:2',
                            'gpu:3',
                            'gpu:5',
                            'gpu:6',
                            'gpu:7'],
 'hf_entity': 'cleanrl',
 'learner_device_ids': [1, 2, 3],
 'learner_devices': ['gpu:1', 'gpu:2', 'gpu:3'],
 'learning_rate': 0.00025,
 'local_batch_size': 7680,
 'local_minibatch_size': 1920,
 'local_num_envs': 60,
 'local_rank': 0,
 'max_grad_norm': 0.5,
 'minibatch_size': 3840,
 'norm_adv': True,
 'num_envs': 120,
 'num_minibatches': 4,
 'num_steps': 128,
 'num_updates': 3255,
 'profile': False,
 'save_model': True,
 'seed': 1,
 'target_kl': None,
 'test_actor_learner_throughput': False,
 'torch_deterministic': True,
 'total_timesteps': 50000000,
 'track': True,
 'update_epochs': 4,
 'upload_model': True,
 'vf_coef': 0.5,
 'wandb_entity': None,
 'wandb_project_name': 'cleanba',
 'world_size': 2}
```
    """^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6581687033176422"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5632850527763367"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.649653"^^xsd:dateTime ;
    ns1:object "Image Text to Text"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/49bf7b39c8a2a4cb84ab43bc3c320de6e0c1da1253ebf022a5d0a84737581119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/heidragon3045/rl_course_vizdoom_health_gathering_supreme> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/e5ae71f534f4f5c975c2c63beec692769102bbc4cd162258b70098e86ed01040> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6852615773677826"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.44454623758792877"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the software are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6535591781139374"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "fa"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.633476197719574"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.654718"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7062dc4cfa463be9c92783a4d2c8abb9a4b37f71f4caef7c07cd6787e1843ed> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.461150"^^xsd:dateTime ;
    ns1:object "{'name': 'Florian Bressand', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.677473"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4715578407049179"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the software are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ps"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.409633"^^xsd:dateTime ;
    ns1:object "farleyknight"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8e97617d5a4a866db41b3c71e04d726f4ec71cfcc1af9197f70f7ac9cbd7afe4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.436011"^^xsd:dateTime ;
    ns1:object "{'name': 'Adams Yu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.444107"^^xsd:dateTime ;
    ns1:object "{'name': 'Viktor Kerkez', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.465312"^^xsd:dateTime ;
    ns1:object "{'name': 'Zhicheng Dou', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.399775"^^xsd:dateTime ;
    ns1:object "reinforcement-learning"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/594a6f3cf66106516dc4e80f44dbe528cdcf0fb397d75a65d1b3b2a81dfc0f92> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.693228"^^xsd:dateTime ;
    ns1:object "Open-source implementation of CLIP (Contrastive Language-Image Pre-Training) models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a0e0c1ddbfc3fa3aaab6bbd4ee4022410d9adc63e05996f59a545a7929aaf019> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "license:cc-by-nc-4.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6629272401332855"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f57740f97820ddb55f90898c07a60a736e9a9030d5eac125af5c595ad0638c8f> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/46abf5271eb0681e45ae7ae2a06914f431ea2c4d89b55ddc999bafc4a0a5df75> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.449809"^^xsd:dateTime ;
    ns1:object "{'name': 'Sharan Narang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/description> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'answer' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4934801906347275"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "socratic_splits"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "FLUX.1-dev"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6826585829257965"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/wiki> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.726262"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/venetis"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/54e305dde447795b80481ad971eaf23195cddc3f5d2846c9ede5cc64115e586e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4756670594215393"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5650996565818787"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The author of this content is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.918107"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/meta-llama"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c03090b68b1e45d6bebe9b9d1ea103b6a4c064ceb71f16f08a5ae59d9bac70e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5797310173511505"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6162400841712952"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The author of this content is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/venetis/bert-base-uncased-finetuned-3d-sentiment> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.671560"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1054f9c274823fbeb3d1ab19d0f2344791cee18915cdb21fb1437bba03ba8fb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.3814336657524109"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.431651"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5869331061840057"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5084bd7d1db13fba7c75464ccc31553c091b418df6b730d960b1d807a5d133db> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.260855"^^xsd:dateTime ;
    ns1:object "endpoints_compatible"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.399465"^^xsd:dateTime ;
    ns1:object "deep-reinforcement-learning"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2529572666d8ae917752f418f0b008b820cf821a3ba355927ca159454740dce7> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.49487973749637604"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The intended use of wav2vec2-base-demo-aug is not explicitly stated in the given context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/thanhduycao/wav2vec2-base-demo-aug> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "es"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:aqua_rat"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.285813"^^xsd:dateTime ;
    ns1:object "finetuned"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d24e90f006bf4dfce8be9dbaf9c92d1449f40b988b6cc52d60e48c40331dc607> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.650457501411438"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6075861752033234"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the validated On."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.460325"^^xsd:dateTime ;
    ns1:object "{'name': 'Alexandre Sablayrolles', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw/split> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/plain_text/split> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.668616"^^xsd:dateTime ;
    ns1:object "sentence-similarity"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e05dcf019c16b58ee18632feff8d896599b435fed50864784dfbbf57cfeb9f88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/79cf083846a8329d2912fcd7f375233c37a54917af291bb945f0b58bc735b8ad> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:quasc"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/b0f442b1bed2cd3bb1be33408f94800ba60c1c82505ebb0328621109dadc9b5a> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5319159626960754"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.439087"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/farleyknight/patent-summarization-fb-bart-base-2022-09-20/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/29d9051dd7490ee997ef15f45bf916274706268eab63f2c7bff767388d51cf25> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.431325"^^xsd:dateTime ;
    ns1:object "2022-10-20"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/DianaJin/sample> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.454629"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2309.07597"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "hy"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7230351567268372"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.690560"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55f0c4818716a5c86a051b41b27450e6f00f7e81d8a89b0f3bd6928719ce08e4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.429785"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4430451dbf73b569af5e3deca9703720c96fa918ac4f295a37785e7c1bb43cb0> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/realwiz/noggles/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/AdapterHub/bert-base-uncased-pf-multirc/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5391974002122879"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/public_tests/input"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.259217"^^xsd:dateTime ;
    ns1:object "full"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b751528b59fc7a0677c52c99b85d41f69866dad58deffdbf1e33a510f27bc2f5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5870541334152222"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.917952"^^xsd:dateTime ;
    ns1:object "meta-llama"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c03090b68b1e45d6bebe9b9d1ea103b6a4c064ceb71f16f08a5ae59d9bac70e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.447234"^^xsd:dateTime ;
    ns1:object "{'name': 'Kalyan Saladi', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.441418"^^xsd:dateTime ;
    ns1:object "{'name': 'Cristian Canton Ferrer', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6610167920589447"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the author of the text."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5063261389732361"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.722015"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.996621"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.302053"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/125d01550d26a191f055cd53b0b7bf0298ef4a173496f10aa09a87ca1b3fdcbe> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.652152"^^xsd:dateTime ;
    ns1:object "Categorizes images into predefined classes or labels."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/25a48b7b32ec31051c00ea96f30d1637f216eb0ed7620da77d06c4637ab5da7f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5525170266628265"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.646022"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/35d7d276230081bdfd86d06ca958126011d6a7e381452a488c2bfa8fcc512fdb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.449962"^^xsd:dateTime ;
    ns1:object "{'name': 'Aurelien Rodriguez', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6cbcf0cfda777d2d716139ce7a35163b4daf114e40ced2e687eba84c910b270f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "de"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'time_limit' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/seconds> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6150769591331482"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object """The usage instructions for the **ppo** Agent playing **Huggy** are provided in the following steps:

1. If the environment is part of ML-Agents official environments, go to https://huggingface.co/unity
2. Step 1: Find your model_id: hugging-robot/ppo-Huggy
3. Step 2: Select your *.nn /*.onnx file
4. Click on Watch the agent play 👀

These instructions are provided in the context of using the model directly, which is mentioned in the related section "Uses > Direct Use"."""^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/DianaJin/sample/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/BAAI/bge-large-zh-v1.5> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.674284"^^xsd:dateTime ;
    ns1:object "Analyzes and learns from graph-structured data."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b47d8ed02d0fc1a7d72d5d61255296300a82f2caa55dd809c63448bfdd9b4284> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.322380"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1aa60aa9719223ac8750af1366d4a56166214022d0d069d1412225070d1275b9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6723964512348175"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5426523089408875"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.651570"^^xsd:dateTime ;
    ns1:object "Predicts the depth of objects in images for 3D scene understanding."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/40e5b840897abb6f44300acdb8df19e9ba787840ae3899b5cff54ee848bd4df6> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6044186651706696"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.450924"^^xsd:dateTime ;
    ns1:object "Making Large Language Models A Better Foundation For Dense Retrieval"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "bigscience-bloom-rail-1.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.321615"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.436648"^^xsd:dateTime ;
    ns1:object "{'name': 'Hongkun Yu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "uz"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "license:mit"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.438557"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2307.09288"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.294631"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/lambada"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/heidragon3045/rl_course_vizdoom_health_gathering_supreme> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "diffusers:FluxPipeline"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object """deepmind/aqua_rat - 'raw' subset

Additional information:
- 3 splits: train, test, validation"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.559137225151062"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ko"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.681960"^^xsd:dateTime ;
    ns1:object "Framework for computing dense vector representations of sentences and paragraphs using transformer models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e2cb5f7dba65387f6ecd56e7a642d33df8fca1197b2ac918cd629a6cd9b294b2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/d462b48c96b732d754a938aa86dbd16bfb7478ca5b0c1f1f006c611c112094e9> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: mit
datasets:
- kasnerz/logic2text
language:
- en
---

## Model description

This is a fine-tuned [t5-base](https://huggingface.co/t5-base) model for generating sentences from logical forms and basic table metadata. 
It is a part of table-to-text pipeline with content selection and logical reasoning, trained on [Logic2Text dataset](https://aclanthology.org/2020.findings-emnlp.190/).
The first pipeline step is done by [kategaranina/lt2t_content_selection](https://huggingface.co/kategaranina/lt2t_content_selection) model.
For relevant code, see [LT2T repository](https://github.com/kategerasimenko/LT2T) on GitHub.

Example of input:

```
Title: list of cities , towns and villages in vojvodina.
Header: settlement | cyrillic name other names | type | population ( 2011 ) | largest ethnic group ( 2002 ) | dominant religion ( 2002 ).
Logical form: and { only { filter_eq { all_rows ; largest ethnic group ( 2002 ) ; slovaks } } ; eq { hop { filter_eq { all_rows ; largest ethnic group ( 2002 ) ; slovaks } ; settlement } ; pivnice } }
```

Example of output:
```
pivnice is the only settlement in vojvodina with slovaks as the largest ethnic group .
```"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/61cce84de930f0da8c78ddef3203a2afac70cf5e46684f0407180738cd821965> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.45984162390232086"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6654990613460541"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/google/flan-t5-small/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.662410"^^xsd:dateTime ;
    ns1:object "Question Answering"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6fa5b295a0420d9a3cc819e672ebdd61720c48761f8c2960d28ff7f7655875be> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'sent' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/sent> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "zh"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/g_ids_features"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/g_ids_features> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/8e97617d5a4a866db41b3c71e04d726f4ec71cfcc1af9197f70f7ac9cbd7afe4> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.458250"^^xsd:dateTime ;
    ns1:object "{'name': 'Victor Schmidt', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "it"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object """ClassLabel column 'solutions' from the Hugging Face parquet file.
Labels:
UNKNOWN_LANGUAGE (0), PYTHON (1), CPP (2), PYTHON3 (3), JAVA (4)"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/table_cont> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4600670635700226"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.242895"^^xsd:dateTime ;
    ns1:object "Xinging"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f68885f104a68685936c980fdc14f386a9ccf26d5fa89b57ee217dbaf592e58a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'logic_str' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/logic_str> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.024364"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/black-forest-labs"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/97b8857097478874bd8e9cb141256c1acde4789374ce4d72be5580b0da08f403> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.453391"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "jw"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.686484"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5c6c7a9e81be05e126c2ff79f262747bcaa13dce4de3db78679e947f541d5911> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.446081"^^xsd:dateTime ;
    ns1:object "{'name': 'Todor Mihaylov', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/output_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/realwiz/noggles/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "nl"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5343883037567139"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5038922429084778"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6321336030960083"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "nn"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5799724459648132"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/7ad8435aa27d409e8692d8f6043742210150fe3cf420b9abaad32ffe8a63b7c7> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "arxiv:2210.11416"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.657026"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/427579e1091b3a9a3bf55b54c4167319ee1e7fd37d7a1389722fcb73d6a8901c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Split> ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.39687566459178925"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.653183"^^xsd:dateTime ;
    ns1:object "Image Segmentation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f4f5c02149ef4c63e1abfb237a7efd73b36b96243fa20ee9a3b83ab914689b18> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.39593929052352905"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "mk"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ko"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/268a99307b1b2fc93e098debb5a8f035395fe7cffbff2da188e80280cbc0aa3c> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.726100"^^xsd:dateTime ;
    ns1:object "venetis"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/54e305dde447795b80481ad971eaf23195cddc3f5d2846c9ede5cc64115e586e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/action> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.296516"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/quasc"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/83f6b13508bdbd7f513cbd6de7ef5170638d3e63612800f251838bd8e03c995e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/85c031d4978df58bad8b74228a432699b1fdeaea4c730871d5eb91de8d9a42ad> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.643114"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df2c9c7dc08f5514331c35b3bf3e4da58de6a14c0724dc40f90a3e588f9844dd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/url> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.453556"^^xsd:dateTime ;
    ns1:object "{'name': 'Clifton Poth', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized/options> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6614397466182709"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/difficulty> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6347010731697083"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7247576117515564"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The author of this content is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/kategaranina/lt2t_lf_to_text/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.647952"^^xsd:dateTime ;
    ns1:object "xlm-roberta"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/43625c04f736f13b1f357a0d9357ed3dbc8e216e352796b03fb0fa69aea1f93b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
extra_gated_heading: You need to share contact information with Meta to access this
  model
extra_gated_prompt: "### LLAMA 2 COMMUNITY LICENSE AGREEMENT\\n\\"Agreement\\" means\\
  \\ the terms and conditions for use, reproduction, distribution and  modification\\
  \\ of the Llama Materials set forth herein. \\n\\"Documentation\\" means the specifications,\\
  \\ manuals and documentation  accompanying Llama 2 distributed by Meta at https://ai.meta.com/resources/models-and-libraries/llama-downloads/.\\
  \\  \\n\\"Licensee\\" or \\"you\\" means you, or your employer or any other person or\\
  \\ entity (if you are entering into this Agreement on such person or entity's behalf),\\
  \\ of the age required under applicable laws, rules or regulations to provide legal\\
  \\ consent and that has legal authority to bind your employer or such other person\\
  \\ or  entity if you are  entering in this Agreement on their behalf. \\n\\"Llama 2\\"\\
  \\ means the foundational large language models and software and algorithms, including\\
  \\ machine-learning model code, trained model weights, inference-enabling code, training-enabling\\
  \\ code, fine-tuning enabling code and other  elements of the foregoing distributed\\
  \\ by Meta at ai.meta.com/resources/models-and-libraries/llama-downloads/.\\n\\"Llama\\
  \\ Materials\\" means, collectively, Meta's proprietary Llama 2 and documentation\\
  \\ (and any portion thereof) made available under this Agreement.\\n\\"Meta\\" or \\"\\
  we\\" means Meta Platforms Ireland Limited (if you are located in or, if you are\\
  \\ an entity, your principal place of business is in the EEA or Switzerland) and\\
  \\ Meta Platforms, Inc. (if you are located outside of the EEA or Switzerland). \\n\\
  \\nBy clicking \\"I Accept\\" below or by using or distributing any portion or element\\
  \\ of the Llama Materials, you agree to be bound by this Agreement.\\n1. License Rights\\
  \\ and Redistribution. \\na. Grant of Rights. You are granted a non-exclusive, worldwide,\\
  \\ non- transferable and royalty-free limited license under Meta's intellectual property\\
  \\ or  other rights owned by Meta embodied in the Llama Materials to use, reproduce,\\
  \\  distribute, copy, create derivative works of, and make modifications to the Llama\\
  \\  Materials.  \\nb. Redistribution and Use.\\ni. If you distribute or make the Llama\\
  \\ Materials, or any derivative works  thereof, available to a third party, you shall\\
  \\ provide a copy of this Agreement to such  third party. \\nii.  If you receive Llama\\
  \\ Materials, or any derivative works thereof, from  a Licensee as part of an integrated\\
  \\ end user product, then Section 2 of this  Agreement will not apply to you. \\n\\
  iii. You must retain in all copies of the Llama Materials that you  distribute the\\
  \\ following attribution notice within a \\"Notice\\" text file distributed as a  part\\
  \\ of such copies: \\"Llama 2 is licensed under the LLAMA 2 Community License,  Copyright\\
  \\ (c) Meta Platforms, Inc. All Rights Reserved.\\"\\niv. Your use of the Llama Materials\\
  \\ must comply with applicable laws  and regulations (including trade compliance\\
  \\ laws and regulations) and adhere to the  Acceptable Use Policy for the Llama Materials\\
  \\ (available at  https://ai.meta.com/llama/use-policy), which is hereby incorporated\\
  \\ by reference into  this Agreement.\\nv. You will not use the Llama Materials or\\
  \\ any output or results of the  Llama Materials to improve any other large language\\
  \\ model (excluding Llama 2 or  derivative works thereof).  \\n\\n2. Additional Commercial\\
  \\ Terms. If, on the Llama 2 version release date, the  monthly active users of the\\
  \\ products or services made available by or for Licensee,  or Licensee's affiliates,\\
  \\ is greater than 700 million monthly active users in the  preceding calendar month,\\
  \\ you must request a license from Meta, which Meta may  grant to you in its sole\\
  \\ discretion, and you are not authorized to exercise any of the  rights under this\\
  \\ Agreement unless or until Meta otherwise expressly grants you  such rights.\\n\\
  3. Disclaimer of Warranty. UNLESS REQUIRED BY APPLICABLE LAW, THE  LLAMA MATERIALS\\
  \\ AND ANY OUTPUT AND RESULTS THEREFROM ARE  PROVIDED ON AN \\"AS IS\\" BASIS, WITHOUT\\
  \\ WARRANTIES OF ANY KIND,  EITHER EXPRESS OR IMPLIED, INCLUDING, WITHOUT LIMITATION,\\
  \\ ANY  WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, OR  FITNESS FOR A\\
  \\ PARTICULAR PURPOSE. YOU ARE SOLELY RESPONSIBLE  FOR DETERMINING THE APPROPRIATENESS\\
  \\ OF USING OR REDISTRIBUTING  THE LLAMA MATERIALS AND ASSUME ANY RISKS ASSOCIATED\\
  \\ WITH YOUR  USE OF THE LLAMA MATERIALS AND ANY OUTPUT AND RESULTS.\\n4. Limitation\\
  \\ of Liability. IN NO EVENT WILL META OR ITS AFFILIATES BE  LIABLE UNDER ANY THEORY\\
  \\ OF LIABILITY, WHETHER IN CONTRACT, TORT,  NEGLIGENCE, PRODUCTS LIABILITY, OR OTHERWISE,\\
  \\ ARISING OUT OF THIS  AGREEMENT, FOR ANY LOST PROFITS OR ANY INDIRECT, SPECIAL,\\
  \\  CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR PUNITIVE DAMAGES, EVEN  IF META OR ITS\\
  \\ AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF  ANY OF THE FOREGOING.\\n\\n\\
  5. Intellectual Property.\\na. No trademark licenses are granted under this Agreement,\\
  \\ and in  connection with the Llama Materials, neither Meta nor Licensee may use\\
  \\ any name  or mark owned by or associated with the other or any of its affiliates,\\
  \\ except as  required for reasonable and customary use in describing and redistributing\\
  \\ the  Llama Materials.\\nb. Subject to Meta's ownership of Llama Materials and derivatives\\
  \\ made by or  for Meta, with respect to any derivative works and modifications of\\
  \\ the Llama  Materials that are made by you, as between you and Meta, you are and\\
  \\ will be the  owner of such derivative works and modifications.\\nc. If you institute\\
  \\ litigation or other proceedings against Meta or any entity  (including a cross-claim\\
  \\ or counterclaim in a lawsuit) alleging that the Llama  Materials or Llama 2 outputs\\
  \\ or results, or any portion of any of the foregoing,  constitutes infringement\\
  \\ of intellectual property or other rights owned or licensable  by you, then any\\
  \\ licenses granted to you under this Agreement shall terminate as of  the date such\\
  \\ litigation or claim is filed or instituted. You will indemnify and hold  harmless\\
  \\ Meta from and against any claim by any third party arising out of or related \\
  \\ to your use or distribution of the Llama Materials.\\n6. Term and Termination.\\
  \\ The term of this Agreement will commence upon your  acceptance of this Agreement\\
  \\ or access to the Llama Materials and will continue in  full force and effect until\\
  \\ terminated in accordance with the terms and conditions  herein. Meta may terminate\\
  \\ this Agreement if you are in breach of any term or  condition of this Agreement.\\
  \\ Upon termination of this Agreement, you shall delete  and cease use of the Llama\\
  \\ Materials. Sections 3, 4 and 7 shall survive the  termination of this Agreement.\\
  \\ \\n7. Governing Law and Jurisdiction. This Agreement will be governed and  construed\\
  \\ under the laws of the State of California without regard to choice of law  principles,\\
  \\ and the UN Convention on Contracts for the International Sale of Goods  does not\\
  \\ apply to this Agreement. The courts of California shall have exclusive  jurisdiction\\
  \\ of any dispute arising out of this Agreement. \\n### Llama 2 Acceptable Use Policy\\n\\
  Meta is committed to promoting safe and fair use of its tools and features, including\\
  \\ Llama 2. If you access or use Llama 2, you agree to this Acceptable Use Policy\\
  \\ (“Policy”). The most recent copy of this policy can be found at [ai.meta.com/llama/use-policy](http://ai.meta.com/llama/use-policy).\\n\\
  #### Prohibited Uses\\nWe want everyone to use Llama 2 safely and responsibly. You\\
  \\ agree you will not use, or allow others to use, Llama 2 to:\\n1. Violate the law\\
  \\ or others’ rights, including to:\\n      1. Engage in, promote, generate, contribute\\
  \\ to, encourage, plan, incite, or further illegal or unlawful activity or content,\\
  \\ such as: \\n          1. Violence or terrorism \\n          2. Exploitation or harm\\
  \\ to children, including the solicitation, creation, acquisition, or dissemination\\
  \\ of child exploitative content or failure to report Child Sexual Abuse Material\\n\\
  \\          3. Human trafficking, exploitation, and sexual violence\\n          4.\\
  \\ The illegal distribution of information or materials to minors, including obscene\\
  \\ materials, or failure to employ legally required age-gating in connection with\\
  \\ such information or materials.\\n          5. Sexual solicitation\\n          6.\\
  \\ Any other criminal activity\\n      2. Engage in, promote, incite, or facilitate\\
  \\ the harassment, abuse, threatening, or bullying of individuals or groups of individuals\\n\\
  \\      3. Engage in, promote, incite, or facilitate discrimination or other unlawful\\
  \\ or harmful conduct in the provision of employment, employment benefits, credit,\\
  \\ housing, other economic benefits, or other essential goods and services\\n    \\
  \\  4. Engage in the unauthorized or unlicensed practice of any profession including,\\
  \\ but not limited to, financial, legal, medical/health, or related professional\\
  \\ practices \\n      5. Collect, process, disclose, generate, or infer health, demographic,\\
  \\ or other sensitive personal or private information about individuals without rights\\
  \\ and consents required by applicable laws\\n      6. Engage in or facilitate any\\
  \\ action or generate any content that infringes, misappropriates, or otherwise violates\\
  \\ any third-party rights, including the outputs or results of any products or services\\
  \\ using the Llama 2 Materials\\n      7. Create, generate, or facilitate the creation\\
  \\ of malicious code, malware, computer viruses or do anything else that could disable,\\
  \\ overburden, interfere with or impair the proper working, integrity, operation\\
  \\ or appearance of a website or computer system \\n2. Engage in, promote, incite,\\
  \\ facilitate, or assist in the planning or development of activities that present\\
  \\ a risk of death or bodily harm to individuals, including use of Llama 2 related\\
  \\ to the following:\\n    1. Military, warfare, nuclear industries or applications,\\
  \\ espionage, use for materials or activities that are subject to the International\\
  \\ Traffic Arms Regulations (ITAR) maintained by the United States Department of\\
  \\ State\\n    2. Guns and illegal weapons (including weapon development)\\n    3.\\
  \\ Illegal drugs and regulated/controlled substances\\n    4. Operation of critical\\
  \\ infrastructure, transportation technologies, or heavy machinery\\n    5. Self-harm\\
  \\ or harm to others, including suicide, cutting, and eating disorders\\n    6. Any\\
  \\ content intended to incite or promote violence, abuse, or any infliction of bodily\\
  \\ harm to an individual\\n3. Intentionally deceive or mislead others, including use\\
  \\ of Llama 2 related to the following:\\n    1. Generating, promoting, or furthering\\
  \\ fraud or the creation or promotion of disinformation\\n    2. Generating, promoting,\\
  \\ or furthering defamatory content, including the creation of defamatory statements,\\
  \\ images, or other content\\n    3. Generating, promoting, or further distributing\\
  \\ spam\\n    4. Impersonating another individual without consent, authorization,\\
  \\ or legal right\\n    5. Representing that the use of Llama 2 or outputs are human-generated\\n\\
  \\    6. Generating or facilitating false online engagement, including fake reviews\\
  \\ and other means of fake online engagement \\n    4. Fail to appropriately disclose\\
  \\ to end users any known dangers of your AI system \\nPlease report any violation\\
  \\ of this Policy, software “bug,” or other problems that could lead to a violation\\
  \\ of this Policy through one of the following means: \\n    * Reporting issues with\\
  \\ the model: [github.com/facebookresearch/llama](http://github.com/facebookresearch/llama)\\n\\
  \\    * Reporting risky content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)\\n\\
  \\    * Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)\\
  \\ \\n    * Reporting violations of the Acceptable Use Policy or unlicensed uses of\\
  \\ Llama: [LlamaUseReport@meta.com](mailto:LlamaUseReport@meta.com)"
extra_gated_fields:
  First Name: text
  Last Name: text
  Date of birth: date_picker
  Country: country
  Affiliation: text
  geo: ip_location
  ? By clicking Submit below I accept the terms of the license and acknowledge that
    the information I provide will be collected stored processed and shared in accordance
    with the Meta Privacy Policy
  : checkbox
extra_gated_description: The information you provide will be collected, stored, processed
  and shared in accordance with the [Meta Privacy Policy](https://www.facebook.com/privacy/policy/).
extra_gated_button_content: Submit
language:
- en
pipeline_tag: text-generation
tags:
- facebook
- meta
- pytorch
- llama
- llama-2
license: llama2
---
# **Llama 2**
Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.

## Model Details
*Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the [website](https://ai.meta.com/resources/models-and-libraries/llama-downloads/) and accept our License before requesting access here.*

Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.

**Model Developers** Meta

**Variations** Llama 2 comes in a range of parameter sizes — 7B, 13B, and 70B — as well as pretrained and fine-tuned variations.

**Input** Models input text only.

**Output** Models generate text only.

**Model Architecture** Llama 2 is an auto-regressive language model that uses an optimized transformer architecture. The tuned versions use supervised fine-tuning (SFT) and reinforcement learning with human feedback (RLHF) to align to human preferences for helpfulness and safety.


||Training Data|Params|Content Length|GQA|Tokens|LR|
|---|---|---|---|---|---|---|
|Llama 2|*A new mix of publicly available online data*|7B|4k|&#10007;|2.0T|3.0 x 10<sup>-4</sup>|
|Llama 2|*A new mix of publicly available online data*|13B|4k|&#10007;|2.0T|3.0 x 10<sup>-4</sup>|
|Llama 2|*A new mix of publicly available online data*|70B|4k|&#10004;|2.0T|1.5 x 10<sup>-4</sup>|

*Llama 2 family of models.* Token counts refer to pretraining data only. All models are trained with a global batch-size of 4M tokens. Bigger models -  70B -- use Grouped-Query Attention (GQA) for improved inference scalability.

**Model Dates** Llama 2 was trained between January 2023 and July 2023.

**Status** This is a static model trained on an offline dataset. Future versions of the tuned models will be released as we improve model safety with community feedback.

**License** A custom commercial license is available at: [https://ai.meta.com/resources/models-and-libraries/llama-downloads/](https://ai.meta.com/resources/models-and-libraries/llama-downloads/)

**Research Paper** ["Llama-2: Open Foundation and Fine-tuned Chat Models"](arxiv.org/abs/2307.09288)

## Intended Use
**Intended Use Cases** Llama 2 is intended for commercial and research use in English. Tuned models are intended for assistant-like chat, whereas pretrained models can be adapted for a variety of natural language generation tasks.

To get the expected features and performance for the chat versions, a specific formatting needs to be followed, including the `INST` and `<<SYS>>` tags, `BOS` and `EOS` tokens, and the whitespaces and breaklines in between (we recommend calling `strip()` on inputs to avoid double-spaces). See our reference code in github for details: [`chat_completion`](https://github.com/facebookresearch/llama/blob/main/llama/generation.py#L212).

**Out-of-scope Uses** Use in any manner that violates applicable laws or regulations (including trade compliance laws).Use in languages other than English. Use in any other way that is prohibited by the Acceptable Use Policy and Licensing Agreement for Llama 2.

## Hardware and Software
**Training Factors** We used custom training libraries, Meta's Research Super Cluster, and production clusters for pretraining. Fine-tuning, annotation, and evaluation were also performed on third-party cloud compute.

**Carbon Footprint** Pretraining utilized a cumulative 3.3M GPU hours of computation on hardware of type A100-80GB (TDP of 350-400W). Estimated total emissions were 539 tCO2eq, 100% of which were offset by Meta’s sustainability program.

||Time (GPU hours)|Power Consumption (W)|Carbon Emitted(tCO<sub>2</sub>eq)|
|---|---|---|---|
|Llama 2 7B|184320|400|31.22|
|Llama 2 13B|368640|400|62.44|
|Llama 2 70B|1720320|400|291.42|
|Total|3311616||539.00|

**CO<sub>2</sub> emissions during pretraining.** Time: total GPU time required for training each model. Power Consumption: peak power capacity per GPU device for the GPUs used adjusted for power usage efficiency. 100% of the emissions are directly offset by Meta's sustainability program, and because we are openly releasing these models, the pretraining costs do not need to be incurred by others.

## Training Data
**Overview** Llama 2 was pretrained on 2 trillion tokens of data from publicly available sources. The fine-tuning data includes publicly available instruction datasets, as well as over one million new human-annotated examples. Neither the pretraining nor the fine-tuning datasets include Meta user data.

**Data Freshness** The pretraining data has a cutoff of September 2022, but some tuning data is more recent, up to July 2023.

## Evaluation Results

In this section, we report the results for the Llama 1 and Llama 2 models on standard academic benchmarks.For all the evaluations, we use our internal evaluations library.

|Model|Size|Code|Commonsense Reasoning|World Knowledge|Reading Comprehension|Math|MMLU|BBH|AGI Eval|
|---|---|---|---|---|---|---|---|---|---|
|Llama 1|7B|14.1|60.8|46.2|58.5|6.95|35.1|30.3|23.9|
|Llama 1|13B|18.9|66.1|52.6|62.3|10.9|46.9|37.0|33.9|
|Llama 1|33B|26.0|70.0|58.4|67.6|21.4|57.8|39.8|41.7|
|Llama 1|65B|30.7|70.7|60.5|68.6|30.8|63.4|43.5|47.6|
|Llama 2|7B|16.8|63.9|48.9|61.3|14.6|45.3|32.6|29.3|
|Llama 2|13B|24.5|66.9|55.4|65.8|28.7|54.8|39.4|39.1|
|Llama 2|70B|**37.5**|**71.9**|**63.6**|**69.4**|**35.2**|**68.9**|**51.2**|**54.2**|

**Overall performance on grouped academic benchmarks.** *Code:* We report the average pass@1 scores of our models on HumanEval and MBPP. *Commonsense Reasoning:* We report the average of PIQA, SIQA, HellaSwag, WinoGrande, ARC easy and challenge, OpenBookQA, and CommonsenseQA. We report 7-shot results for CommonSenseQA and 0-shot results for all other benchmarks. *World Knowledge:* We evaluate the 5-shot performance on NaturalQuestions and TriviaQA and report the average. *Reading Comprehension:* For reading comprehension, we report the 0-shot average on SQuAD, QuAC, and BoolQ. *MATH:* We report the average of the GSM8K (8 shot) and MATH (4 shot) benchmarks at top 1.

|||TruthfulQA|Toxigen|
|---|---|---|---|
|Llama 1|7B|27.42|23.00|
|Llama 1|13B|41.74|23.08|
|Llama 1|33B|44.19|22.57|
|Llama 1|65B|48.71|21.77|
|Llama 2|7B|33.29|**21.25**|
|Llama 2|13B|41.86|26.10|
|Llama 2|70B|**50.18**|24.60|

**Evaluation of pretrained LLMs on automatic safety benchmarks.** For TruthfulQA, we present the percentage of generations that are both truthful and informative (the higher the better). For ToxiGen, we present the percentage of toxic generations (the smaller the better).


|||TruthfulQA|Toxigen|
|---|---|---|---|
|Llama-2-Chat|7B|57.04|**0.00**|
|Llama-2-Chat|13B|62.18|**0.00**|
|Llama-2-Chat|70B|**64.14**|0.01|

**Evaluation of fine-tuned LLMs on different safety datasets.** Same metric definitions as above.

## Ethical Considerations and Limitations
Llama 2 is a new technology that carries risks with use. Testing conducted to date has been in English, and has not covered, nor could it cover all scenarios. For these reasons, as with all LLMs, Llama 2’s potential outputs cannot be predicted in advance, and the model may in some instances produce inaccurate, biased or other objectionable responses to user prompts. Therefore, before deploying any applications of Llama 2, developers should perform safety testing and tuning tailored to their specific applications of the model.

Please see the Responsible Use Guide available at [https://ai.meta.com/llama/responsible-use-guide/](https://ai.meta.com/llama/responsible-use-guide)

## Reporting Issues
Please report any software “bug,” or other problems with the models through one of the following means:
- Reporting issues with the model: [github.com/facebookresearch/llama](http://github.com/facebookresearch/llama)
- Reporting problematic content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)
- Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)

## Llama Model Index
|Model|Llama2|Llama2-hf|Llama2-chat|Llama2-chat-hf|
|---|---|---|---|---|
|7B| [Link](https://huggingface.co/meta-llama/Llama-2-7b) | [Link](https://huggingface.co/meta-llama/Llama-2-7b-hf) | [Link](https://huggingface.co/meta-llama/Llama-2-7b-chat) | [Link](https://huggingface.co/meta-llama/Llama-2-7b-chat-hf)|
|13B| [Link](https://huggingface.co/meta-llama/Llama-2-13b) | [Link](https://huggingface.co/meta-llama/Llama-2-13b-hf) | [Link](https://huggingface.co/meta-llama/Llama-2-13b-chat) | [Link](https://huggingface.co/meta-llama/Llama-2-13b-chat-hf)|
|70B| [Link](https://huggingface.co/meta-llama/Llama-2-70b) | [Link](https://huggingface.co/meta-llama/Llama-2-70b-hf) | [Link](https://huggingface.co/meta-llama/Llama-2-70b-chat) | [Link](https://huggingface.co/meta-llama/Llama-2-70b-chat-hf)|"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.384301"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/968ecedd3c85e02e2a1570cdb819daefb47aff2abc7e1d647a5f0ef48f5ceb3d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2025-01-13T13:57:38+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "flan-t5-small"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5250837206840515"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.656802"^^xsd:dateTime ;
    ns1:object "Generates video content based on textual descriptions."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cba5458c023bd0e333fefb47511914b963716a71b0356b435370871727585038> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/logic_str> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6373358964920044"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The software requirements for the Mistral-7B-Instruct-v0.2 model are not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4771120101213455"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.691148"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/316fd1b6c56f67729f7e0880d91953804a9af869ce76b2906f26f3d534937931> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/heidragon3045/rl_course_vizdoom_health_gathering_supreme/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "bge-large-zh-v1.5"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.686243"^^xsd:dateTime ;
    ns1:object "JavaScript library for running transformer models in browsers and Node.js environments."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5670ef7e87a4fbee3fa95024561f672fca6cc6a159a62e20ed73b98d267a72bd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6683898270130157"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The model and its derivatives may not be used"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.701199"^^xsd:dateTime ;
    ns1:object "pythae"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ee41d767ffa75d0037ac340fa59164645b363ea8891e2a3f815c644b81ea9fbd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/2529572666d8ae917752f418f0b008b820cf821a3ba355927ca159454740dce7> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "am"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.932190"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/11ee21b926795a2b7d2cb2d939044519ace34ac86e6b6a59a47dcb4bba5eb7a4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.355707"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/MLModel> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/01ce031a92b6a44f90635a9aa473acc02c379a53ef7b0a0d8f88b6027a9ad64e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "mt"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6495764255523682"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.330772"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.462493"^^xsd:dateTime ;
    ns1:object "{'name': 'Thibaut Lavril', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.832974"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5853b54d1c6d56985304fe7287a88724833916e1a98d9761de36a0841ffafb30> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.660451"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85f0e69a70ce025a206d6ddbf78d989a3cabbdae215f2045df9b67b21a9d6780> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized/split> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6365277767181396"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6412810385227203"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The author of this content is the Hugging Face team."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.460649"^^xsd:dateTime ;
    ns1:object "{'name': 'Chris Bamford', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/socratic/answer> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "kk"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/domain> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.333848"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7469770908355713"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5871609449386597"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.357680"^^xsd:dateTime ;
    ns1:object "automatic speech recognition"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/emersoftware/tulio-chilean-spanish-bert-msmarco-qa-es-mnrl-mn/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.349537"^^xsd:dateTime ;
    ns1:object "art"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ba386c19594b5e2c45538f0ad668a14203edcbe442437836169ed56795dd7abb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "mit"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4a958b2cddc6f3096d3a4e912c3bf694e8c132edcdb79366c6a34dff81cbbc7b> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "UpNDown-v5-cleanba_ppo_envpool_machado_atari_wrapper-seed1"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.439721"^^xsd:dateTime ;
    ns1:object "{'name': 'Kevin Stone', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: apache-2.0
tags:
- generated_from_trainer
datasets:
- farleyknight/big_patent_5_percent
metrics:
- rouge
model-index:
- name: patent-summarization-fb-bart-base-2022-09-20
  results:
  - task:
      name: Summarization
      type: summarization
    dataset:
      name: farleyknight/big_patent_5_percent
      type: farleyknight/big_patent_5_percent
      config: all
      split: train
      args: all
    metrics:
    - name: Rouge1
      type: rouge
      value: 39.4401
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# patent-summarization-fb-bart-base-2022-09-20

This model is a fine-tuned version of [facebook/bart-base](https://huggingface.co/facebook/bart-base) on the farleyknight/big_patent_5_percent dataset.
It achieves the following results on the evaluation set:
- Loss: 2.4088
- Rouge1: 39.4401
- Rouge2: 14.2445
- Rougel: 26.2701
- Rougelsum: 33.7535
- Gen Len: 78.9702

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 5e-05
- train_batch_size: 1
- eval_batch_size: 1
- seed: 42
- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08
- lr_scheduler_type: linear
- num_epochs: 1.0

### Training results

| Training Loss | Epoch | Step  | Validation Loss | Rouge1  | Rouge2 | Rougel  | Rougelsum | Gen Len |
|:-------------:|:-----:|:-----:|:---------------:|:-------:|:------:|:-------:|:---------:|:-------:|
| 3.0567        | 0.08  | 5000  | 2.8864          | 18.9387 | 7.1014 | 15.4506 | 16.8377   | 19.9979 |
| 2.9285        | 0.17  | 10000 | 2.7800          | 19.8983 | 7.3258 | 16.0823 | 17.7019   | 20.0    |
| 2.9252        | 0.25  | 15000 | 2.7080          | 19.6623 | 7.4627 | 16.0153 | 17.4485   | 20.0    |
| 2.8123        | 0.33  | 20000 | 2.6585          | 19.7414 | 7.5251 | 15.8166 | 17.4668   | 20.0    |
| 2.7117        | 0.41  | 25000 | 2.6070          | 19.7661 | 7.7193 | 16.2795 | 17.7884   | 20.0    |
| 2.7131        | 0.5   | 30000 | 2.5616          | 19.6706 | 7.4229 | 15.7998 | 17.4324   | 20.0    |
| 2.6373        | 0.58  | 35000 | 2.5250          | 20.0155 | 7.6811 | 16.1231 | 17.7578   | 20.0    |
| 2.6785        | 0.66  | 40000 | 2.4977          | 20.0974 | 7.9578 | 16.543  | 18.0242   | 20.0    |
| 2.6265        | 0.75  | 45000 | 2.4701          | 19.994  | 7.9114 | 16.3501 | 17.8786   | 20.0    |
| 2.5833        | 0.83  | 50000 | 2.4441          | 19.9981 | 7.934  | 16.3033 | 17.8674   | 20.0    |
| 2.5579        | 0.91  | 55000 | 2.4251          | 20.0544 | 7.8966 | 16.3889 | 17.9491   | 20.0    |
| 2.5242        | 0.99  | 60000 | 2.4097          | 20.1093 | 8.0572 | 16.4935 | 17.9823   | 20.0    |


### Framework versions

- Transformers 4.23.0.dev0
- Pytorch 1.12.0
- Datasets 2.4.0
- Tokenizers 0.12.1
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "bo"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.431867"^^xsd:dateTime ;
    ns1:object "{'name': 'Hyung Won Chung', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.423799"^^xsd:dateTime ;
    ns1:object "bart"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ed9cec8e6a5fdfa104ed655c6382fe3917910706bf2c99a2c70bed93e6feeee5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9773f8d647166503d14c7a05030b47d6b1610f17bdd55e8c98cb4fc2b13a3379> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6119926273822784"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the funding in the given text. Therefore, the answer is \"Information not found\"."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.695549"^^xsd:dateTime ;
    ns1:object "Toolkit for optimizing and deploying deep learning models across Intel hardware."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5931df18dd0fa4a7991df9c03e52fe5074eee570f6c3e7b480947ec85d10c3a1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "my"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.649835079908371"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.646772"^^xsd:dateTime ;
    ns1:object "bert"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0c3d01ed44dc2940ae38707146a02c16bc80cc8637ce48ac5f3125b7c6fb2982> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/AdapterHub/bert-base-uncased-pf-multirc> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5961770415306091"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/action> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5698849260807037"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2025-01-13T13:57:35+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2022-03-02T23:29:05+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.678634"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f83566aa690a65900e25f19b29d427ae3a9b752766d6d3892299a866feca3edd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7119956016540527"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.942974"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/863d9e15edc2c98657749abae884b48544051490f76ea0e913adf85a3f2727a5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.597102"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04b73aa26b48d6f1e64d5819ec986a901d3b49c7f37b35f4798db992ac65c200> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.458933"^^xsd:dateTime ;
    ns1:object "Mistral 7B"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'solutions' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.649266"^^xsd:dateTime ;
    ns1:object "Models created by Mistral, a French artificial intelligence startup, headquartered in Paris. It specializes in open-weight large language models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ddb15bfa0ef843723bc4c8a81ab1d826b1fc4ff36ed13faf8f8f3841261978b8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.701862"^^xsd:dateTime ;
    ns1:object "jslin09"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/268a99307b1b2fc93e098debb5a8f035395fe7cffbff2da188e80280cbc0aa3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4865180552005768"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.602983295917511"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.398638"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4e5443728f51b2323bf3a1c4a6a6d8612484cbca0a8b0beeb5fb0258d1df5196> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.46148908138275146"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/83f6b13508bdbd7f513cbd6de7ef5170638d3e63612800f251838bd8e03c995e> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.430984"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2210.11416"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.349854"^^xsd:dateTime ;
    ns1:object "text-to-image"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f57740f97820ddb55f90898c07a60a736e9a9030d5eac125af5c595ad0638c8f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.668814"^^xsd:dateTime ;
    ns1:object "Automatic Speech Recognition"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.443948"^^xsd:dateTime ;
    ns1:object "{'name': 'Marcin Kardas', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object """farleyknight/big_patent_5_percent - 'default' subset

Additional information:
- 3 splits: train, validation, test"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/black-forest-labs/FLUX.1-dev-onnx> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/google/flan-t5-small/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.596482"^^xsd:dateTime ;
    ns1:object "cleanrl"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/46abf5271eb0681e45ae7ae2a06914f431ea2c4d89b55ddc999bafc4a0a5df75> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.406125"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/farleyknight/big_patent_5_percent"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85c031d4978df58bad8b74228a432699b1fdeaea4c730871d5eb91de8d9a42ad> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5451635718345642"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The author of this content is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.658525"^^xsd:dateTime ;
    ns1:object "Detects objects in categories not seen during training."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ab2624f913f0d530408cbfa25c29a33523a1a481ba19c3d46f91a6fac4e63844> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "eu"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "gl"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/input> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ba"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.642289"^^xsd:dateTime ;
    ns1:object "Models with published evaluation metrics, benchmarks, or test results available for review."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6bdae8c542a61819acfd0767eb5e55cafba29955aaefd1261c204618a4d3a487> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.890048"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87e3b3dad52adc5c12d2dc386ce41da75f306c4b73d2d497aa9c5f22c6de6e87> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "bs"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.649484"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/49bf7b39c8a2a4cb84ab43bc3c320de6e0c1da1253ebf022a5d0a84737581119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "fi"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.432672"^^xsd:dateTime ;
    ns1:object "{'name': 'William Fedus', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6748426258563995"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5963304340839386"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The maintainer of the model is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.662014"^^xsd:dateTime ;
    ns1:object "Answers questions based on tabular data."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/017f19456e7a37fe3c1ad51165020b62cc12497d5d20651e073e3520a5099eb9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5128510296344757"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.382619"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "license:cc0-1.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "yo"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.292707"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/svakulenk0/qrecc"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4a958b2cddc6f3096d3a4e912c3bf694e8c132edcdb79366c6a34dff81cbbc7b> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.684040"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9db08d1a554609ae7c645781f30f4c335c5142d3c63fde5964e29f8a404c9566> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/JabrilJacobs/ppo-Pyramids/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.810122"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0b6c077d0e7e512fe4a09f8d65944ef93c47c0c822ba512f9d69a0205fbc4e04> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.446559"^^xsd:dateTime ;
    ns1:object "{'name': 'Yixin Nie', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.692315"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/12855f71ca9ab0f85c6609885b9e912174c81e608da47e6448d968f757f5ab44> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.258264"^^xsd:dateTime ;
    ns1:object "llama"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5334924757480621"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.3404039442539215"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.373594"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/07456871ec04ff7e102a14a63ee4f77775baadaf5e404b74e2ab827a14335259> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6387893557548523"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.437603"^^xsd:dateTime ;
    ns1:object "{'name': 'Denny Zhou', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.670550"^^xsd:dateTime ;
    ns1:object "Voice Activity Detection"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1759562ba5af131b8ba1cdb4e06a2cee5c1ebff35971610e6ef2eb585b413ef7> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "main/split"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.459119"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2310.06825"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/2cd4674539f52a4c1a66b7cdd0a260e2f7f883d39de352d2bcbd28828386123c> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.644674"^^xsd:dateTime ;
    ns1:object "Models created by merging multiple other models, often to combine their strengths or capabilities."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6726f6435b32ab359d8c48bd5f24d3180c4c1772a769d50d3b4c8cf8f0ecd46> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.694612"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ebbad1761fb8870fe41c968d83d4055b2799265db268338f3fa38c3849f7932a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.60605588555336"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-11-30T05:06:05+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.681030"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/293ad034f899dc681b5be10c715f25c59fa7f5261f229b66d796246e10927354> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.646197"^^xsd:dateTime ;
    ns1:object "Mixture of Experts"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/35d7d276230081bdfd86d06ca958126011d6a7e381452a488c2bfa8fcc512fdb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.463779"^^xsd:dateTime ;
    ns1:object """Long context compression is a critical research problem due to its
significance in reducing the high computational and memory costs associated
with LLMs. In this paper, we propose Activation Beacon, a plug-in module for
transformer-based LLMs that targets effective, efficient, and flexible
compression of long contexts. To achieve this, our method introduces the
following technical designs. 1) We directly compress the activations (i.e. keys
and values at every layer), rather than leveraging soft prompts to relay
information (which constitute a major bottleneck to encapsulate the complex
information within long contexts). 2) We tailor the compression workflow, where
each fine-grained input unit is progressively compressed, enabling high-quality
compression and efficient computation during both training and inference. 3) We
train the model through compression-based auto-regression, making full use of
plain texts and instructional data to optimize the model's compression
performance. 4) During training, we randomly sample a compression ratio at each
step, teaching the model to support a wide range of compression configurations.
Extensive evaluations are conducted on various long-context tasks whose lengths
(e.g., 128K) may far exceed the maximum training length (20K), such as document
understanding, few-shot learning, and Needle-in-a-Haystack. Whilst existing
methods struggle to handle these challenging tasks, Activation Beacon maintains
a comparable performance to the uncompressed baseline across various scenarios,
achieving a 2x acceleration in inference time and an 8x reduction of memory
costs for KV cache. Our data, model, and code have been released at
\\url{https://github.com/FlagOpen/FlagEmbedding/}."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "[{\"tokenized_splits/split_name\":\"train\"},{\"tokenized_splits/split_name\":\"test\"},{\"tokenized_splits/split_name\":\"validation\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.39328405261039734"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.428630"^^xsd:dateTime ;
    ns1:object "LM-Cocktail: Resilient Tuning of Language Models via Model Merging"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/solutions/solution"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/sircesoc/dqn-SpaceInvadersNoFrameskip-v4/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9c03090b68b1e45d6bebe9b9d1ea103b6a4c064ceb71f16f08a5ae59d9bac70e> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/meta-llama/Llama-2-7b-hf> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5415278226137161"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/fadbdd40ae3e4d21fb8044995368c36935104a0e589c0bb691d566a182b91295> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'action' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/action> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/logic_str"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/logic_str> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2022-09-26T06:50:46+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/black-forest-labs/FLUX.1-dev/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-08-08T06:30:58+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/seconds> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:esnli"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.441581"^^xsd:dateTime ;
    ns1:object "{'name': 'Moya Chen', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4931134730577469"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4a958b2cddc6f3096d3a4e912c3bf694e8c132edcdb79366c6a34dff81cbbc7b> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.331780"^^xsd:dateTime ;
    ns1:object "CyberHarem/chokai_azurlane"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fadbdd40ae3e4d21fb8044995368c36935104a0e589c0bb691d566a182b91295> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.629812"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/345eaa1fa623453840cdf3f6f07ec58414c463eee27c8faabf6a00b60d107b7e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "eu"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6738087236881256"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6130543947219849"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.641526"^^xsd:dateTime ;
    ns1:object "text-embedding-inference"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/86f52aa6369c70ec009cd27198c0d2e52782b473507c01a7426d4c1bf4185e05> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6328657269477844"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-08-08T06:32:51+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/logic"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/logic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ht"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "cc-by-nc-4.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sn"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.258746"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/97a327fc7cf14c750f068bdf3aab8cf61c95e2b04079bd1772d37c385f2b1088> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.49961838126182556"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/sircesoc/dqn-SpaceInvadersNoFrameskip-v4> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "raw_splits"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.335472"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/907291d3b7300a7e84345915ff883a4d8615166ada0751e1be974994397ea77a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/annotation> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.677828"^^xsd:dateTime ;
    ns1:object "Visualization toolkit for machine learning experiments that helps track metrics, visualize graphs, and explore embeddings."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.651906"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5f8c97c4aaca5a8c6afac1954a68be2dcb40698e64871f37e5fe5dc5849a3aab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sk"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.38987912237644196"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6634704768657684"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-12-02T17:17:08+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.44018901884555817"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The distribution of the model can be found in the Files & versions tab."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base.en/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.647207"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bc69543009040d6e8dba73b201af25ed291f7933acca2056091eb5f643c4f919> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Split> ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5075085014104843"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5345048308372498"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6043282747268677"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.666309"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a464d85abf29c8b2f8dc299e9fe390a547c8450e42b7ab0ccaac88fdcaeaaa84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.669947"^^xsd:dateTime ;
    ns1:object "Audio Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b9cbedab515a4ba3d4c78d2aaebae3eaaa730c9bfc49212dad2910d0f2c63595> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ln"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.698877"^^xsd:dateTime ;
    ns1:object "SpanMarker"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/119bd2aa6d51fb076ddf89b0c5c2536f1550ff5bf549b11a6c834340b0979a14> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.293029"^^xsd:dateTime ;
    ns1:object "taskmaster2"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4a958b2cddc6f3096d3a4e912c3bf694e8c132edcdb79366c6a34dff81cbbc7b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "The name of the split."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.663599"^^xsd:dateTime ;
    ns1:object "Translation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dd477ce37bc2c08950a1d845aa243dff8c0e03de15cc42b9b35295d514538a84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.680212"^^xsd:dateTime ;
    ns1:object "Open Neural Network Exchange format that enables interoperability between different ML frameworks."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4e5443728f51b2323bf3a1c4a6a6d8612484cbca0a8b0beeb5fb0258d1df5196> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.974766"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dabb9d310d39a47f81f009cd476a41773667de14be41c930213432a06ad59fb0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "chokai_azurlane"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4018857628107071"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the model are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.468558"^^xsd:dateTime ;
    ns1:object "2022-12-06"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.384680"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/danmorris427"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/968ecedd3c85e02e2a1570cdb819daefb47aff2abc7e1d647a5f0ef48f5ceb3d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.519482433795929"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ecd7f8f73c76e2813d124a5830035419d55e0e60410eb6b073177559f7238d9c> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.659335"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fd4e2f28de7e36539eda0f2e74a9e9b30f10d77fee3b927dc3aa5419c43369da> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.666485"^^xsd:dateTime ;
    ns1:object "Fill Mask"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a464d85abf29c8b2f8dc299e9fe390a547c8450e42b7ab0ccaac88fdcaeaaa84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.701590"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/145a1db14402ffd2d346a7bf50e3e9e8c75169383a079480e9ba655e5e2fab8a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.697280"^^xsd:dateTime ;
    ns1:object "PyTorch-based audio source separation toolkit for researchers."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/771e059c7890ae196a3227d36771c27f019638d33a819ca19bef2ae302b92b44> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4187445640563965"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4824877679347992"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2025-01-18T01:59:38+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.651739"^^xsd:dateTime ;
    ns1:object "feature extraction"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/746e796ec31ad9ad2b517555a4e91b2e3dfff187021fd0255aae50476624430d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "license:other"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.672802"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2f28cc27d9dac219caa56a5425741f7391153065f1558fe7418d6ccc1c598fb4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4911504238843918"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.44393695890903473"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default_splits"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2024-01-22T17:55:08+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Organization ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/44d2e9d41b9d9f9819feb864a1a07b499ce696259552757d8bcdf74cfc53f4e7> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.433633"^^xsd:dateTime ;
    ns1:object "{'name': 'Shixiang Shane Gu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7172871530056"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5887386798858643"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2021-11-24T16:24:33+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.239441"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/meta-llama/Llama-2-7b-hf> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/35ddc796a6d136e9bf8810f1907a6a31657c5fb80bef078ab577c5edc3f59cc0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4752250015735626"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/cf_rating> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/abstract> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "be"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6947119534015656"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7267585098743439"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5728304982185364"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "license:apache-2.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.690333"^^xsd:dateTime ;
    ns1:object "Memory-safe, high-performance language used for building efficient ML systems and infrastructure."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bc53f85f6e664d1c6ece992a9d80b2e0705d1b3c75028563adb2ed9f36aedec9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7218855023384094"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.696129"^^xsd:dateTime ;
    ns1:object "Sequence modeling toolkit for training custom models for translation, summarization, and other text generation tasks."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4acb0244517b271c7719eadb638a9049f7dfa43a14bf6eb119d83c2dbc6d856f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "license:apache-2.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/socratic_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/key> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.424072"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-09-02T23:52:21+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0b6c077d0e7e512fe4a09f8d65944ef93c47c0c822ba512f9d69a0205fbc4e04> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "whisper-base"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.571696937084198"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/wiki> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.669537"^^xsd:dateTime ;
    ns1:object "Transforms audio signals from one form to another."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21a4b3b0fe861021548d89e241eb815b3c147c6d12ec9eade6925be45bc78650> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.461666"^^xsd:dateTime ;
    ns1:object "{'name': 'Lucile Saulnier', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6057511270046234"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5041865110397339"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.440210"^^xsd:dateTime ;
    ns1:object "{'name': 'Yasmine Babaei', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:deepmind/code_contests"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object """deepmind/aqua_rat - 'tokenized' subset

Additional information:
- 3 splits: train, test, validation"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.459477"^^xsd:dateTime ;
    ns1:object "2023-10-10"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6707607507705688"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The information provided does not contain the name of the contributor to the CreativeWork."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.457746"^^xsd:dateTime ;
    ns1:object "cs.LG"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-09-12T05:22:11+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/thanhduycao/wav2vec2-base-demo-aug"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.795397"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/641cbecd8514780fd9d4a828b7583a3f538308d77bf6aa47fcff1594d0a5d746> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'correct' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/g_ids_features> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/04151ef09fe56a2be18a7d842066720d6e7cee10ed5bf1a3363193444decd94d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.641946"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6bdae8c542a61819acfd0767eb5e55cafba29955aaefd1261c204618a4d3a487> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.667875"^^xsd:dateTime ;
    ns1:object "sentence-transformers"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e2cb5f7dba65387f6ecd56e7a642d33df8fca1197b2ac918cd629a6cd9b294b2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/solutions/solution> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.689760"^^xsd:dateTime ;
    ns1:object "Toolkit for building, training, and fine-tuning GPU-accelerated conversational AI models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6b75cb265aea0eff37651595203eec38a2a621d81df99e4cfcd5f30cef590384> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/meta-llama/Llama-2-7b-hf/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "oc"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4e5443728f51b2323bf3a1c4a6a6d8612484cbca0a8b0beeb5fb0258d1df5196> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6450903415679932"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.296186"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/83f6b13508bdbd7f513cbd6de7ef5170638d3e63612800f251838bd8e03c995e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.455485"^^xsd:dateTime ;
    ns1:object "cs.IR"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/759dcfce11b186065b46fb94fef1c569da9001c123861ba72ba0708e554bd6c4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.762905"^^xsd:dateTime ;
    ns1:object "sample-factory"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/15ceeb8703c6ba669411911c62acbbac38f4d1235e8ac6118537ac1e6d75ae84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/g_ids> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4010638892650604"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The validated On in the given text is \"Dataset used for validating the model.\""^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/293ad034f899dc681b5be10c715f25c59fa7f5261f229b66d796246e10927354> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.762736"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/15ceeb8703c6ba669411911c62acbbac38f4d1235e8ac6118537ac1e6d75ae84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.662828"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79765e8db24271bde7a56b897b0b6c389d5be642563652aae56b6253290a801e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6463905274868011"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6979182958602905"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.651710718870163"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/input> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.463998"^^xsd:dateTime ;
    ns1:object "2024-01-07"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "Column 'abstract' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/abstract> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/memory_limit_bytes> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.697887"^^xsd:dateTime ;
    ns1:object "Python NLP library for accurate multilingual text analysis, including tokenization, POS tagging, and dependency parsing."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7daea98679eae3b5819f476833cada39b566629edb49ee1f55db0016e8ecf118> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6189926266670227"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "da"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6935215592384338"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/594a6f3cf66106516dc4e80f44dbe528cdcf0fb397d75a65d1b3b2a81dfc0f92> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5189442932605743"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5699160397052765"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/venetis/bert-base-uncased-finetuned-3d-sentiment/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "base_model:adapter:black-forest-labs/FLUX.1-dev"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2024-05-05T06:37:06+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sq"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.452257"^^xsd:dateTime ;
    ns1:object "{'name': 'Yingxia Shao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "split_name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.242715"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f68885f104a68685936c980fdc14f386a9ccf26d5fa89b57ee217dbaf592e58a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2025-02-07T17:17:17+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-08-06T05:05:42+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.466253"^^xsd:dateTime ;
    ns1:object "2023-10-11"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.846764"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.690170"^^xsd:dateTime ;
    ns1:object "Rust"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bc53f85f6e664d1c6ece992a9d80b2e0705d1b3c75028563adb2ed9f36aedec9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "pl"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.462001"^^xsd:dateTime ;
    ns1:object "{'name': 'Marie-Anne Lachaux', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/farleyknight/patent-summarization-fb-bart-base-2022-09-20> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5288636088371277"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5084bd7d1db13fba7c75464ccc31553c091b418df6b730d960b1d807a5d133db> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.620737"^^xsd:dateTime ;
    ns1:object "adapter-transformers"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2eed015d9e895e8b60342313a6cfbe043c4bf437cc445573c4bc85b9f950e449> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "main/question"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/emersoftware/tulio-chilean-spanish-bert-msmarco-qa-es-mnrl-mn> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.689593"^^xsd:dateTime ;
    ns1:object "NeMo"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6b75cb265aea0eff37651595203eec38a2a621d81df99e4cfcd5f30cef590384> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "uk"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.643648"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/aab31c422baf7f2434e14a6dd6d0ca4ab2f1a7ac240c7e219b52a3c74e708277> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.295260"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.670120"^^xsd:dateTime ;
    ns1:object "Categorizes audio clips into predefined classes."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b9cbedab515a4ba3d4c78d2aaebae3eaaa730c9bfc49212dad2910d0f2c63595> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5065703839063644"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the model are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5440383851528168"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.433935"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1287c3e8de674aa537460a43e7945dc0c75e59af087a9985f8c1291b24d4ffd6> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ur"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6341075301170349"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "[{\"default_splits/split_name\":\"train\"},{\"default_splits/split_name\":\"validation\"},{\"default_splits/split_name\":\"test\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/a3c9ca93ab7ec29d067dd25733037f174c1326ef487292e5e1c9eea5cb35feb1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
language:
- en
tags:
- audio
- automatic-speech-recognition
- hf-asr-leaderboard
widget:
- example_title: Librispeech sample 1
  src: https://cdn-media.huggingface.co/speech_samples/sample1.flac
- example_title: Librispeech sample 2
  src: https://cdn-media.huggingface.co/speech_samples/sample2.flac
pipeline_tag: automatic-speech-recognition
license: apache-2.0
model-index:
- name: whisper-base.en
  results:
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (clean)
      type: librispeech_asr
      config: clean
      split: test
      args:
        language: en
    metrics:
    - type: wer
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (other)
      type: librispeech_asr
      config: other
      split: test
      args:
        language: en
    metrics:
    - type: wer
      value: 12.803978669490565
      name: Test WER
---

# Whisper

Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains **without** the need 
for fine-tuning.

Whisper was proposed in the paper [Robust Speech Recognition via Large-Scale Weak Supervision](https://arxiv.org/abs/2212.04356) 
by Alec Radford et al. from OpenAI. The original code repository can be found [here](https://github.com/openai/whisper).

**Disclaimer**: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.

## Model details

Whisper is a Transformer based encoder-decoder model, also referred to as a _sequence-to-sequence_ model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. 

The models were trained on either English-only data or multilingual data. The English-only models were trained 
on the task of speech recognition. The multilingual models were trained on both speech recognition and speech 
translation. For speech recognition, the model predicts transcriptions in the *same* language as the audio. 
For speech translation, the model predicts transcriptions to a *different* language to the audio.

Whisper checkpoints come in five configurations of varying model sizes.
The smallest four are trained on either English-only or multilingual data.
The largest checkpoints are multilingual only. All ten of the pre-trained checkpoints 
are available on the [Hugging Face Hub](https://huggingface.co/models?search=openai/whisper). The 
checkpoints are summarised in the following table with links to the models on the Hub:

| Size     | Parameters | English-only                                         | Multilingual                                        |
|----------|------------|------------------------------------------------------|-----------------------------------------------------|
| tiny     | 39 M       | [✓](https://huggingface.co/openai/whisper-tiny.en)   | [✓](https://huggingface.co/openai/whisper-tiny)     |
| base     | 74 M       | [✓](https://huggingface.co/openai/whisper-base.en)   | [✓](https://huggingface.co/openai/whisper-base)     |
| small    | 244 M      | [✓](https://huggingface.co/openai/whisper-small.en)  | [✓](https://huggingface.co/openai/whisper-small)    |
| medium   | 769 M      | [✓](https://huggingface.co/openai/whisper-medium.en) | [✓](https://huggingface.co/openai/whisper-medium)   |
| large    | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large)    |
| large-v2 | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large-v2) |

# Usage

This checkpoint is an *English-only* model, meaning it can be used for English speech recognition. Multilingual speech 
recognition or speech translation is possible through use of a multilingual checkpoint.

To transcribe audio samples, the model has to be used alongside a [`WhisperProcessor`](https://huggingface.co/docs/transformers/model_doc/whisper#transformers.WhisperProcessor).

The `WhisperProcessor` is used to:
1. Pre-process the audio inputs (converting them to log-Mel spectrograms for the model)
2. Post-process the model outputs (converting them from tokens to text)

## Transcription

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base.en")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base.en")

>>> # load dummy dataset and read audio files
>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]
>>> input_features = processor(sample["array"], sampling_rate=sample["sampling_rate"], return_tensors="pt").input_features 

>>> # generate token ids
>>> predicted_ids = model.generate(input_features)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=False)
['<|startoftranscript|><|notimestamps|> Mr. Quilter is the apostle of the middle classes, and we are glad to welcome his gospel.<|endoftext|>']

>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.']
```
The context tokens can be removed from the start of the transcription by setting `skip_special_tokens=True`.

## Evaluation

This code snippet shows how to evaluate Whisper base.en on [LibriSpeech test-clean](https://huggingface.co/datasets/librispeech_asr):
 
```python
>>> from datasets import load_dataset
>>> from transformers import WhisperForConditionalGeneration, WhisperProcessor
>>> import torch
>>> from evaluate import load

>>> librispeech_test_clean = load_dataset("librispeech_asr", "clean", split="test")

>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base.en")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base.en").to("cuda")

>>> def map_to_pred(batch):
>>>     audio = batch["audio"]
>>>     input_features = processor(audio["array"], sampling_rate=audio["sampling_rate"], return_tensors="pt").input_features
>>>     batch["reference"] = processor.tokenizer._normalize(batch['text'])
>>> 
>>>     with torch.no_grad():
>>>         predicted_ids = model.generate(input_features.to("cuda"))[0]
>>>     transcription = processor.decode(predicted_ids)
>>>     batch["prediction"] = processor.tokenizer._normalize(transcription)
>>>     return batch

>>> result = librispeech_test_clean.map(map_to_pred)

>>> wer = load("wer")
>>> print(100 * wer.compute(references=result["reference"], predictions=result["prediction"]))
4.271408904897505
```

## Long-Form Transcription

The Whisper model is intrinsically designed to work on audio samples of up to 30s in duration. However, by using a chunking 
algorithm, it can be used to transcribe audio samples of up to arbitrary length. This is possible through Transformers 
[`pipeline`](https://huggingface.co/docs/transformers/main_classes/pipelines#transformers.AutomaticSpeechRecognitionPipeline) 
method. Chunking is enabled by setting `chunk_length_s=30` when instantiating the pipeline. With chunking enabled, the pipeline 
can be run with batched inference. It can also be extended to predict sequence level timestamps by passing `return_timestamps=True`:

```python
>>> import torch
>>> from transformers import pipeline
>>> from datasets import load_dataset

>>> device = "cuda:0" if torch.cuda.is_available() else "cpu"

>>> pipe = pipeline(
>>>   "automatic-speech-recognition",
>>>   model="openai/whisper-base.en",
>>>   chunk_length_s=30,
>>>   device=device,
>>> )

>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]

>>> prediction = pipe(sample.copy(), batch_size=8)["text"]
" Mr. Quilter is the apostle of the middle classes, and we are glad to welcome his gospel."

>>> # we can also return timestamps for the predictions
>>> prediction = pipe(sample.copy(), batch_size=8, return_timestamps=True)["chunks"]
[{'text': ' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.',
  'timestamp': (0.0, 5.44)}]
```

Refer to the blog post [ASR Chunking](https://huggingface.co/blog/asr-chunking) for more details on the chunking algorithm.

## Fine-Tuning

The pre-trained Whisper model demonstrates a strong ability to generalise to different datasets and domains. However, 
its predictive capabilities can be improved further for certain languages and tasks through *fine-tuning*. The blog 
post [Fine-Tune Whisper with 🤗 Transformers](https://huggingface.co/blog/fine-tune-whisper) provides a step-by-step 
guide to fine-tuning the Whisper model with as little as 5 hours of labelled data.

### Evaluated Use

The primary intended users of these models are AI researchers studying robustness, generalization, capabilities, biases, and constraints of the current model. However, Whisper is also potentially quite useful as an ASR solution for developers, especially for English speech recognition. We recognize that once models are released, it is impossible to restrict access to only “intended” uses or to draw reasonable guidelines around what is or is not research.

The models are primarily trained and evaluated on ASR and speech translation to English tasks. They show strong ASR results in ~10 languages. They may exhibit additional capabilities, particularly if fine-tuned on certain tasks like voice activity detection, speaker classification, or speaker diarization but have not been robustly evaluated in these areas. We strongly recommend that users perform robust evaluations of the models in a particular context and domain before deploying them.

In particular, we caution against using Whisper models to transcribe recordings of individuals taken without their consent or purporting to use these models for any kind of subjective classification. We recommend against use in high-risk domains like decision-making contexts, where flaws in accuracy can lead to pronounced flaws in outcomes. The models are intended to transcribe and translate speech, use of the model for classification is not only not evaluated but also not appropriate, particularly to infer human attributes.


## Training Data

The models are trained on 680,000 hours of audio and the corresponding transcripts collected from the internet. 65% of this data (or 438,000 hours) represents English-language audio and matched English transcripts, roughly 18% (or 126,000 hours) represents non-English audio and English transcripts, while the final 17% (or 117,000 hours) represents non-English audio and the corresponding transcript. This non-English data represents 98 different languages. 

As discussed in [the accompanying paper](https://cdn.openai.com/papers/whisper.pdf), we see that performance on transcription in a given language is directly correlated with the amount of training data we employ in that language.


## Performance and Limitations

Our studies show that, over many existing ASR systems, the models exhibit improved robustness to accents, background noise, technical language, as well as zero shot translation from multiple languages into English; and that accuracy on speech recognition and translation is near the state-of-the-art level. 

However, because the models are trained in a weakly supervised manner using large-scale noisy data, the predictions may include texts that are not actually spoken in the audio input (i.e. hallucination). We hypothesize that this happens because, given their general knowledge of language, the models combine trying to predict the next word in audio with trying to transcribe the audio itself.

Our models perform unevenly across languages, and we observe lower accuracy on low-resource and/or low-discoverability languages or languages where we have less training data. The models also exhibit disparate performance on different accents and dialects of particular languages, which may include higher word error rate across speakers of different genders, races, ages, or other demographic criteria. Our full evaluation results are presented in [the paper accompanying this release](https://cdn.openai.com/papers/whisper.pdf). 

In addition, the sequence-to-sequence architecture of the model makes it prone to generating repetitive texts, which can be mitigated to some degree by beam search and temperature scheduling but not perfectly. Further analysis on these limitations are provided in [the paper](https://cdn.openai.com/papers/whisper.pdf). It is likely that this behavior and hallucinations may be worse on lower-resource and/or lower-discoverability languages.


## Broader Implications

We anticipate that Whisper models’ transcription capabilities may be used for improving accessibility tools. While Whisper models cannot be used for real-time transcription out of the box – their speed and size suggest that others may be able to build applications on top of them that allow for near-real-time speech recognition and translation. The real value of beneficial applications built on top of Whisper models suggests that the disparate performance of these models may have real economic implications.

There are also potential dual use concerns that come with releasing Whisper. While we hope the technology will be used primarily for beneficial purposes, making ASR technology more accessible could enable more actors to build capable surveillance technologies or scale up existing surveillance efforts, as the speed and accuracy allow for affordable automatic transcription and translation of large volumes of audio communication. Moreover, these models may have some capabilities to recognize specific individuals out of the box, which in turn presents safety concerns related both to dual use and disparate performance. In practice, we expect that the cost of transcription is not the limiting factor of scaling up surveillance projects.


### BibTeX entry and citation info
```bibtex
@misc{radford2022whisper,
  doi = {10.48550/ARXIV.2212.04356},
  url = {https://arxiv.org/abs/2212.04356},
  author = {Radford, Alec and Kim, Jong Wook and Xu, Tao and Brockman, Greg and McLeavey, Christine and Sutskever, Ilya},
  title = {Robust Speech Recognition via Large-Scale Weak Supervision},
  publisher = {arXiv},
  year = {2022},
  copyright = {arXiv.org perpetual, non-exclusive license}
}
```
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/table_header> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/input_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6001493334770203"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/key> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/c7504a968f417dfe1555958db6caabff413bf4f321bbb9c477d4ff3a9352a0e4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "cs"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/logic_str> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.716041"^^xsd:dateTime ;
    ns1:object "bloom"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a54675fb15dfb4661e88de341c63a6b80937df4a774c2e61e96025215b36b9de> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "lb"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5abd6851ba981d32c4b27e5ae6335f97ca6195fbbf7e9731adf61b9920fae737> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/863d9e15edc2c98657749abae884b48544051490f76ea0e913adf85a3f2727a5> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/hugging-robot/ppo-Huggy/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-04-08T03:01:32+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5699536502361298"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/DianaJin/sample"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/danmorris427/ppo-SnowballTarget"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/interpret> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.445261"^^xsd:dateTime ;
    ns1:object "{'name': 'Jenya Lee', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/venetis/bert-base-uncased-finetuned-3d-sentiment"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6479559242725372"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.442393034696579"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6385846734046936"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6609750390052795"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6028624475002289"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6462405920028687"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw/options> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/thanhduycao/wav2vec2-base-demo-aug/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'private_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'incorrect_solutions' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/kategaranina/lt2t_lf_to_text"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'rationale' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6167605519294739"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.660072"^^xsd:dateTime ;
    ns1:object "Image Feature Extraction"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/46fd5133284e3f6058330c31c628a6854b5eeb608d471e58c7052d9365f5acf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5860159397125244"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6917622685432434"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.447707"^^xsd:dateTime ;
    ns1:object "{'name': 'Eric Michael Smith', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.460159"^^xsd:dateTime ;
    ns1:object "{'name': 'Albert Q. Jiang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object "The name of the split."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/2529572666d8ae917752f418f0b008b820cf821a3ba355927ca159454740dce7> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_contest_id> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/lachiewyoung/test-mistral-7b/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.692096"^^xsd:dateTime ;
    ns1:object "Lightweight solution for mobile and embedded devices to run optimized TensorFlow models with low latency."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6bffbd25ee4f19a8e55b6c7f32040744865e1e7d74080964d19fac6f207948c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.46633850038051605"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "mg"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.259525"^^xsd:dateTime ;
    ns1:object "generated_from_trainer"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04151ef09fe56a2be18a7d842066720d6e7cee10ed5bf1a3363193444decd94d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.653982"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/emersoftware"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3686d15023ade4b08558f72e9dd33a5a134bb1bf2f4238ea9c93dc3ad883f8db> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "dataset:taskmaster2"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6583069562911987"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The context provided does not contain information about the processor requirements for running the application."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4914253503084183"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The model category is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/thanhduycao/wav2vec2-base-demo-aug> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/output_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.932531"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/759dcfce11b186065b46fb94fef1c569da9001c123861ba72ba0708e554bd6c4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5167432725429535"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/e2cb5f7dba65387f6ecd56e7a642d33df8fca1197b2ac918cd629a6cd9b294b2> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.598605751991272"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Split> ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:24"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/abstract> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/danmorris427/ppo-SnowballTarget/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.409806"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/farleyknight"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8e97617d5a4a866db41b3c71e04d726f4ec71cfcc1af9197f70f7ac9cbd7afe4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-01-23T02:29:03+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/15ceeb8703c6ba669411911c62acbbac38f4d1235e8ac6118537ac1e6d75ae84> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5da4808fa46769a8f0834ae60fab543f3c5271c4fa78f2ca9fa6076e5a58099e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.700800"^^xsd:dateTime ;
    ns1:object "Neural building blocks for speaker diarization in Python, supporting voice activity detection and speaker embedding."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b07372cae2aaf834044064c3f58684a47c8f4685d11fccf85dbb95dac4dc7141> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.655067"^^xsd:dateTime ;
    ns1:object "Transforms static images into video sequences."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7062dc4cfa463be9c92783a4d2c8abb9a4b37f71f4caef7c07cd6787e1843ed> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/rangapriyabatchu/black-forest-labsFLUX.1-dev/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5136670768260956"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Split to which the example belongs to."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.359124"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8c29861cff92b34ba1887aa267cf20a6a2124ec092919b27c388fb31ecb5f269> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "th"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "vi"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4167998731136322"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.459644"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7292119562625885"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.266837"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/04151ef09fe56a2be18a7d842066720d6e7cee10ed5bf1a3363193444decd94d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object """---
extra_gated_heading: You need to share contact information with Meta to access this
  model
extra_gated_prompt: "### LLAMA 2 COMMUNITY LICENSE AGREEMENT\\n\\"Agreement\\" means\\
  \\ the terms and conditions for use, reproduction, distribution and  modification\\
  \\ of the Llama Materials set forth herein. \\n\\"Documentation\\" means the specifications,\\
  \\ manuals and documentation  accompanying Llama 2 distributed by Meta at https://ai.meta.com/resources/models-and-libraries/llama-downloads/.\\
  \\  \\n\\"Licensee\\" or \\"you\\" means you, or your employer or any other person or\\
  \\ entity (if you are entering into this Agreement on such person or entity's behalf),\\
  \\ of the age required under applicable laws, rules or regulations to provide legal\\
  \\ consent and that has legal authority to bind your employer or such other person\\
  \\ or  entity if you are  entering in this Agreement on their behalf. \\n\\"Llama 2\\"\\
  \\ means the foundational large language models and software and algorithms, including\\
  \\ machine-learning model code, trained model weights, inference-enabling code, training-enabling\\
  \\ code, fine-tuning enabling code and other  elements of the foregoing distributed\\
  \\ by Meta at ai.meta.com/resources/models-and-libraries/llama-downloads/.\\n\\"Llama\\
  \\ Materials\\" means, collectively, Meta's proprietary Llama 2 and documentation\\
  \\ (and any portion thereof) made available under this Agreement.\\n\\"Meta\\" or \\"\\
  we\\" means Meta Platforms Ireland Limited (if you are located in or, if you are\\
  \\ an entity, your principal place of business is in the EEA or Switzerland) and\\
  \\ Meta Platforms, Inc. (if you are located outside of the EEA or Switzerland). \\n\\
  \\nBy clicking \\"I Accept\\" below or by using or distributing any portion or element\\
  \\ of the Llama Materials, you agree to be bound by this Agreement.\\n1. License Rights\\
  \\ and Redistribution. \\na. Grant of Rights. You are granted a non-exclusive, worldwide,\\
  \\ non- transferable and royalty-free limited license under Meta's intellectual property\\
  \\ or  other rights owned by Meta embodied in the Llama Materials to use, reproduce,\\
  \\  distribute, copy, create derivative works of, and make modifications to the Llama\\
  \\  Materials.  \\nb. Redistribution and Use.\\ni. If you distribute or make the Llama\\
  \\ Materials, or any derivative works  thereof, available to a third party, you shall\\
  \\ provide a copy of this Agreement to such  third party. \\nii.  If you receive Llama\\
  \\ Materials, or any derivative works thereof, from  a Licensee as part of an integrated\\
  \\ end user product, then Section 2 of this  Agreement will not apply to you. \\n\\
  iii. You must retain in all copies of the Llama Materials that you  distribute the\\
  \\ following attribution notice within a \\"Notice\\" text file distributed as a  part\\
  \\ of such copies: \\"Llama 2 is licensed under the LLAMA 2 Community License,  Copyright\\
  \\ (c) Meta Platforms, Inc. All Rights Reserved.\\"\\niv. Your use of the Llama Materials\\
  \\ must comply with applicable laws  and regulations (including trade compliance\\
  \\ laws and regulations) and adhere to the  Acceptable Use Policy for the Llama Materials\\
  \\ (available at  https://ai.meta.com/llama/use-policy), which is hereby incorporated\\
  \\ by reference into  this Agreement.\\nv. You will not use the Llama Materials or\\
  \\ any output or results of the  Llama Materials to improve any other large language\\
  \\ model (excluding Llama 2 or  derivative works thereof).  \\n\\n2. Additional Commercial\\
  \\ Terms. If, on the Llama 2 version release date, the  monthly active users of the\\
  \\ products or services made available by or for Licensee,  or Licensee's affiliates,\\
  \\ is greater than 700 million monthly active users in the  preceding calendar month,\\
  \\ you must request a license from Meta, which Meta may  grant to you in its sole\\
  \\ discretion, and you are not authorized to exercise any of the  rights under this\\
  \\ Agreement unless or until Meta otherwise expressly grants you  such rights.\\n\\
  3. Disclaimer of Warranty. UNLESS REQUIRED BY APPLICABLE LAW, THE  LLAMA MATERIALS\\
  \\ AND ANY OUTPUT AND RESULTS THEREFROM ARE  PROVIDED ON AN \\"AS IS\\" BASIS, WITHOUT\\
  \\ WARRANTIES OF ANY KIND,  EITHER EXPRESS OR IMPLIED, INCLUDING, WITHOUT LIMITATION,\\
  \\ ANY  WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, OR  FITNESS FOR A\\
  \\ PARTICULAR PURPOSE. YOU ARE SOLELY RESPONSIBLE  FOR DETERMINING THE APPROPRIATENESS\\
  \\ OF USING OR REDISTRIBUTING  THE LLAMA MATERIALS AND ASSUME ANY RISKS ASSOCIATED\\
  \\ WITH YOUR  USE OF THE LLAMA MATERIALS AND ANY OUTPUT AND RESULTS.\\n4. Limitation\\
  \\ of Liability. IN NO EVENT WILL META OR ITS AFFILIATES BE  LIABLE UNDER ANY THEORY\\
  \\ OF LIABILITY, WHETHER IN CONTRACT, TORT,  NEGLIGENCE, PRODUCTS LIABILITY, OR OTHERWISE,\\
  \\ ARISING OUT OF THIS  AGREEMENT, FOR ANY LOST PROFITS OR ANY INDIRECT, SPECIAL,\\
  \\  CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR PUNITIVE DAMAGES, EVEN  IF META OR ITS\\
  \\ AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF  ANY OF THE FOREGOING.\\n\\n\\
  5. Intellectual Property.\\na. No trademark licenses are granted under this Agreement,\\
  \\ and in  connection with the Llama Materials, neither Meta nor Licensee may use\\
  \\ any name  or mark owned by or associated with the other or any of its affiliates,\\
  \\ except as  required for reasonable and customary use in describing and redistributing\\
  \\ the  Llama Materials.\\nb. Subject to Meta's ownership of Llama Materials and derivatives\\
  \\ made by or  for Meta, with respect to any derivative works and modifications of\\
  \\ the Llama  Materials that are made by you, as between you and Meta, you are and\\
  \\ will be the  owner of such derivative works and modifications.\\nc. If you institute\\
  \\ litigation or other proceedings against Meta or any entity  (including a cross-claim\\
  \\ or counterclaim in a lawsuit) alleging that the Llama  Materials or Llama 2 outputs\\
  \\ or results, or any portion of any of the foregoing,  constitutes infringement\\
  \\ of intellectual property or other rights owned or licensable  by you, then any\\
  \\ licenses granted to you under this Agreement shall terminate as of  the date such\\
  \\ litigation or claim is filed or instituted. You will indemnify and hold  harmless\\
  \\ Meta from and against any claim by any third party arising out of or related \\
  \\ to your use or distribution of the Llama Materials.\\n6. Term and Termination.\\
  \\ The term of this Agreement will commence upon your  acceptance of this Agreement\\
  \\ or access to the Llama Materials and will continue in  full force and effect until\\
  \\ terminated in accordance with the terms and conditions  herein. Meta may terminate\\
  \\ this Agreement if you are in breach of any term or  condition of this Agreement.\\
  \\ Upon termination of this Agreement, you shall delete  and cease use of the Llama\\
  \\ Materials. Sections 3, 4 and 7 shall survive the  termination of this Agreement.\\
  \\ \\n7. Governing Law and Jurisdiction. This Agreement will be governed and  construed\\
  \\ under the laws of the State of California without regard to choice of law  principles,\\
  \\ and the UN Convention on Contracts for the International Sale of Goods  does not\\
  \\ apply to this Agreement. The courts of California shall have exclusive  jurisdiction\\
  \\ of any dispute arising out of this Agreement. \\n### Llama 2 Acceptable Use Policy\\n\\
  Meta is committed to promoting safe and fair use of its tools and features, including\\
  \\ Llama 2. If you access or use Llama 2, you agree to this Acceptable Use Policy\\
  \\ (“Policy”). The most recent copy of this policy can be found at [ai.meta.com/llama/use-policy](http://ai.meta.com/llama/use-policy).\\n\\
  #### Prohibited Uses\\nWe want everyone to use Llama 2 safely and responsibly. You\\
  \\ agree you will not use, or allow others to use, Llama 2 to:\\n1. Violate the law\\
  \\ or others’ rights, including to:\\n      1. Engage in, promote, generate, contribute\\
  \\ to, encourage, plan, incite, or further illegal or unlawful activity or content,\\
  \\ such as: \\n          1. Violence or terrorism \\n          2. Exploitation or harm\\
  \\ to children, including the solicitation, creation, acquisition, or dissemination\\
  \\ of child exploitative content or failure to report Child Sexual Abuse Material\\n\\
  \\          3. Human trafficking, exploitation, and sexual violence\\n          4.\\
  \\ The illegal distribution of information or materials to minors, including obscene\\
  \\ materials, or failure to employ legally required age-gating in connection with\\
  \\ such information or materials.\\n          5. Sexual solicitation\\n          6.\\
  \\ Any other criminal activity\\n      2. Engage in, promote, incite, or facilitate\\
  \\ the harassment, abuse, threatening, or bullying of individuals or groups of individuals\\n\\
  \\      3. Engage in, promote, incite, or facilitate discrimination or other unlawful\\
  \\ or harmful conduct in the provision of employment, employment benefits, credit,\\
  \\ housing, other economic benefits, or other essential goods and services\\n    \\
  \\  4. Engage in the unauthorized or unlicensed practice of any profession including,\\
  \\ but not limited to, financial, legal, medical/health, or related professional\\
  \\ practices \\n      5. Collect, process, disclose, generate, or infer health, demographic,\\
  \\ or other sensitive personal or private information about individuals without rights\\
  \\ and consents required by applicable laws\\n      6. Engage in or facilitate any\\
  \\ action or generate any content that infringes, misappropriates, or otherwise violates\\
  \\ any third-party rights, including the outputs or results of any products or services\\
  \\ using the Llama 2 Materials\\n      7. Create, generate, or facilitate the creation\\
  \\ of malicious code, malware, computer viruses or do anything else that could disable,\\
  \\ overburden, interfere with or impair the proper working, integrity, operation\\
  \\ or appearance of a website or computer system \\n2. Engage in, promote, incite,\\
  \\ facilitate, or assist in the planning or development of activities that present\\
  \\ a risk of death or bodily harm to individuals, including use of Llama 2 related\\
  \\ to the following:\\n    1. Military, warfare, nuclear industries or applications,\\
  \\ espionage, use for materials or activities that are subject to the International\\
  \\ Traffic Arms Regulations (ITAR) maintained by the United States Department of\\
  \\ State\\n    2. Guns and illegal weapons (including weapon development)\\n    3.\\
  \\ Illegal drugs and regulated/controlled substances\\n    4. Operation of critical\\
  \\ infrastructure, transportation technologies, or heavy machinery\\n    5. Self-harm\\
  \\ or harm to others, including suicide, cutting, and eating disorders\\n    6. Any\\
  \\ content intended to incite or promote violence, abuse, or any infliction of bodily\\
  \\ harm to an individual\\n3. Intentionally deceive or mislead others, including use\\
  \\ of Llama 2 related to the following:\\n    1. Generating, promoting, or furthering\\
  \\ fraud or the creation or promotion of disinformation\\n    2. Generating, promoting,\\
  \\ or furthering defamatory content, including the creation of defamatory statements,\\
  \\ images, or other content\\n    3. Generating, promoting, or further distributing\\
  \\ spam\\n    4. Impersonating another individual without consent, authorization,\\
  \\ or legal right\\n    5. Representing that the use of Llama 2 or outputs are human-generated\\n\\
  \\    6. Generating or facilitating false online engagement, including fake reviews\\
  \\ and other means of fake online engagement \\n    4. Fail to appropriately disclose\\
  \\ to end users any known dangers of your AI system \\nPlease report any violation\\
  \\ of this Policy, software “bug,” or other problems that could lead to a violation\\
  \\ of this Policy through one of the following means: \\n    * Reporting issues with\\
  \\ the model: [github.com/facebookresearch/llama](http://github.com/facebookresearch/llama)\\n\\
  \\    * Reporting risky content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)\\n\\
  \\    * Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)\\
  \\ \\n    * Reporting violations of the Acceptable Use Policy or unlicensed uses of\\
  \\ Llama: [LlamaUseReport@meta.com](mailto:LlamaUseReport@meta.com)"
extra_gated_fields:
  First Name: text
  Last Name: text
  Date of birth: date_picker
  Country: country
  Affiliation: text
  geo: ip_location
  ? By clicking Submit below I accept the terms of the license and acknowledge that
    the information I provide will be collected stored processed and shared in accordance
    with the Meta Privacy Policy
  : checkbox
extra_gated_description: The information you provide will be collected, stored, processed
  and shared in accordance with the [Meta Privacy Policy](https://www.facebook.com/privacy/policy/).
extra_gated_button_content: Submit
language:
- en
pipeline_tag: text-generation
tags:
- facebook
- meta
- pytorch
- llama
- llama-2
license: llama2
---
# **Llama 2**
Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.

## Model Details
*Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the [website](https://ai.meta.com/resources/models-and-libraries/llama-downloads/) and accept our License before requesting access here.*

Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.

**Model Developers** Meta

**Variations** Llama 2 comes in a range of parameter sizes — 7B, 13B, and 70B — as well as pretrained and fine-tuned variations.

**Input** Models input text only.

**Output** Models generate text only.

**Model Architecture** Llama 2 is an auto-regressive language model that uses an optimized transformer architecture. The tuned versions use supervised fine-tuning (SFT) and reinforcement learning with human feedback (RLHF) to align to human preferences for helpfulness and safety.


||Training Data|Params|Content Length|GQA|Tokens|LR|
|---|---|---|---|---|---|---|
|Llama 2|*A new mix of publicly available online data*|7B|4k|&#10007;|2.0T|3.0 x 10<sup>-4</sup>|
|Llama 2|*A new mix of publicly available online data*|13B|4k|&#10007;|2.0T|3.0 x 10<sup>-4</sup>|
|Llama 2|*A new mix of publicly available online data*|70B|4k|&#10004;|2.0T|1.5 x 10<sup>-4</sup>|

*Llama 2 family of models.* Token counts refer to pretraining data only. All models are trained with a global batch-size of 4M tokens. Bigger models -  70B -- use Grouped-Query Attention (GQA) for improved inference scalability.

**Model Dates** Llama 2 was trained between January 2023 and July 2023.

**Status** This is a static model trained on an offline dataset. Future versions of the tuned models will be released as we improve model safety with community feedback.

**License** A custom commercial license is available at: [https://ai.meta.com/resources/models-and-libraries/llama-downloads/](https://ai.meta.com/resources/models-and-libraries/llama-downloads/)

**Research Paper** ["Llama-2: Open Foundation and Fine-tuned Chat Models"](arxiv.org/abs/2307.09288)

## Intended Use
**Intended Use Cases** Llama 2 is intended for commercial and research use in English. Tuned models are intended for assistant-like chat, whereas pretrained models can be adapted for a variety of natural language generation tasks.

To get the expected features and performance for the chat versions, a specific formatting needs to be followed, including the `INST` and `<<SYS>>` tags, `BOS` and `EOS` tokens, and the whitespaces and breaklines in between (we recommend calling `strip()` on inputs to avoid double-spaces). See our reference code in github for details: [`chat_completion`](https://github.com/facebookresearch/llama/blob/main/llama/generation.py#L212).

**Out-of-scope Uses** Use in any manner that violates applicable laws or regulations (including trade compliance laws).Use in languages other than English. Use in any other way that is prohibited by the Acceptable Use Policy and Licensing Agreement for Llama 2.

## Hardware and Software
**Training Factors** We used custom training libraries, Meta's Research Super Cluster, and production clusters for pretraining. Fine-tuning, annotation, and evaluation were also performed on third-party cloud compute.

**Carbon Footprint** Pretraining utilized a cumulative 3.3M GPU hours of computation on hardware of type A100-80GB (TDP of 350-400W). Estimated total emissions were 539 tCO2eq, 100% of which were offset by Meta’s sustainability program.

||Time (GPU hours)|Power Consumption (W)|Carbon Emitted(tCO<sub>2</sub>eq)|
|---|---|---|---|
|Llama 2 7B|184320|400|31.22|
|Llama 2 13B|368640|400|62.44|
|Llama 2 70B|1720320|400|291.42|
|Total|3311616||539.00|

**CO<sub>2</sub> emissions during pretraining.** Time: total GPU time required for training each model. Power Consumption: peak power capacity per GPU device for the GPUs used adjusted for power usage efficiency. 100% of the emissions are directly offset by Meta's sustainability program, and because we are openly releasing these models, the pretraining costs do not need to be incurred by others.

## Training Data
**Overview** Llama 2 was pretrained on 2 trillion tokens of data from publicly available sources. The fine-tuning data includes publicly available instruction datasets, as well as over one million new human-annotated examples. Neither the pretraining nor the fine-tuning datasets include Meta user data.

**Data Freshness** The pretraining data has a cutoff of September 2022, but some tuning data is more recent, up to July 2023.

## Evaluation Results

In this section, we report the results for the Llama 1 and Llama 2 models on standard academic benchmarks.For all the evaluations, we use our internal evaluations library.

|Model|Size|Code|Commonsense Reasoning|World Knowledge|Reading Comprehension|Math|MMLU|BBH|AGI Eval|
|---|---|---|---|---|---|---|---|---|---|
|Llama 1|7B|14.1|60.8|46.2|58.5|6.95|35.1|30.3|23.9|
|Llama 1|13B|18.9|66.1|52.6|62.3|10.9|46.9|37.0|33.9|
|Llama 1|33B|26.0|70.0|58.4|67.6|21.4|57.8|39.8|41.7|
|Llama 1|65B|30.7|70.7|60.5|68.6|30.8|63.4|43.5|47.6|
|Llama 2|7B|16.8|63.9|48.9|61.3|14.6|45.3|32.6|29.3|
|Llama 2|13B|24.5|66.9|55.4|65.8|28.7|54.8|39.4|39.1|
|Llama 2|70B|**37.5**|**71.9**|**63.6**|**69.4**|**35.2**|**68.9**|**51.2**|**54.2**|

**Overall performance on grouped academic benchmarks.** *Code:* We report the average pass@1 scores of our models on HumanEval and MBPP. *Commonsense Reasoning:* We report the average of PIQA, SIQA, HellaSwag, WinoGrande, ARC easy and challenge, OpenBookQA, and CommonsenseQA. We report 7-shot results for CommonSenseQA and 0-shot results for all other benchmarks. *World Knowledge:* We evaluate the 5-shot performance on NaturalQuestions and TriviaQA and report the average. *Reading Comprehension:* For reading comprehension, we report the 0-shot average on SQuAD, QuAC, and BoolQ. *MATH:* We report the average of the GSM8K (8 shot) and MATH (4 shot) benchmarks at top 1.

|||TruthfulQA|Toxigen|
|---|---|---|---|
|Llama 1|7B|27.42|23.00|
|Llama 1|13B|41.74|23.08|
|Llama 1|33B|44.19|22.57|
|Llama 1|65B|48.71|21.77|
|Llama 2|7B|33.29|**21.25**|
|Llama 2|13B|41.86|26.10|
|Llama 2|70B|**50.18**|24.60|

**Evaluation of pretrained LLMs on automatic safety benchmarks.** For TruthfulQA, we present the percentage of generations that are both truthful and informative (the higher the better). For ToxiGen, we present the percentage of toxic generations (the smaller the better).


|||TruthfulQA|Toxigen|
|---|---|---|---|
|Llama-2-Chat|7B|57.04|**0.00**|
|Llama-2-Chat|13B|62.18|**0.00**|
|Llama-2-Chat|70B|**64.14**|0.01|

**Evaluation of fine-tuned LLMs on different safety datasets.** Same metric definitions as above.

## Ethical Considerations and Limitations
Llama 2 is a new technology that carries risks with use. Testing conducted to date has been in English, and has not covered, nor could it cover all scenarios. For these reasons, as with all LLMs, Llama 2’s potential outputs cannot be predicted in advance, and the model may in some instances produce inaccurate, biased or other objectionable responses to user prompts. Therefore, before deploying any applications of Llama 2, developers should perform safety testing and tuning tailored to their specific applications of the model.

Please see the Responsible Use Guide available at [https://ai.meta.com/llama/responsible-use-guide/](https://ai.meta.com/llama/responsible-use-guide)

## Reporting Issues
Please report any software “bug,” or other problems with the models through one of the following means:
- Reporting issues with the model: [github.com/facebookresearch/llama](http://github.com/facebookresearch/llama)
- Reporting problematic content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)
- Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)

## Llama Model Index
|Model|Llama2|Llama2-hf|Llama2-chat|Llama2-chat-hf|
|---|---|---|---|---|
|7B| [Link](https://huggingface.co/meta-llama/Llama-2-7b) | [Link](https://huggingface.co/meta-llama/Llama-2-7b-hf) | [Link](https://huggingface.co/meta-llama/Llama-2-7b-chat) | [Link](https://huggingface.co/meta-llama/Llama-2-7b-chat-hf)|
|13B| [Link](https://huggingface.co/meta-llama/Llama-2-13b) | [Link](https://huggingface.co/meta-llama/Llama-2-13b-hf) | [Link](https://huggingface.co/meta-llama/Llama-2-13b-chat) | [Link](https://huggingface.co/meta-llama/Llama-2-13b-chat-hf)|
|70B| [Link](https://huggingface.co/meta-llama/Llama-2-70b) | [Link](https://huggingface.co/meta-llama/Llama-2-70b-hf) | [Link](https://huggingface.co/meta-llama/Llama-2-70b-chat) | [Link](https://huggingface.co/meta-llama/Llama-2-70b-chat-hf)|"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.47994405031204224"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized/correct> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/memory_limit_bytes> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "The name of the split."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.648342"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.689994"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bc53f85f6e664d1c6ece992a9d80b2e0705d1b3c75028563adb2ed9f36aedec9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.40900708734989166"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The information provided does not contain the name of the contributor."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "dataset:vlsp"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.485655814409256"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.730015367269516"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "gl"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/openai/whisper-base.en"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/table_cont> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.700203"^^xsd:dateTime ;
    ns1:object "Framework for running ML workloads on Habana Gaudi accelerators with performance optimization."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c0097ccf601f8114782f9c0c86386c6c995d5b2e12eddde21fdd7251761ee1fd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "tokenized/options"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5715824365615845"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the model are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ps"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "lv"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.690925"^^xsd:dateTime ;
    ns1:object "Library for lightweight pipelining in Python, used for saving/loading Python objects and parallelizing loops."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55f0c4818716a5c86a051b41b27450e6f00f7e81d8a89b0f3bd6928719ce08e4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.462327"^^xsd:dateTime ;
    ns1:object "{'name': 'Teven Le Scao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5781044065952301"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.893825"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e5ae71f534f4f5c975c2c63beec692769102bbc4cd162258b70098e86ed01040> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5432629883289337"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.698451"^^xsd:dateTime ;
    ns1:object "Open-source NLP research library built on PyTorch for developing state-of-the-art models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f398a6ed462d305d58506b378a7b488c448115a8aef746a62331a8435d54a72b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
library_name: transformers
license: other
base_model: meta-llama/Llama-2-7b-hf
tags:
- llama-factory
- full
- generated_from_trainer
model-index:
- name: llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096
  results: []
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096

This model is a fine-tuned version of [meta-llama/Llama-2-7b-hf](https://huggingface.co/meta-llama/Llama-2-7b-hf) on the 0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096 dataset.

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 2e-05
- train_batch_size: 32
- eval_batch_size: 8
- seed: 42
- distributed_type: multi-GPU
- num_devices: 4
- total_train_batch_size: 128
- total_eval_batch_size: 32
- optimizer: Use adamw_torch with betas=(0.9,0.999) and epsilon=1e-08 and optimizer_args=No additional optimizer arguments
- lr_scheduler_type: cosine
- lr_scheduler_warmup_ratio: 0.03
- num_epochs: 3.0

### Training results



### Framework versions

- Transformers 4.46.1
- Pytorch 2.4.0+cu121
- Datasets 2.20.0
- Tokenizers 0.20.3
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.692653"^^xsd:dateTime ;
    ns1:object "Library for efficient text classification and word representation learning."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/12855f71ca9ab0f85c6609885b9e912174c81e608da47e6448d968f757f5ab44> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-03-02T23:15:38+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6507340669631958"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.642514"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d75a16357850d2896a768db42c912a9487fd97a50f3358217d5bbb602c39b195> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6823820769786835"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/d462b48c96b732d754a938aa86dbd16bfb7478ca5b0c1f1f006c611c112094e9> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.645239"^^xsd:dateTime ;
    ns1:object "Models with documented carbon footprint information related to their training process."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2f45196854d69c3bcc21304aceb64e2a3db2d17613399d7d3c7a21611573a4d5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "2023-03-09T09:29:52+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.436491"^^xsd:dateTime ;
    ns1:object "{'name': 'Andrew Dai', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5031588226556778"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "[{\"socratic_splits/split_name\":\"train\"},{\"socratic_splits/split_name\":\"test\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0c3d01ed44dc2940ae38707146a02c16bc80cc8637ce48ac5f3125b7c6fb2982> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.33157922327518463"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.432025"^^xsd:dateTime ;
    ns1:object "{'name': 'Le Hou', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "tf"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5773587226867676"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "ba"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5027647018432617"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sw"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_index> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: cc-by-nc-4.0
base_model: nguyenvulebinh/wav2vec2-base-vietnamese-250h
tags:
- generated_from_trainer
model-index:
- name: wav2vec2-base-demo-aug
  results: []
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# wav2vec2-base-demo-aug

This model is a fine-tuned version of [nguyenvulebinh/wav2vec2-base-vietnamese-250h](https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h) on the None dataset.
It achieves the following results on the evaluation set:
- eval_loss: 0.5138
- eval_wer: 0.2151
- eval_runtime: 50.9731
- eval_samples_per_second: 14.674
- eval_steps_per_second: 1.844
- epoch: 21.85
- step: 9200

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 8e-06
- train_batch_size: 32
- eval_batch_size: 8
- seed: 42
- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08
- lr_scheduler_type: linear
- lr_scheduler_warmup_steps: 1000
- num_epochs: 30

### Framework versions

- Transformers 4.33.0.dev0
- Pytorch 2.0.0
- Datasets 2.14.4.dev0
- Tokenizers 0.13.3
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "sr"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5842035412788391"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the Whisper model are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.601921"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4609290212392807"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6062464714050293"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.399619"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/594a6f3cf66106516dc4e80f44dbe528cdcf0fb397d75a65d1b3b2a81dfc0f92> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/meta-llama/Llama-2-7b-hf/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.445099"^^xsd:dateTime ;
    ns1:object "{'name': 'Thibaut Lavril', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.464508"^^xsd:dateTime ;
    ns1:object "{'name': 'Peitian Zhang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7e57db0e2c920c0915e597d6f1bc07b689cabf740aac83cba7a336fb0a3caf88> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.665506"^^xsd:dateTime ;
    ns1:object "Creates natural language text based on initial prompts."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/abb31119b9d215cd1c22cd4daa06ca04057087bd174e20c237ac4faea9bb5b3c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.702912449836731"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object """To get started with the Mistral 7B Instruct model, follow these steps:

1. **Installation**: Ensure you have the necessary dependencies installed. You can install them using pip:
   ```bash
   pip install transformers
   ```

2. **Loading the Model**: Load the model using the `AutoModelForCausalLM` class from the `transformers` library:
   ```python
   from transformers import AutoModelForCausalLM, AutoTokenizer

   model_name = "mistralai/Mistral-7B-Instruct-v0.2"
   tokenizer = AutoTokenizer.from_pretrained(model_name)
   model = AutoModelForCausalLM.from_pretrained(model_name)
   ```

3. **Tokenizing Input**: Tokenize your input text using the tokenizer:
   ```python
   input_text = "Your input text here"
   inputs = tokenizer(input_text, return_tensors="pt")
   ```

4. **Generating Output**: Generate output using the model:
   ```python
   output = model.generate(**inputs)
   ```

5. **Decoding Output**: Decode the generated output to get the text:
   ```python
   output_text = tokenizer.decode(output[0], skip_special_tokens=True)
   print(output_text)
   ```

For more detailed instructions and examples, refer to the [official documentation](https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.2) or the [Hugging Face Transformers GitHub repository](https://github.com/huggingface/transformers).

**Uses:**

- **Direct Use**: The Mistral 7B Instruct model can be used directly for various tasks such as text generation, question answering, and more. It is designed to be easily fine-tuned for specific applications.

- **Fine-Tuning**: The model can be fine-tuned for specific tasks using the `Trainer` class from the `transformers` library. This allows for customization and adaptation to specific domains or datasets.

- **Moderation**: While the model does not have moderation mechanisms by default, it is designed to be easily fine-tuned to respect guardrails and can be used in environments requiring moderated outputs.

- **Deployment**: The model can be deployed in various environments, including cloud platforms and local servers, using the `transformers` library's deployment tools.

- **Community Engagement**: The community is encouraged to engage with the model and provide feedback on ways to make it more suitable for deployment in moderated environments."""^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.438923"^^xsd:dateTime ;
    ns1:object "2023-07-18"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4637153297662735"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5310696065425873"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object """To use this model, please install the `cleanrl` package with the following command:

```
pip install cleanrl
```

After installing the `cleanrl` package, you can use the model by following the instructions provided in the "How to Get Started with the Model" section."""^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "apache-2.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.259888"^^xsd:dateTime ;
    ns1:object "conversational"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/61cce84de930f0da8c78ddef3203a2afac70cf5e46684f0407180738cd821965> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4301075339317322"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'private_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.663188"^^xsd:dateTime ;
    ns1:object "Classifies content into categories not seen during training."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79765e8db24271bde7a56b897b0b6c389d5be642563652aae56b6253290a801e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.562036544084549"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/345eaa1fa623453840cdf3f6f07ec58414c463eee27c8faabf6a00b60d107b7e> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.689188"^^xsd:dateTime ;
    ns1:object "Apple's framework for integrating machine learning models into iOS, macOS, watchOS, and tvOS apps."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2ae536499f90e7e5edcd87dddf0d258801cae8e7a2f82d8ce02361ef54e77c05> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87e3b3dad52adc5c12d2dc386ce41da75f306c4b73d2d497aa9c5f22c6de6e87> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "fr"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.434096"^^xsd:dateTime ;
    ns1:object "cleanrl"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1287c3e8de674aa537460a43e7945dc0c75e59af087a9985f8c1291b24d4ffd6> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.767397"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.432999"^^xsd:dateTime ;
    ns1:object "{'name': 'Xuezhi Wang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.436169"^^xsd:dateTime ;
    ns1:object "{'name': 'Vincent Zhao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/79cf083846a8329d2912fcd7f375233c37a54917af291bb945f0b58bc735b8ad> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/table_cont> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.467125"^^xsd:dateTime ;
    ns1:object "{'name': 'Shitao Xiao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.739202231168747"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object """Information not found.

Context:
Limitations: Limitations:
- This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
Limitations - List: - This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
...

Question: Find the ethical Legal Social in the following text, here is a description of the property: (Considerations with regards to ethical legal and social aspects.) here are some related sections: Bias, Risks, and Limitations

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Limitations: Limitations:
- This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
Limitations - List: - This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
...

Question: Find the ethical Legal Social in the following text, here is a description of the property: (Considerations with regards to ethical legal and social aspects.) here are some related sections: Bias, Risks, and Limitations

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Limitations: Limitations:
- This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
Limitations - List: - This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
...

Question: Find the ethical Legal Social in the following text, here is a description of the property: (Considerations with regards to ethical legal and social aspects.) here are some related sections: Bias, Risks, and Limitations

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Limitations: Limitations:
- This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
Limitations - List: - This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
...

Question: Find the ethical Legal Social in the following text, here is a description of the property: (Considerations with regards to ethical legal and social aspects.) here are some related sections: Bias, Risks, and Limitations

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Limitations: Limitations:
- This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
Limitations - List: - This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
...

Question: Find the ethical Legal Social in the following text, here is a description of the property: (Considerations with regards to ethical legal and social aspects.) here are some related sections: Bias, Risks, and Limitations

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Limitations: Limitations:
- This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
Limitations - List: - This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
...

Question: Find the ethical Legal Social in the following text, here is a description of the property: (Considerations with regards to ethical legal and social aspects.) here are some related sections: Bias, Risks, and Limitations

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Limitations: Limitations:
- This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
Limitations - List: - This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
...

Question: Find the ethical Legal Social in the following text, here is a description of the property: (Considerations with regards to ethical legal and social aspects.) here are some related sections: Bias, Risks, and Limitations

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Limitations: Limitations:
- This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
Limitations - List: - This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
...

Question: Find the ethical Legal Social in the following text, here is a description of the property: (Considerations with regards to ethical legal and social aspects.) here are some related sections: Bias, Risks, and Limitations

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Limitations: Limitations:
- This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
Limitations - List: - This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
...

Question: Find the ethical Legal Social in the following text, here is a description of the property: (Considerations with regards to ethical legal and social aspects.) here are some related sections: Bias, Risks, and Limitations

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Limitations: Limitations:
- This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
Limitations - List: - This model is not intended or able to provide factual information.
- As a statistical model this checkpoint might amplify existing societal biases.
- The model may fail to generate output that matches the prompts.
- Prompt following is heavily influenced by the prompting-style.
...

Question: Find the ethical Legal Social in the following text, here is a description of the property: (Considerations with regards to ethical legal and social aspects.) here are some related sections"""^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.450741"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e80bd947034b4e75e6c2e485a46fe30d0ed3e1937431363007ca89b7c167ea53> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6242067813873291"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.661230"^^xsd:dateTime ;
    ns1:object "Token Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cb9bd15fb27d24d93383343fa6ee37e644b0a41da399de954b0a5cf93c7b3501> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.259065"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b751528b59fc7a0677c52c99b85d41f69866dad58deffdbf1e33a510f27bc2f5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "lt"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/63c4690edf3557f17b07f48296b33ccc383956a845d01233d59d9e359bf38c99> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.679596"^^xsd:dateTime ;
    ns1:object "Set of reliable implementations of reinforcement learning algorithms in PyTorch."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a3c9ca93ab7ec29d067dd25733037f174c1326ef487292e5e1c9eea5cb35feb1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.675693"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6300171315670013"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.349379"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ba386c19594b5e2c45538f0ad668a14203edcbe442437836169ed56795dd7abb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/action"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/action> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/nguyenvulebinh/wav2vec2-base-vietnamese-250h/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.670735"^^xsd:dateTime ;
    ns1:object "Identifies when someone is speaking in an audio stream."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1759562ba5af131b8ba1cdb4e06a2cee5c1ebff35971610e6ef2eb585b413ef7> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
license: apache-2.0
tags:
- generated_from_trainer
datasets:
- farleyknight/big_patent_5_percent
metrics:
- rouge
model-index:
- name: patent-summarization-fb-bart-base-2022-09-20
  results:
  - task:
      name: Summarization
      type: summarization
    dataset:
      name: farleyknight/big_patent_5_percent
      type: farleyknight/big_patent_5_percent
      config: all
      split: train
      args: all
    metrics:
    - name: Rouge1
      type: rouge
      value: 39.4401
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# patent-summarization-fb-bart-base-2022-09-20

This model is a fine-tuned version of [facebook/bart-base](https://huggingface.co/facebook/bart-base) on the farleyknight/big_patent_5_percent dataset.
It achieves the following results on the evaluation set:
- Loss: 2.4088
- Rouge1: 39.4401
- Rouge2: 14.2445
- Rougel: 26.2701
- Rougelsum: 33.7535
- Gen Len: 78.9702

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 5e-05
- train_batch_size: 1
- eval_batch_size: 1
- seed: 42
- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08
- lr_scheduler_type: linear
- num_epochs: 1.0

### Training results

| Training Loss | Epoch | Step  | Validation Loss | Rouge1  | Rouge2 | Rougel  | Rougelsum | Gen Len |
|:-------------:|:-----:|:-----:|:---------------:|:-------:|:------:|:-------:|:---------:|:-------:|
| 3.0567        | 0.08  | 5000  | 2.8864          | 18.9387 | 7.1014 | 15.4506 | 16.8377   | 19.9979 |
| 2.9285        | 0.17  | 10000 | 2.7800          | 19.8983 | 7.3258 | 16.0823 | 17.7019   | 20.0    |
| 2.9252        | 0.25  | 15000 | 2.7080          | 19.6623 | 7.4627 | 16.0153 | 17.4485   | 20.0    |
| 2.8123        | 0.33  | 20000 | 2.6585          | 19.7414 | 7.5251 | 15.8166 | 17.4668   | 20.0    |
| 2.7117        | 0.41  | 25000 | 2.6070          | 19.7661 | 7.7193 | 16.2795 | 17.7884   | 20.0    |
| 2.7131        | 0.5   | 30000 | 2.5616          | 19.6706 | 7.4229 | 15.7998 | 17.4324   | 20.0    |
| 2.6373        | 0.58  | 35000 | 2.5250          | 20.0155 | 7.6811 | 16.1231 | 17.7578   | 20.0    |
| 2.6785        | 0.66  | 40000 | 2.4977          | 20.0974 | 7.9578 | 16.543  | 18.0242   | 20.0    |
| 2.6265        | 0.75  | 45000 | 2.4701          | 19.994  | 7.9114 | 16.3501 | 17.8786   | 20.0    |
| 2.5833        | 0.83  | 50000 | 2.4441          | 19.9981 | 7.934  | 16.3033 | 17.8674   | 20.0    |
| 2.5579        | 0.91  | 55000 | 2.4251          | 20.0544 | 7.8966 | 16.3889 | 17.9491   | 20.0    |
| 2.5242        | 0.99  | 60000 | 2.4097          | 20.1093 | 8.0572 | 16.4935 | 17.9823   | 20.0    |


### Framework versions

- Transformers 4.23.0.dev0
- Pytorch 1.12.0
- Datasets 2.4.0
- Tokenizers 0.12.1
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.455816"^^xsd:dateTime ;
    ns1:object "{'name': 'Zheng Liu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d33e63bfbdaeabdb4fc32178c78ed0a5a3d42de13f714cb72b4a93737d808581> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.295877"^^xsd:dateTime ;
    ns1:object "esnli"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cafa6cfd9a4170cbf6a99f2d8b42715517f11068dc92b807e31dad9ab0535893> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.349694"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f57740f97820ddb55f90898c07a60a736e9a9030d5eac125af5c595ad0638c8f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "t5"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.668242"^^xsd:dateTime ;
    ns1:object "Text to Audio"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/435f6e89d90ad4bd6be870aa7e1a66a9ce6bb4c201cdc1adf4aec7db47ff1148> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/topic"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/topic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4653235524892807"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/nanos> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:26.037850"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/03a8010a33b7e6718a7b9231b9c21ef9f07a99b444199c8533c744e5ddf1b77a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.701937"^^xsd:dateTime ;
    ns1:object "Unity package for running neural networks in real-time applications and games."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/145a1db14402ffd2d346a7bf50e3e9e8c75169383a079480e9ba655e5e2fab8a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0e622b1206370583863f675a0f00198224b2cf8c7894a9760b69a207fd107c38> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.451889768242836"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4944551885128021"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7ef9acc89ec803fb780f2a908b886de5adf51d162fb38e1150d2a591870a172> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/untranslated_description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "default/untranslated_description"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/untranslated_description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.454041"^^xsd:dateTime ;
    ns1:object "{'name': 'Iryna Gurevych', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/362c2afdbeab349b319a29b71379514cce54962315c5c37ef077d02dfee0137e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.529412716627121"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b6f28372a47714d6125f63a91a1dcde9276c1c0c0ee81f9663a9b1112899b00> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.295565"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/aqua_rat"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "apache-2.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5738059878349304"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "tokenized/rationale"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/BAAI/bge-large-zh-v1.5> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21f77a0f3e1f11d8ecdd99b233a034471c4a62e7b045abf74052c6eac4081a9a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'url' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/url> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7004575133323669"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The primary intended users of these models are AI researchers studying robustness, generalization, capabilities, biases, and constraints of the current model."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5592224299907684"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.768257"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/90eec6e25a3fb442a9bde78265ab17bc704cb71d58af7815f5a5ca027c4a2c94> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5840140581130981"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object """The citation for the paper "What to Pre-Train on? Efficient Intermediate Task Selection" is provided in the text. It is cited as follows:

@inproceedings{poth-etal-2021-pre,
    title = "{W}hat to Pre-Train on? {E}fficient Intermediate Task Selection",
    author = "Poth, Clifton  and
      Pfeiffer, Jonas  and
      R{\\"u}ckl{'e}, Andreas  and
      Gurevych, Iryna",
    booktitle = "Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing",
    month = nov,
    year = "2021",
    address = "Online and Punta Cana, Dominican Republic",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/2021.emnlp-main.827",
    pages = "10585--10605",
}

Information not found."""^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "2024-04-17T08:40:16+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/d462b48c96b732d754a938aa86dbd16bfb7478ca5b0c1f1f006c611c112094e9> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/02ddc4a56bdf9cea710d08eea8b6e5605737db4db25ae48b044d427b753d6665> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.444277"^^xsd:dateTime ;
    ns1:object "{'name': 'Madian Khabsa', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.257624"^^xsd:dateTime ;
    ns1:object "tensorboard"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Splits for the default config."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.354826"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/63c4690edf3557f17b07f48296b33ccc383956a845d01233d59d9e359bf38c99> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/a54675fb15dfb4661e88de341c63a6b80937df4a774c2e61e96025215b36b9de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "vi"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.302375"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/google"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/125d01550d26a191f055cd53b0b7bf0298ef4a173496f10aa09a87ca1b3fdcbe> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.692348"^^xsd:dateTime ;
    ns1:object "stable-baselines3"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a3c9ca93ab7ec29d067dd25733037f174c1326ef487292e5e1c9eea5cb35feb1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.438226"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5712851285934448"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "The model category is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/157e8761577b237679066841ff2867452145bd89d99b81b7423a40a44b8344ef> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4460846334695816"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object """Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training hyperparameters:
The following hyperparameters were used during training:

Question: Find the conditions Of Access in the following text, here is a description of the property: (Conditions that affect the availability of, or method(s) of access to, an item.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
wav2vec2-base-demo-aug > Training procedure > Training hyperparameters - Par. 1: wav2vec2-base-demo-aug > Training procedure > Training"""^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7a4818368795d2681561fad03f178989eeec5244881a0c1ef96c594461ebad6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.429180"^^xsd:dateTime ;
    ns1:object "2023-11-22"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/edad03129a95a7013285de4f83a800d030c7fe58b3df35e199e03ea36ef47bfa> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "tokenized"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.293491"^^xsd:dateTime ;
    ns1:object "djaym7/wiki_dialog"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9773f8d647166503d14c7a05030b47d6b1610f17bdd55e8c98cb4fc2b13a3379> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5279303789138794"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/025519ab6b5273e0e5495a7c94c267816694980e5310c423e1b863321ddd942d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.596853"^^xsd:dateTime ;
    ns1:object "UpNDown-v5"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/03ff21e013ce78d894192593d219c2692f67183d2062dbcf75c260726e60181a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.691928"^^xsd:dateTime ;
    ns1:object "TF Lite"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6bffbd25ee4f19a8e55b6c7f32040744865e1e7d74080964d19fac6f207948c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'table_cont' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/table_cont> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.570978194475174"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the processor requirements for the application."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f9a71474fe728677647a89b6af9c678941143293c9bd7b79cc09f06a7604070b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.658150"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ab2624f913f0d530408cbfa25c29a33523a1a481ba19c3d46f91a6fac4e63844> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5748925805091858"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57878d6eb64a5549ebafc6fa0b1de2039dc214a7352e984e372ed6ecdaae1967> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/jslin09/bloom-560m-finetuned-fraud/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04ff0b348502507869be7830fcfae0226fee07ad183b7e79867cfc0e59d0a54e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.42029084265232086"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object """---
pipeline_tag: sentence-similarity
tags:
- sentence-transformers
- feature-extraction
- sentence-similarity
- transformers

---

# {MODEL_NAME}

This is a [sentence-transformers](https://www.SBERT.net) model: It maps sentences & paragraphs to a 768 dimensional dense vector space and can be used for tasks like clustering or semantic search.

<!--- Describe your model here -->

## Usage (Sentence-Transformers)

Using this model becomes easy when you have [sentence-transformers](https://www.SBERT.net) installed:

```
pip install -U sentence-transformers
```

Then you can use the model like this:

```python
from sentence_transformers import SentenceTransformer
sentences = ["This is an example sentence", "Each sentence is converted"]

model = SentenceTransformer('{MODEL_NAME}')
embeddings = model.encode(sentences)
print(embeddings)
```



## Usage (HuggingFace Transformers)
Without [sentence-transformers](https://www.SBERT.net), you can use the model like this: First, you pass your input through the transformer model, then you have to apply the right pooling-operation on-top of the contextualized word embeddings.

```python
from transformers import AutoTokenizer, AutoModel
import torch


#Mean Pooling - Take attention mask into account for correct averaging
def mean_pooling(model_output, attention_mask):
    token_embeddings = model_output[0] #First element of model_output contains all token embeddings
    input_mask_expanded = attention_mask.unsqueeze(-1).expand(token_embeddings.size()).float()
    return torch.sum(token_embeddings * input_mask_expanded, 1) / torch.clamp(input_mask_expanded.sum(1), min=1e-9)


# Sentences we want sentence embeddings for
sentences = ['This is an example sentence', 'Each sentence is converted']

# Load model from HuggingFace Hub
tokenizer = AutoTokenizer.from_pretrained('{MODEL_NAME}')
model = AutoModel.from_pretrained('{MODEL_NAME}')

# Tokenize sentences
encoded_input = tokenizer(sentences, padding=True, truncation=True, return_tensors='pt')

# Compute token embeddings
with torch.no_grad():
    model_output = model(**encoded_input)

# Perform pooling. In this case, mean pooling.
sentence_embeddings = mean_pooling(model_output, encoded_input['attention_mask'])

print("Sentence embeddings:")
print(sentence_embeddings)
```



## Evaluation Results

<!--- Describe how your model was evaluated -->

For an automated evaluation of this model, see the *Sentence Embeddings Benchmark*: [https://seb.sbert.net](https://seb.sbert.net?model_name={MODEL_NAME})


## Training
The model was trained with the parameters:

**DataLoader**:

`torch.utils.data.dataloader.DataLoader` of length 3009 with parameters:
```
{'batch_size': 16, 'sampler': 'torch.utils.data.sampler.RandomSampler', 'batch_sampler': 'torch.utils.data.sampler.BatchSampler'}
```

**Loss**:

`sentence_transformers.losses.MultipleNegativesRankingLoss.MultipleNegativesRankingLoss` with parameters:
  ```
  {'scale': 20.0, 'similarity_fct': 'cos_sim'}
  ```

Parameters of the fit()-Method:
```
{
    "epochs": 10,
    "evaluation_steps": 0,
    "evaluator": "NoneType",
    "max_grad_norm": 1,
    "optimizer_class": "<class 'torch.optim.adamw.AdamW'>",
    "optimizer_params": {
        "lr": 2e-05
    },
    "scheduler": "WarmupLinear",
    "steps_per_epoch": null,
    "warmup_steps": 1000,
    "weight_decay": 0.01
}
```


## Full Model Architecture
```
SentenceTransformer(
  (0): Transformer({'max_seq_length': 512, 'do_lower_case': False}) with Transformer model: BertModel 
  (1): Pooling({'word_embedding_dimension': 768, 'pooling_mode_cls_token': False, 'pooling_mode_mean_tokens': True, 'pooling_mode_max_tokens': False, 'pooling_mode_mean_sqrt_len_tokens': False})
)
```

## Citing & Authors

<!--- Describe where people can find more information -->"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/lachiewyoung/test-mistral-7b> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/AdapterHub/bert-base-uncased-pf-multirc"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b5114c7221157137ae19b1771dd1fd1ec86ad5af541d7a4bb5a68145de780952> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.847904"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2310.07554"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3a4f1b42688576277b13d109d4ce9e1e35c2971aa4450f10f54b5678427aa65d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/google/flan-t5-small/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object "Column 'generated_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5642942786216736"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:48:48"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6931f165addbc3bac1cbffde99315c6b22b1a749368ee24389953331ca8ae046> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.449324"^^xsd:dateTime ;
    ns1:object "{'name': 'Yuchen Zhang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.461502"^^xsd:dateTime ;
    ns1:object "{'name': 'Guillaume Lample', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/57f9605420f92c3149338e7085a941b8ab7907fe6eb54f86c4c2cd120b76a12c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4102637767791748"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:41:28"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:57:25.668868"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ecd7f8f73c76e2813d124a5830035419d55e0e60410eb6b073177559f7238d9c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:57:26.436333"^^xsd:dateTime ;
    ns1:object "{'name': 'Yanping Huang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.648120"^^xsd:dateTime ;
    ns1:object "Models based on XLM-RoBERTa, a cross-lingual version of RoBERTa pretrained on text from 100 languages for multilingual understanding."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/43625c04f736f13b1f357a0d9357ed3dbc8e216e352796b03fb0fa69aea1f93b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.677650"^^xsd:dateTime ;
    ns1:object "TensorBoard"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.41835829615592957"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1c48824743e55222d5add11f150796e52972e3cdc769aab9a1e0a6b888755e2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5928331315517426"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:57:26.691494"^^xsd:dateTime ;
    ns1:object "Topic modeling technique that leverages BERT embeddings and clustering for document topic extraction."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/316fd1b6c56f67729f7e0880d91953804a9af869ce76b2906f26f3d534937931> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:57:23"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/wiki> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:36:00"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.581868588924408"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c017f4202867c65e242914e20e9c8c6e49aacbbbbd42c8dc56242b2751ad6441> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5905739068984985"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:41:27"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c16c1bc2a39117bd23684feead2b789887579bb46816136ba0ca8a0a00aec6b> .


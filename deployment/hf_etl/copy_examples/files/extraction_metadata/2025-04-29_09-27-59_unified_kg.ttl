@prefix ns1: <http://mlentory.zbmed.de/mlentory_graph/meta/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <https://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6748426258563995"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/CyberHarem/chokai_azurlane> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.788078"^^xsd:dateTime ;
    ns1:object "{'name': 'Jude Fernandes', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.163900"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.787917"^^xsd:dateTime ;
    ns1:object "{'name': 'David Esiobu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "apache-2.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.878605"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a2f3a1fe1480acaf0753eb2d5ef88519c7b81e26e6505fed6d5c93c3a5119a65> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.199410"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/01ce031a92b6a44f90635a9aa473acc02c379a53ef7b0a0d8f88b6027a9ad64e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.836759"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/46fd5133284e3f6058330c31c628a6854b5eeb608d471e58c7052d9365f5acf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.804735"^^xsd:dateTime ;
    ns1:object "{'name': 'Denny Zhou', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_contest_id> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.843943"^^xsd:dateTime ;
    ns1:object "Text Generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/CyberHarem/chokai_azurlane> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7129934132099152"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/seconds> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.684791773557663"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The context provided does not contain information about the validated On."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "tf"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.804146"^^xsd:dateTime ;
    ns1:object "{'name': 'Jeff Dean', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "is"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "zh"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.822552"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/43625c04f736f13b1f357a0d9357ed3dbc8e216e352796b03fb0fa69aea1f93b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.854541"^^xsd:dateTime ;
    ns1:object "End-to-end open source platform for ML with comprehensive tools and libraries for building and deploying models at scale."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f38a4d1014d3cc9f5709e2ecd78f5809ca2397dd49ed420aa2e4a0ab4210a289> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "apache-2.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.137446"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/input_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "tg"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.808091"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2310.06825"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.176833"^^xsd:dateTime ;
    ns1:object "text to image"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.820075"^^xsd:dateTime ;
    ns1:object "8-bit precision"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/192e3c37cdad044da28b01edd768819d9dc9ebf5642a4dd3e0cf9564058b6d2a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.846628"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/435f6e89d90ad4bd6be870aa7e1a66a9ce6bb4c201cdc1adf4aec7db47ff1148> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "lt"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.863122"^^xsd:dateTime ;
    ns1:object "timm"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3135ad7c615e157f80ecab1b96d4167d2e6c147b2e563721a652a5b56845418c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/cf_rating"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_rating> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.798197"^^xsd:dateTime ;
    ns1:object """Finetuning language models on a collection of datasets phrased as
instructions has been shown to improve model performance and generalization to
unseen tasks. In this paper we explore instruction finetuning with a particular
focus on (1) scaling the number of tasks, (2) scaling the model size, and (3)
finetuning on chain-of-thought data. We find that instruction finetuning with
the above aspects dramatically improves performance on a variety of model
classes (PaLM, T5, U-PaLM), prompting setups (zero-shot, few-shot, CoT), and
evaluation benchmarks (MMLU, BBH, TyDiQA, MGSM, open-ended generation). For
instance, Flan-PaLM 540B instruction-finetuned on 1.8K tasks outperforms PALM
540B by a large margin (+9.4% on average). Flan-PaLM 540B achieves
state-of-the-art performance on several benchmarks, such as 75.2% on five-shot
MMLU. We also publicly release Flan-T5 checkpoints, which achieve strong
few-shot performance even compared to much larger models, such as PaLM 62B.
Overall, instruction finetuning is a general method for improving the
performance and usability of pretrained language models."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/29d9051dd7490ee997ef15f45bf916274706268eab63f2c7bff767388d51cf25> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.781934"^^xsd:dateTime ;
    ns1:object "cs.LG"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.839249"^^xsd:dateTime ;
    ns1:object "Answers questions based on tabular data."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/017f19456e7a37fe3c1ad51165020b62cc12497d5d20651e073e3520a5099eb9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.885303"^^xsd:dateTime ;
    ns1:object "Unity package for running neural networks in real-time applications and games."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/145a1db14402ffd2d346a7bf50e3e9e8c75169383a079480e9ba655e5e2fab8a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.846406"^^xsd:dateTime ;
    ns1:object "Converts written text into spoken audio."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6839f153ace4a5cfe1e9a1cdb43c1bfc2260f4c85be0608af5ec84a75a205d2c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "it"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/meta-llama/Llama-2-7b-hf/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.824669"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/49bf7b39c8a2a4cb84ab43bc3c320de6e0c1da1253ebf022a5d0a84737581119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sk"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.782548"^^xsd:dateTime ;
    ns1:object "{'name': 'Jong Wook Kim', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.791441"^^xsd:dateTime ;
    ns1:object "{'name': 'Diana Liskovich', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Splits for the default config."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'private_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.856658"^^xsd:dateTime ;
    ns1:object "Fast and safe serialization format for storing and distributing machine learning model weights."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/cf_tags"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_tags> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.642932116985321"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The intended use of jinkrsmodel is not specified in the given context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "tl"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "am"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.876678"^^xsd:dateTime ;
    ns1:object "Comprehensive deep learning platform developed by Baidu, supporting industrial applications."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ebbad1761fb8870fe41c968d83d4055b2799265db268338f3fa38c3849f7932a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.821088"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0c3d01ed44dc2940ae38707146a02c16bc80cc8637ce48ac5f3125b7c6fb2982> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sv"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.198118"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/63c4690edf3557f17b07f48296b33ccc383956a845d01233d59d9e359bf38c99> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.835371"^^xsd:dateTime ;
    ns1:object "Detects objects in categories not seen during training."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ab2624f913f0d530408cbfa25c29a33523a1a481ba19c3d46f91a6fac4e63844> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "other"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "pt"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/97a327fc7cf14c750f068bdf3aab8cf61c95e2b04079bd1772d37c385f2b1088> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.178714"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/CyberHarem"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/907291d3b7300a7e84345915ff883a4d8615166ada0751e1be974994397ea77a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.798887"^^xsd:dateTime ;
    ns1:object "{'name': 'Hyung Won Chung', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.854200"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f38a4d1014d3cc9f5709e2ecd78f5809ca2397dd49ed420aa2e4a0ab4210a289> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.3404039442539215"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.841143"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dd477ce37bc2c08950a1d845aa243dff8c0e03de15cc42b9b35295d514538a84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.847276"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "mi"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.864834"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6fd4d85e3416654bf33d9c5f3803b3e9900ce78a6309e4e6a84b2499ad4b7981> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "bg"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.812980"^^xsd:dateTime ;
    ns1:object "General label indicating the model or dataset has been categorized with specific keywords for discoverability."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6b72a43d7396497fe9733cb91a9e688db073b7c1c583e2c5fca339bd414a4dac> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/cafa6cfd9a4170cbf6a99f2d8b42715517f11068dc92b807e31dad9ab0535893> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.790082"^^xsd:dateTime ;
    ns1:object "{'name': 'Viktor Kerkez', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base.en/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'answer' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.797690"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.821571"^^xsd:dateTime ;
    ns1:object "Models based on BERT (Bidirectional Encoder Representations from Transformers), a transformer architecture that learns contextual word embeddings."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0c3d01ed44dc2940ae38707146a02c16bc80cc8637ce48ac5f3125b7c6fb2982> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.860751"^^xsd:dateTime ;
    ns1:object "GGUF"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/934dea1e0796f0376db45e4b74e093aeb422ffdf79cf5c4aaea1e5e84969c76e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.855153"^^xsd:dateTime ;
    ns1:object "High-performance numerical computing library that combines NumPy, automatic differentiation, and GPU/TPU support for ML research."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'cf_points' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_points> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.36261187493801117"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/difficulty> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/output> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/input_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "The name of the split."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default_splits"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.383466"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c03090b68b1e45d6bebe9b9d1ea103b6a4c064ceb71f16f08a5ae59d9bac70e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6726868748664856"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The author of this content is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.450717"^^xsd:dateTime ;
    ns1:object "haw"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dabb9d310d39a47f81f009cd476a41773667de14be41c930213432a06ad59fb0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object "plain_text/domain"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/domain> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.786955"^^xsd:dateTime ;
    ns1:object "{'name': 'Dan Bikel', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "af"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.828611"^^xsd:dateTime ;
    ns1:object "Assigns each pixel in an image to a specific class or object."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f4f5c02149ef4c63e1abfb237a7efd73b36b96243fa20ee9a3b83ab914689b18> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.840780"^^xsd:dateTime ;
    ns1:object "Classifies content into categories not seen during training."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79765e8db24271bde7a56b897b0b6c389d5be642563652aae56b6253290a801e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'solutions' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.3703840970993042"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.789290"^^xsd:dateTime ;
    ns1:object "{'name': 'Anthony Hartshorn', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6384265720844269"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6412810385227203"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The author of this content is the Hugging Face team."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Split> ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.635639876127243"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The copyright holder for the Mistral-7B-Instruct-v0.2 model is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6710058748722076"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.879514"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/771e059c7890ae196a3227d36771c27f019638d33a819ca19bef2ae302b92b44> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/863d9e15edc2c98657749abae884b48544051490f76ea0e913adf85a3f2727a5> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/35ddc796a6d136e9bf8810f1907a6a31657c5fb80bef078ab577c5edc3f59cc0> ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Dataset ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.202729"^^xsd:dateTime ;
    ns1:object "DianaJin"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8c29861cff92b34ba1887aa267cf20a6a2124ec092919b27c388fb31ecb5f269> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/CyberHarem/chokai_azurlane/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ru"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/Xinging/llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.795131"^^xsd:dateTime ;
    ns1:object "{'name': 'Jian Xiang Kuan', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.792403"^^xsd:dateTime ;
    ns1:object "{'name': 'Pushkar Mishra', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.136614"^^xsd:dateTime ;
    ns1:object "lambada"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/memory_limit_bytes> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.796924"^^xsd:dateTime ;
    ns1:object "{'name': 'Aurelien Rodriguez', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/socratic_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ro"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.801694"^^xsd:dateTime ;
    ns1:object "{'name': 'Marie Pellat', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "llama2"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'cf_index' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_index> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/DianaJin/sample/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.649557888507843"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.817081"^^xsd:dateTime ;
    ns1:object "Has a Space"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d75a16357850d2896a768db42c912a9487fd97a50f3358217d5bbb602c39b195> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.831645"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9132b663f2893be0a7b034405164be91c4fe250d2b1ecd3390fb9b9bd689997b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.882225"^^xsd:dateTime ;
    ns1:object "NLP library developed by Baidu based on PaddlePaddle, offering Chinese and multilingual support."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/956922acae22f21b82ce000e45d4739baf3f94e8b6eb2825a93166a8ccfc2fbf> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.138069"^^xsd:dateTime ;
    ns1:object "esnli"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cafa6cfd9a4170cbf6a99f2d8b42715517f11068dc92b807e31dad9ab0535893> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object """deepmind/aqua_rat - 'tokenized' subset

Additional information:
- 3 splits: train, test, validation"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "tf"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.46446700394153595"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The maintainer of the model is DeepGHS Team."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "raw_splits"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.451100"^^xsd:dateTime ;
    ns1:object "model-index"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.634626030921936"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.097599"^^xsd:dateTime ;
    ns1:object "transformers"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/43bc0319b35edce6a819b7513d5d158c1ea9bd4b7e1f558fabd51fb09b4f7755> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.807759"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.800866"^^xsd:dateTime ;
    ns1:object "{'name': 'Zhuyun Dai', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5775845348834991"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.806834"^^xsd:dateTime ;
    ns1:object "cs.LG"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5870541334152222"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.883146"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b07372cae2aaf834044064c3f58684a47c8f4685d11fccf85dbb95dac4dc7141> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "es"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.855902"^^xsd:dateTime ;
    ns1:object "Library providing pretrained models for NLP and CV tasks, with implementations in PyTorch and TensorFlow."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/untranslated_description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.800386"^^xsd:dateTime ;
    ns1:object "{'name': 'Siddhartha Brahma', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.870912"^^xsd:dateTime ;
    ns1:object "NeMo"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6b75cb265aea0eff37651595203eec38a2a621d81df99e4cfcd5f30cef590384> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2023-10-10T18:01:54+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.098210"^^xsd:dateTime ;
    ns1:object "tensorboard"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.845468"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5f8c97c4aaca5a8c6afac1954a68be2dcb40698e64871f37e5fe5dc5849a3aab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base.en> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.875450"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bbf4caca758174ac9ca1258e1174d6c6d75a330218b88807385547a31f8229ab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/lachiewyoung/test-mistral-7b"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9773f8d647166503d14c7a05030b47d6b1610f17bdd55e8c98cb4fc2b13a3379> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.869598"^^xsd:dateTime ;
    ns1:object "Array framework for machine learning on Apple silicon, designed for efficiency and ease of use."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85b6833a0e3a566c8de87c0f42b57ec97f67e03180245edb416823e240ee11d1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/Xinging/llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.836364"^^xsd:dateTime ;
    ns1:object "Image to 3D"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fd4e2f28de7e36539eda0f2e74a9e9b30f10d77fee3b927dc3aa5419c43369da> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.782729"^^xsd:dateTime ;
    ns1:object "{'name': 'Tao Xu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.784309"^^xsd:dateTime ;
    ns1:object "2023-07-18"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.828836"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/output> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.871976"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55f0c4818716a5c86a051b41b27450e6f00f7e81d8a89b0f3bd6928719ce08e4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object """---
license: mit
datasets:
- CyberHarem/chokai_azurlane
pipeline_tag: text-to-image
tags:
- art
---

# Lora of chokai_azurlane

This model is trained with [HCP-Diffusion](https://github.com/7eu7d7/HCP-Diffusion). And the auto-training framework is maintained by [DeepGHS Team](https://huggingface.co/deepghs).

After downloading the pt and safetensors files for the specified step, you need to use them simultaneously. The pt file will be used as an embedding, while the safetensors file will be loaded for Lora.

For example, if you want to use the model from step 1500, you need to download `1500/chokai_azurlane.pt` as the embedding and `1500/chokai_azurlane.safetensors` for loading Lora. By using both files together, you can generate images for the desired characters.

**The trigger word is `chokai_azurlane`.**

These are available steps:

|   Steps | bikini                                   | free                                 | nude                                           | Download                             |
|--------:|:-----------------------------------------|:-------------------------------------|:-----------------------------------------------|:-------------------------------------|
|    1500 | ![bikini-1500](1500/previews/bikini.png) | ![free-1500](1500/previews/free.png) | [<NSFW, click to see>](1500/previews/nude.png) | [Download](1500/chokai_azurlane.zip) |
|    1400 | ![bikini-1400](1400/previews/bikini.png) | ![free-1400](1400/previews/free.png) | [<NSFW, click to see>](1400/previews/nude.png) | [Download](1400/chokai_azurlane.zip) |
|    1300 | ![bikini-1300](1300/previews/bikini.png) | ![free-1300](1300/previews/free.png) | [<NSFW, click to see>](1300/previews/nude.png) | [Download](1300/chokai_azurlane.zip) |
|    1200 | ![bikini-1200](1200/previews/bikini.png) | ![free-1200](1200/previews/free.png) | [<NSFW, click to see>](1200/previews/nude.png) | [Download](1200/chokai_azurlane.zip) |
|    1100 | ![bikini-1100](1100/previews/bikini.png) | ![free-1100](1100/previews/free.png) | [<NSFW, click to see>](1100/previews/nude.png) | [Download](1100/chokai_azurlane.zip) |
|    1000 | ![bikini-1000](1000/previews/bikini.png) | ![free-1000](1000/previews/free.png) | [<NSFW, click to see>](1000/previews/nude.png) | [Download](1000/chokai_azurlane.zip) |
|     900 | ![bikini-900](900/previews/bikini.png)   | ![free-900](900/previews/free.png)   | [<NSFW, click to see>](900/previews/nude.png)  | [Download](900/chokai_azurlane.zip)  |
|     800 | ![bikini-800](800/previews/bikini.png)   | ![free-800](800/previews/free.png)   | [<NSFW, click to see>](800/previews/nude.png)  | [Download](800/chokai_azurlane.zip)  |
|     700 | ![bikini-700](700/previews/bikini.png)   | ![free-700](700/previews/free.png)   | [<NSFW, click to see>](700/previews/nude.png)  | [Download](700/chokai_azurlane.zip)  |
|     600 | ![bikini-600](600/previews/bikini.png)   | ![free-600](600/previews/free.png)   | [<NSFW, click to see>](600/previews/nude.png)  | [Download](600/chokai_azurlane.zip)  |
|     500 | ![bikini-500](500/previews/bikini.png)   | ![free-500](500/previews/free.png)   | [<NSFW, click to see>](500/previews/nude.png)  | [Download](500/chokai_azurlane.zip)  |
|     400 | ![bikini-400](400/previews/bikini.png)   | ![free-400](400/previews/free.png)   | [<NSFW, click to see>](400/previews/nude.png)  | [Download](400/chokai_azurlane.zip)  |
|     300 | ![bikini-300](300/previews/bikini.png)   | ![free-300](300/previews/free.png)   | [<NSFW, click to see>](300/previews/nude.png)  | [Download](300/chokai_azurlane.zip)  |
|     200 | ![bikini-200](200/previews/bikini.png)   | ![free-200](200/previews/free.png)   | [<NSFW, click to see>](200/previews/nude.png)  | [Download](200/chokai_azurlane.zip)  |
|     100 | ![bikini-100](100/previews/bikini.png)   | ![free-100](100/previews/free.png)   | [<NSFW, click to see>](100/previews/nude.png)  | [Download](100/chokai_azurlane.zip)  |


"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.786021"^^xsd:dateTime ;
    ns1:object "{'name': 'Yasmine Babaei', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.696306437253952"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object schema:Organization ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c736da741f27fe816e63dbbfd53bc7e85fcc1276fc2e38ffea11708f1297d3b1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.807932"^^xsd:dateTime ;
    ns1:object "Mistral 7B"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "pa"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sd"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw/question> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.450522"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dabb9d310d39a47f81f009cd476a41773667de14be41c930213432a06ad59fb0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.800226"^^xsd:dateTime ;
    ns1:object "{'name': 'Mostafa Dehghani', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/plain_text/domain> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7035151124000549"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Boolean ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/is_description_translated> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_rating> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "fr"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6760144233703613"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "mr"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object """---
license: apache-2.0
pipeline_tag: text-generation
tags:
- finetuned
inference: true
widget:
- messages:
  - role: user
    content: What is your favorite condiment?
---

# Model Card for Mistral-7B-Instruct-v0.2

The Mistral-7B-Instruct-v0.2 Large Language Model (LLM) is an improved instruct fine-tuned version of [Mistral-7B-Instruct-v0.1](https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.1).

For full details of this model please read our [paper](https://arxiv.org/abs/2310.06825) and [release blog post](https://mistral.ai/news/la-plateforme/).

## Instruction format

In order to leverage instruction fine-tuning, your prompt should be surrounded by `[INST]` and `[/INST]` tokens. The very first instruction should begin with a begin of sentence id. The next instructions should not. The assistant generation will be ended by the end-of-sentence token id.

E.g.
```
text = "<s>[INST] What is your favourite condiment? [/INST]"
"Well, I'm quite partial to a good squeeze of fresh lemon juice. It adds just the right amount of zesty flavour to whatever I'm cooking up in the kitchen!</s> "
"[INST] Do you have mayonnaise recipes? [/INST]"
```

This format is available as a [chat template](https://huggingface.co/docs/transformers/main/chat_templating) via the `apply_chat_template()` method:

```python
from transformers import AutoModelForCausalLM, AutoTokenizer

device = "cuda" # the device to load the model onto

model = AutoModelForCausalLM.from_pretrained("mistralai/Mistral-7B-Instruct-v0.2")
tokenizer = AutoTokenizer.from_pretrained("mistralai/Mistral-7B-Instruct-v0.2")

messages = [
    {"role": "user", "content": "What is your favourite condiment?"},
    {"role": "assistant", "content": "Well, I'm quite partial to a good squeeze of fresh lemon juice. It adds just the right amount of zesty flavour to whatever I'm cooking up in the kitchen!"},
    {"role": "user", "content": "Do you have mayonnaise recipes?"}
]

encodeds = tokenizer.apply_chat_template(messages, return_tensors="pt")

model_inputs = encodeds.to(device)
model.to(device)

generated_ids = model.generate(model_inputs, max_new_tokens=1000, do_sample=True)
decoded = tokenizer.batch_decode(generated_ids)
print(decoded[0])
```

## Model Architecture
This instruction model is based on Mistral-7B-v0.1, a transformer model with the following architecture choices:
- Grouped-Query Attention
- Sliding-Window Attention
- Byte-fallback BPE tokenizer

## Troubleshooting
- If you see the following error:
```
Traceback (most recent call last):
File "", line 1, in
File "/transformers/models/auto/auto_factory.py", line 482, in from_pretrained
config, kwargs = AutoConfig.from_pretrained(
File "/transformers/models/auto/configuration_auto.py", line 1022, in from_pretrained
config_class = CONFIG_MAPPING[config_dict["model_type"]]
File "/transformers/models/auto/configuration_auto.py", line 723, in getitem
raise KeyError(key)
KeyError: 'mistral'
```

Installing transformers from source should solve the issue
pip install git+https://github.com/huggingface/transformers

This should not be required after transformers-v4.33.4.

## Limitations

The Mistral 7B Instruct model is a quick demonstration that the base model can be easily fine-tuned to achieve compelling performance. 
It does not have any moderation mechanisms. We're looking forward to engaging with the community on ways to
make the model finely respect guardrails, allowing for deployment in environments requiring moderated outputs.

## The Mistral AI Team

Albert Jiang, Alexandre Sablayrolles, Arthur Mensch, Blanche Savary, Chris Bamford, Devendra Singh Chaplot, Diego de las Casas, Emma Bou Hanna, Florian Bressand, Gianna Lengyel, Guillaume Bour, Guillaume Lample, Lélio Renard Lavaud, Louis Ternon, Lucile Saulnier, Marie-Anne Lachaux, Pierre Stock, Teven Le Scao, Théophile Gervet, Thibaut Lavril, Thomas Wang, Timothée Lacroix, William El Sayed."""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sa"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/CyberHarem/chokai_azurlane/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.794809"^^xsd:dateTime ;
    ns1:object "{'name': 'Ross Taylor', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'memory_limit_bytes' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/memory_limit_bytes> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sv"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.781285"^^xsd:dateTime ;
    ns1:object "2022-12-06"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.097430"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized/question> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "cs"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "tf"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.815565"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/86f52aa6369c70ec009cd27198c0d2e52782b473507c01a7426d4c1bf4185e05> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.819670"^^xsd:dateTime ;
    ns1:object "Models with documented carbon footprint information related to their training process."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2f45196854d69c3bcc21304aceb64e2a3db2d17613399d7d3c7a21611573a4d5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "de"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.813242"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df3db739a5d22c6a5829694aeecdedee4e20b5804f1345689c8abd3350883e54> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.812502"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6b72a43d7396497fe9733cb91a9e688db073b7c1c583e2c5fca339bd414a4dac> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.839925"^^xsd:dateTime ;
    ns1:object "Provides answers to questions based on given context."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6fa5b295a0420d9a3cc819e672ebdd61720c48761f8c2960d28ff7f7655875be> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.137117"^^xsd:dateTime ;
    ns1:object "gsm8k"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6193495392799377"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.786214"^^xsd:dateTime ;
    ns1:object "{'name': 'Nikolay Bashlykov', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/a7eca72cd0a3a0ce30e3b37b299034e8cf2e3b921a7deaf54545b7d00e88c5e4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.865209"^^xsd:dateTime ;
    ns1:object "Simple framework for state-of-the-art NLP supporting tasks like named entity recognition and part-of-speech tagging."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6fd4d85e3416654bf33d9c5f3803b3e9900ce78a6309e4e6a84b2499ad4b7981> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'public_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6325279772281647"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.839756"^^xsd:dateTime ;
    ns1:object "Question Answering"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6fa5b295a0420d9a3cc819e672ebdd61720c48761f8c2960d28ff7f7655875be> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.802095"^^xsd:dateTime ;
    ns1:object "{'name': 'Dasha Valter', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5650996565818787"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The author of this content is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.802277"^^xsd:dateTime ;
    ns1:object "{'name': 'Sharan Narang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.822999"^^xsd:dateTime ;
    ns1:object "Models based on XLM-RoBERTa, a cross-lingual version of RoBERTa pretrained on text from 100 languages for multilingual understanding."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/43625c04f736f13b1f357a0d9357ed3dbc8e216e352796b03fb0fa69aea1f93b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.843542"^^xsd:dateTime ;
    ns1:object "Extracts meaningful features from input data for downstream tasks."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/746e796ec31ad9ad2b517555a4e91b2e3dfff187021fd0255aae50476624430d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6614397466182709"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "ko"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.863689"^^xsd:dateTime ;
    ns1:object "sample-factory"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/15ceeb8703c6ba669411911c62acbbac38f4d1235e8ac6118537ac1e6d75ae84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/07456871ec04ff7e102a14a63ee4f77775baadaf5e404b74e2ab827a14335259> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "de"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/main/answer> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6634704768657684"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.843285"^^xsd:dateTime ;
    ns1:object "Feature Extraction"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/746e796ec31ad9ad2b517555a4e91b2e3dfff187021fd0255aae50476624430d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "license:apache-2.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/public_tests/output"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "bn"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "yi"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/google/flan-t5-small"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.649557888507843"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "apache-2.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/private_tests/input"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "da"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.826474"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/40e5b840897abb6f44300acdb8df19e9ba787840ae3899b5cff54ee848bd4df6> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.845641"^^xsd:dateTime ;
    ns1:object "Sentence Similarity"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5f8c97c4aaca5a8c6afac1954a68be2dcb40698e64871f37e5fe5dc5849a3aab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "fr"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.811952"^^xsd:dateTime ;
    ns1:object "{'name': 'Timothée Lacroix', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.142750"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6003443002700806"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/openai/whisper-base"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "base_model:meta-llama/Llama-2-7b-hf"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.164062"^^xsd:dateTime ;
    ns1:object "jax"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Split to which the example belongs to."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.41058172285556793"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.874645"^^xsd:dateTime ;
    ns1:object "Open-source implementation of CLIP (Contrastive Language-Image Pre-Training) models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a0e0c1ddbfc3fa3aaab6bbd4ee4022410d9adc63e05996f59a545a7929aaf019> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.789450"^^xsd:dateTime ;
    ns1:object "{'name': 'Saghar Hosseini', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.413249"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/863d9e15edc2c98657749abae884b48544051490f76ea0e913adf85a3f2727a5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.833412"^^xsd:dateTime ;
    ns1:object "Zero Shot Image Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/427579e1091b3a9a3bf55b54c4167319ee1e7fd37d7a1389722fcb73d6a8901c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6284680664539337"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.792208"^^xsd:dateTime ;
    ns1:object "{'name': 'Todor Mihaylov', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6794083118438721"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/main_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/key> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.795624"^^xsd:dateTime ;
    ns1:object "{'name': 'Iliyan Zarov', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6223327219486237"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.820862"^^xsd:dateTime ;
    ns1:object "Architecture where multiple specialized sub-models (experts) are conditionally activated based on input."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/35d7d276230081bdfd86d06ca958126011d6a7e381452a488c2bfa8fcc512fdb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6164036989212036"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.218026"^^xsd:dateTime ;
    ns1:object "hf-asr-leaderboard"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8e9892e571845c79509180a69a268f19c0592a4e975a5fd3e16f2059af61ea75> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.800707"^^xsd:dateTime ;
    ns1:object "{'name': 'Shixiang Shane Gu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.192880"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f57740f97820ddb55f90898c07a60a736e9a9030d5eac125af5c595ad0638c8f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object "Column 'domain' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/domain> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.408243"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5055184066295624"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.079262"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/meta-llama/Llama-2-7b-hf> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/35ddc796a6d136e9bf8810f1907a6a31657c5fb80bef078ab577c5edc3f59cc0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.845249"^^xsd:dateTime ;
    ns1:object "Predicts missing words or tokens in masked text."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a464d85abf29c8b2f8dc299e9fe390a547c8450e42b7ab0ccaac88fdcaeaaa84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "ko"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "tk"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object "plain_text/split"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.097763"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.807012"^^xsd:dateTime ;
    ns1:object "{'name': 'Alexandre Lacoste', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "si"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/meta-llama/Llama-2-7b-hf> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/fadbdd40ae3e4d21fb8044995368c36935104a0e589c0bb691d566a182b91295> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.197258"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.810115"^^xsd:dateTime ;
    ns1:object "{'name': 'Florian Bressand', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.866280"^^xsd:dateTime ;
    ns1:object "Transformers.js"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5670ef7e87a4fbee3fa95024561f672fca6cc6a159a62e20ed73b98d267a72bd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ha"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2025-02-07T15:09:13+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ar"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/83f6b13508bdbd7f513cbd6de7ef5170638d3e63612800f251838bd8e03c995e> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.814274"^^xsd:dateTime ;
    ns1:object "AutoTrain Compatible"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/59b663660275b892172a573e140e5eeec1a75e54c1838aea8d6f78d0f6286eba> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "no"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/difficulty> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4721503257751465"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the contributors or authors of the model. Therefore, the answer is \"Information not found\"."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6462405920028687"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.864566"^^xsd:dateTime ;
    ns1:object "Efficient framework for few-shot text classification using Sentence Transformers."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9db08d1a554609ae7c645781f30f4c335c5142d3c63fde5964e29f8a404c9566> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "hi"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "so"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Split to which the example belongs to."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.174540"^^xsd:dateTime ;
    ns1:object "CyberHarem/chokai_azurlane"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fadbdd40ae3e4d21fb8044995368c36935104a0e589c0bb691d566a182b91295> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ko"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.867230"^^xsd:dateTime ;
    ns1:object "Industrial-strength NLP library with pre-trained models and support for 65+ languages."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5c6c7a9e81be05e126c2ff79f262747bcaa13dce4de3db78679e947f541d5911> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.201050"^^xsd:dateTime ;
    ns1:object "automatic speech recognition"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.873314"^^xsd:dateTime ;
    ns1:object "TF Lite"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6bffbd25ee4f19a8e55b6c7f32040744865e1e7d74080964d19fac6f207948c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "lv"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/difficulty> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "gl"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'private_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.822761"^^xsd:dateTime ;
    ns1:object "xlm-roberta"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/43625c04f736f13b1f357a0d9357ed3dbc8e216e352796b03fb0fa69aea1f93b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6044186651706696"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.45261070132255554"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object """The software requirements for the model are as follows:

- Transformers 4.46.1
- Pytorch 2.4.0+cu121
- Datasets 2.20.0
- Tokenizers 0.20.3

These are the required software dependencies for the model."""^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'rationale' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/google/flan-t5-small> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/63c4690edf3557f17b07f48296b33ccc383956a845d01233d59d9e359bf38c99> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "fr"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object schema:Dataset ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "raw/rationale"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/google/flan-t5-small> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "is"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6609750390052795"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "2022-09-26T06:58:29+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.078934"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/MLModel> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/35ddc796a6d136e9bf8810f1907a6a31657c5fb80bef078ab577c5edc3f59cc0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.858901"^^xsd:dateTime ;
    ns1:object "Parameter-Efficient Fine-Tuning methods that enable efficient adaptation of pre-trained language models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f83566aa690a65900e25f19b29d427ae3a9b752766d6d3892299a866feca3edd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.827646"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c6a31d1f7013eb41349bc590b0cc16d51b0a1706fa3f70c1337a8eecf06d2173> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.844900"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a464d85abf29c8b2f8dc299e9fe390a547c8450e42b7ab0ccaac88fdcaeaaa84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.134970"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4a958b2cddc6f3096d3a4e912c3bf694e8c132edcdb79366c6a34dff81cbbc7b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.820475"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/35d7d276230081bdfd86d06ca958126011d6a7e381452a488c2bfa8fcc512fdb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.413645"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/openai"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/863d9e15edc2c98657749abae884b48544051490f76ea0e913adf85a3f2727a5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Split> ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6127393841743469"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6510063409805298"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The model category is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6032304763793945"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The context provided does not contain information about the model category."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'question' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.864275"^^xsd:dateTime ;
    ns1:object "setfit"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9db08d1a554609ae7c645781f30f4c335c5142d3c63fde5964e29f8a404c9566> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.835606"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dc96ea445d125873bc02183accca8dffafbc58c6100167ef5b113919f5afb57e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.854790"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.862326"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a225e69a17f4be8c51cc1f1852c40371a478cfa95661008284bc676564a876e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "my"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.193033"^^xsd:dateTime ;
    ns1:object "text-to-image"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f57740f97820ddb55f90898c07a60a736e9a9030d5eac125af5c595ad0638c8f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ja"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.164792"^^xsd:dateTime ;
    ns1:object "multilingual"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1aa60aa9719223ac8750af1366d4a56166214022d0d069d1412225070d1275b9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/key> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "raw/correct"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.811165"^^xsd:dateTime ;
    ns1:object "{'name': 'Pierre Stock', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.859205"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a3c9ca93ab7ec29d067dd25733037f174c1326ef487292e5e1c9eea5cb35feb1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized/split> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.176640"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.138541"^^xsd:dateTime ;
    ns1:object "quasc"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/83f6b13508bdbd7f513cbd6de7ef5170638d3e63612800f251838bd8e03c995e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/time_limit/seconds"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/seconds> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.790927"^^xsd:dateTime ;
    ns1:object "{'name': 'Marie-Anne Lachaux', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object """---
library_name: transformers
license: other
base_model: meta-llama/Llama-2-7b-hf
tags:
- llama-factory
- full
- generated_from_trainer
model-index:
- name: llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096
  results: []
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096

This model is a fine-tuned version of [meta-llama/Llama-2-7b-hf](https://huggingface.co/meta-llama/Llama-2-7b-hf) on the 0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096 dataset.

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 2e-05
- train_batch_size: 32
- eval_batch_size: 8
- seed: 42
- distributed_type: multi-GPU
- num_devices: 4
- total_train_batch_size: 128
- total_eval_batch_size: 32
- optimizer: Use adamw_torch with betas=(0.9,0.999) and epsilon=1e-08 and optimizer_args=No additional optimizer arguments
- lr_scheduler_type: cosine
- lr_scheduler_warmup_ratio: 0.03
- num_epochs: 3.0

### Training results



### Framework versions

- Transformers 4.46.1
- Pytorch 2.4.0+cu121
- Datasets 2.20.0
- Tokenizers 0.20.3
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.799699"^^xsd:dateTime ;
    ns1:object "{'name': 'William Fedus', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.401229"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/759dcfce11b186065b46fb94fef1c569da9001c123861ba72ba0708e554bd6c4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "be"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.877830"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4acb0244517b271c7719eadb638a9049f7dfa43a14bf6eb119d83c2dbc6d856f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "pl"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.805688"^^xsd:dateTime ;
    ns1:object "Quantifying the Carbon Emissions of Machine Learning"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.831075"^^xsd:dateTime ;
    ns1:object "Unconditional Image Generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6803a9142550ca466078b0794746397f37034f277ce6f45bb7f252be171ab407> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.862498"^^xsd:dateTime ;
    ns1:object "Keras"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a225e69a17f4be8c51cc1f1852c40371a478cfa95661008284bc676564a876e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "be"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.841953"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/251690051accbb99d763e77f3aed9b94caecf82b9e2db7c17f8adfca42a4ca39> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.825319"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/45ef55138ac28324915f59dee5c5614894be22d29e2a8283b76835bcb91e3e87> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "hy"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5745015144348145"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6150646805763245"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the Mistral-7B-Instruct-v0.2 model are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.794312"^^xsd:dateTime ;
    ns1:object "{'name': 'Ranjan Subramanian', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.142912"^^xsd:dateTime ;
    ns1:object "text2text generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/lachiewyoung/test-mistral-7b> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.857410"^^xsd:dateTime ;
    ns1:object "Visualization toolkit for machine learning experiments that helps track metrics, visualize graphs, and explore embeddings."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/32934a13e4d01c327dbef8b4279d190d77f3095d7022f9465dc377bbb3565c94> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.202542"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8c29861cff92b34ba1887aa267cf20a6a2124ec092919b27c388fb31ecb5f269> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.875230"^^xsd:dateTime ;
    ns1:object "All-in-one toolkit for speech technology research, including ASR, speaker recognition, and speech enhancement."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d6f86ddd52b22c26a6970ea3473a2f8e657e9600a3cea6dd33e7307bf848d475> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4427180141210556"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the processor requirements for the application."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "split_name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ta"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.865483"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ef8c453c903ecc79a3f941fc76e3fb554c3c0e3459f4a7a1755e64539b934598> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "tr"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.449125"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/29d9051dd7490ee997ef15f45bf916274706268eab63f2c7bff767388d51cf25> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "uz"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5893460214138031"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object """Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the storage Requirements in the following text, here is a description of the property: (Storage requirements (free space required).) here are some related sections: Technical Specifications > Hardware

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase \""""^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.798719"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Splits for the socratic config."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.860922"^^xsd:dateTime ;
    ns1:object "A file format for efficiently storing and loading large language models with quantization options."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/934dea1e0796f0376db45e4b74e093aeb422ffdf79cf5c4aaea1e5e84969c76e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.852418"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2f28cc27d9dac219caa56a5425741f7391153065f1558fe7418d6ccc1c598fb4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "nn"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/83f6b13508bdbd7f513cbd6de7ef5170638d3e63612800f251838bd8e03c995e> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "az"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "jw"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "split_name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.100340"^^xsd:dateTime ;
    ns1:object "generated_from_trainer"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04151ef09fe56a2be18a7d842066720d6e7cee10ed5bf1a3363193444decd94d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.881853"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/956922acae22f21b82ce000e45d4739baf3f94e8b6eb2825a93166a8ccfc2fbf> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "apache-2.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.083050"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/Xinging"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f68885f104a68685936c980fdc14f386a9ccf26d5fa89b57ee217dbaf592e58a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.153373"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/1910.09700"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.217715"^^xsd:dateTime ;
    ns1:object "automatic-speech-recognition"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/07456871ec04ff7e102a14a63ee4f77775baadaf5e404b74e2ab827a14335259> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6868902146816254"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.098561"^^xsd:dateTime ;
    ns1:object "safetensors"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized/options> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.136301"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/deepmind/code_contests"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.803473"^^xsd:dateTime ;
    ns1:object "{'name': 'Hongkun Yu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.835780"^^xsd:dateTime ;
    ns1:object "Text to 3D"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dc96ea445d125873bc02183accca8dffafbc58c6100167ef5b113919f5afb57e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object """openai/gsm8k - 'main' subset

Additional information:
- 2 splits: train, test"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.112066"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f5a6a15b057055acaed46aabd835cf3eb56fa2343723cec43da3298c6a298537> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.849067"^^xsd:dateTime ;
    ns1:object "Audio Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b9cbedab515a4ba3d4c78d2aaebae3eaaa730c9bfc49212dad2910d0f2c63595> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.857929"^^xsd:dateTime ;
    ns1:object "Diffusers"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d462b48c96b732d754a938aa86dbd16bfb7478ca5b0c1f1f006c611c112094e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Dataset ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "lt"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/source> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.854965"^^xsd:dateTime ;
    ns1:object "JAX"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "dataset:deepmind/code_contests"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "haw"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.879092"^^xsd:dateTime ;
    ns1:object "Framework for efficiently deploying models on Intelligence Processing Unit (IPU) hardware."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a2f3a1fe1480acaf0753eb2d5ef88519c7b81e26e6505fed6d5c93c3a5119a65> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6515412032604218"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The intended use of the Mistral-7B-Instruct-v0.2 model is not explicitly stated in the given context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.100493"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/61cce84de930f0da8c78ddef3203a2afac70cf5e46684f0407180738cd821965> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "t5"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "flan-t5-small"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/private_tests/output"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.400787"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/11ee21b926795a2b7d2cb2d939044519ace34ac86e6b6a59a47dcb4bba5eb7a4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.451889768242836"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Splits for the raw config."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/is_description_translated> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.840560"^^xsd:dateTime ;
    ns1:object "Zero Shot Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79765e8db24271bde7a56b897b0b6c389d5be642563652aae56b6253290a801e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object """cimec/lambada - 'plain_text' subset

Additional information:
- 3 splits: train, test, validation"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.867472"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e9f8dc5efdf686d003f27fc61cf3a0b9e5dbed094499e8e3332f5c535d686f3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.872885"^^xsd:dateTime ;
    ns1:object "Topic modeling technique that leverages BERT embeddings and clustering for document topic extraction."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/316fd1b6c56f67729f7e0880d91953804a9af869ce76b2906f26f3d534937931> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6373358964920044"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The software requirements for the Mistral-7B-Instruct-v0.2 model are not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.861502"^^xsd:dateTime ;
    ns1:object "Unity plugin that enables games and simulations to serve as environments for training intelligent agents."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/293ad034f899dc681b5be10c715f25c59fa7f5261f229b66d796246e10927354> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'name' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.882633"^^xsd:dateTime ;
    ns1:object "Habana"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c0097ccf601f8114782f9c0c86386c6c995d5b2e12eddde21fdd7251761ee1fd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.819315"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2f45196854d69c3bcc21304aceb64e2a3db2d17613399d7d3c7a21611573a4d5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.401661"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/32934a13e4d01c327dbef8b4279d190d77f3095d7022f9465dc377bbb3565c94> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.875055"^^xsd:dateTime ;
    ns1:object "speechbrain"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d6f86ddd52b22c26a6970ea3473a2f8e657e9600a3cea6dd33e7307bf848d475> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "he"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Organization ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/44d2e9d41b9d9f9819feb864a1a07b499ce696259552757d8bcdf74cfc53f4e7> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "tg"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.874882"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d6f86ddd52b22c26a6970ea3473a2f8e657e9600a3cea6dd33e7307bf848d475> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.848145"^^xsd:dateTime ;
    ns1:object "Audio to Audio"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21a4b3b0fe861021548d89e241eb815b3c147c6d12ec9eade6925be45bc78650> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sw"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.809626"^^xsd:dateTime ;
    ns1:object "{'name': 'Chris Bamford', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.788427"^^xsd:dateTime ;
    ns1:object "{'name': 'Wenyin Fu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.829633"^^xsd:dateTime ;
    ns1:object "Image toText"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/266c130bc128debb0db48b7a2e58c6423c7bafb2445fcccd68e2da192f3487d1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'question' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.862937"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3135ad7c615e157f80ecab1b96d4167d2e6c147b2e563721a652a5b56845418c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.815024"^^xsd:dateTime ;
    ns1:object "text-generation-inference"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "bo"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "lo"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.099523"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/97a327fc7cf14c750f068bdf3aab8cf61c95e2b04079bd1772d37c385f2b1088> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw/rationale> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.801914"^^xsd:dateTime ;
    ns1:object "{'name': 'Kevin Robinson', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4249875247478485"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "pl"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'rationale' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.797859"^^xsd:dateTime ;
    ns1:object "Scaling Instruction-Finetuned Language Models"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "mn"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.791797"^^xsd:dateTime ;
    ns1:object "{'name': 'Yuning Mao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.880718"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f398a6ed462d305d58506b378a7b488c448115a8aef746a62331a8435d54a72b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.873907"^^xsd:dateTime ;
    ns1:object "fastText"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/12855f71ca9ab0f85c6609885b9e912174c81e608da47e6448d968f757f5ab44> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "2023-07-13T16:16:13+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/8e9892e571845c79509180a69a268f19c0592a4e975a5fd3e16f2059af61ea75> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "tokenized/split"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "tk"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.834362"^^xsd:dateTime ;
    ns1:object "Creates masks for objects or regions in images."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8fd2e8ec655b6111cc83724fbc62c13d0c8b3442b1768b9bc35e0eceae0ebe85> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.817678"^^xsd:dateTime ;
    ns1:object "4-bit precision"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df2c9c7dc08f5514331c35b3bf3e4da58de6a14c0724dc40f90a3e588f9844dd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.798376"^^xsd:dateTime ;
    ns1:object "2022-10-20"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.853052"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b47d8ed02d0fc1a7d72d5d61255296300a82f2caa55dd809c63448bfdd9b4284> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/memory_limit_bytes"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/memory_limit_bytes> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.853973"^^xsd:dateTime ;
    ns1:object "Deep learning framework that provides tensor computation with GPU acceleration and automatic differentiation. Popular for research and production ML models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.651710718870163"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.730015367269516"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/socratic_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/key> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "dataset:lambada"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.42029084265232086"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.824037"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ddb15bfa0ef843723bc4c8a81ab1d826b1fc4ff36ed13faf8f8f3841261978b8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.483553946018219"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "hr"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.843771"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sn"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "arxiv:2212.04356"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/83f6b13508bdbd7f513cbd6de7ef5170638d3e63612800f251838bd8e03c995e> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "tt"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.116660"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.851846"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.816308"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6bdae8c542a61819acfd0767eb5e55cafba29955aaefd1261c204618a4d3a487> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.136144"^^xsd:dateTime ;
    ns1:object "deepmind/code_contests"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.780471"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.783735"^^xsd:dateTime ;
    ns1:object "Llama 2: Open Foundation and Fine-Tuned Chat Models"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.825493"^^xsd:dateTime ;
    ns1:object "Visual Question Answering"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/45ef55138ac28324915f59dee5c5614894be22d29e2a8283b76835bcb91e3e87> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6694968640804291"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5786862969398499"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/a7eca72cd0a3a0ce30e3b37b299034e8cf2e3b921a7deaf54545b7d00e88c5e4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "id"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/cf_contest_id> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object "Column 'text' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6569216251373291"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The author of this content is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sq"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.785417"^^xsd:dateTime ;
    ns1:object "{'name': 'Kevin Stone', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sr"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6435609459877014"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The information provided in the context does not contain the copyright holder for the Llama 2 model."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.082848"^^xsd:dateTime ;
    ns1:object "Xinging"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f68885f104a68685936c980fdc14f386a9ccf26d5fa89b57ee217dbaf592e58a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.127113"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ddb15bfa0ef843723bc4c8a81ab1d826b1fc4ff36ed13faf8f8f3841261978b8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ba"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.818902"^^xsd:dateTime ;
    ns1:object "Merge"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6726f6435b32ab359d8c48bd5f24d3180c4c1772a769d50d3b4c8cf8f0ecd46> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sa"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "hy"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.786730"^^xsd:dateTime ;
    ns1:object "{'name': 'Shruti Bhosale', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sw"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.802660"^^xsd:dateTime ;
    ns1:object "{'name': 'Adams Yu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.859438"^^xsd:dateTime ;
    ns1:object "stable-baselines3"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a3c9ca93ab7ec29d067dd25733037f174c1326ef487292e5e1c9eea5cb35feb1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "2024-02-29T10:26:57+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "so"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "nn"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.849948"^^xsd:dateTime ;
    ns1:object "Voice Activity Detection"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1759562ba5af131b8ba1cdb4e06a2cee5c1ebff35971610e6ef2eb585b413ef7> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.449368"^^xsd:dateTime ;
    ns1:object "audio"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/29d9051dd7490ee997ef15f45bf916274706268eab63f2c7bff767388d51cf25> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.192718"^^xsd:dateTime ;
    ns1:object "art"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ba386c19594b5e2c45538f0ad668a14203edcbe442437836169ed56795dd7abb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized/correct> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.135471"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9773f8d647166503d14c7a05030b47d6b1610f17bdd55e8c98cb4fc2b13a3379> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.826838"^^xsd:dateTime ;
    ns1:object "Predicts the depth of objects in images for 3D scene understanding."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/40e5b840897abb6f44300acdb8df19e9ba787840ae3899b5cff54ee848bd4df6> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.137915"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cafa6cfd9a4170cbf6a99f2d8b42715517f11068dc92b807e31dad9ab0535893> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ne"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.807182"^^xsd:dateTime ;
    ns1:object "{'name': 'Alexandra Luccioni', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6723964512348175"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.871415"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bc53f85f6e664d1c6ece992a9d80b2e0705d1b3c75028563adb2ed9f36aedec9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.781496"^^xsd:dateTime ;
    ns1:object "eess.AS"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object "split_name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sk"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.790261"^^xsd:dateTime ;
    ns1:object "{'name': 'Madian Khabsa', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "arxiv:2210.11416"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/source> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.192555"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ba386c19594b5e2c45538f0ad668a14203edcbe442437836169ed56795dd7abb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'public_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.787753"^^xsd:dateTime ;
    ns1:object "{'name': 'Guillem Cucurull', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6634704768657684"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "dataset:esnli"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object "Splits for the plain_text config."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.32997311651706696"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "th"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/seconds> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/meta-llama/Llama-2-7b-hf/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.789924"^^xsd:dateTime ;
    ns1:object "{'name': 'Marcin Kardas', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/output_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.858162"^^xsd:dateTime ;
    ns1:object "State-of-the-art library for diffusion models across multiple modalities like vision and audio."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d462b48c96b732d754a938aa86dbd16bfb7478ca5b0c1f1f006c611c112094e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/untranslated_description> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Organization ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8c47ad9f935d95019e8ffaaae3b458d998d1a068ef4d8dfec71b304f4e4b1d52> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.825661"^^xsd:dateTime ;
    ns1:object "Answers natural language questions about images."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/45ef55138ac28324915f59dee5c5614894be22d29e2a8283b76835bcb91e3e87> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.834630"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ab2624f913f0d530408cbfa25c29a33523a1a481ba19c3d46f91a6fac4e63844> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6220314204692841"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object """---
language:
- en
- zh
- de
- es
- ru
- ko
- fr
- ja
- pt
- tr
- pl
- ca
- nl
- ar
- sv
- it
- id
- hi
- fi
- vi
- he
- uk
- el
- ms
- cs
- ro
- da
- hu
- ta
- false
- th
- ur
- hr
- bg
- lt
- la
- mi
- ml
- cy
- sk
- te
- fa
- lv
- bn
- sr
- az
- sl
- kn
- et
- mk
- br
- eu
- is
- hy
- ne
- mn
- bs
- kk
- sq
- sw
- gl
- mr
- pa
- si
- km
- sn
- yo
- so
- af
- oc
- ka
- be
- tg
- sd
- gu
- am
- yi
- lo
- uz
- fo
- ht
- ps
- tk
- nn
- mt
- sa
- lb
- my
- bo
- tl
- mg
- as
- tt
- haw
- ln
- ha
- ba
- jw
- su
tags:
- audio
- automatic-speech-recognition
- hf-asr-leaderboard
widget:
- example_title: Librispeech sample 1
  src: https://cdn-media.huggingface.co/speech_samples/sample1.flac
- example_title: Librispeech sample 2
  src: https://cdn-media.huggingface.co/speech_samples/sample2.flac
pipeline_tag: automatic-speech-recognition
license: apache-2.0
model-index:
- name: whisper-base
  results:
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (clean)
      type: librispeech_asr
      config: clean
      split: test
      args:
        language: en
    metrics:
    - type: wer
      value: 5.008769117619326
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (other)
      type: librispeech_asr
      config: other
      split: test
      args:
        language: en
    metrics:
    - type: wer
      value: 12.84936273212057
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: Common Voice 11.0
      type: mozilla-foundation/common_voice_11_0
      config: hi
      split: test
      args:
        language: hi
    metrics:
    - type: wer
      value: 131
      name: Test WER
---

# Whisper

Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains **without** the need 
for fine-tuning.

Whisper was proposed in the paper [Robust Speech Recognition via Large-Scale Weak Supervision](https://arxiv.org/abs/2212.04356) 
by Alec Radford et al from OpenAI. The original code repository can be found [here](https://github.com/openai/whisper).

**Disclaimer**: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.

## Model details

Whisper is a Transformer based encoder-decoder model, also referred to as a _sequence-to-sequence_ model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. 

The models were trained on either English-only data or multilingual data. The English-only models were trained 
on the task of speech recognition. The multilingual models were trained on both speech recognition and speech 
translation. For speech recognition, the model predicts transcriptions in the *same* language as the audio. 
For speech translation, the model predicts transcriptions to a *different* language to the audio.

Whisper checkpoints come in five configurations of varying model sizes.
The smallest four are trained on either English-only or multilingual data.
The largest checkpoints are multilingual only. All ten of the pre-trained checkpoints 
are available on the [Hugging Face Hub](https://huggingface.co/models?search=openai/whisper). The 
checkpoints are summarised in the following table with links to the models on the Hub:

| Size     | Parameters | English-only                                         | Multilingual                                        |
|----------|------------|------------------------------------------------------|-----------------------------------------------------|
| tiny     | 39 M       | [✓](https://huggingface.co/openai/whisper-tiny.en)   | [✓](https://huggingface.co/openai/whisper-tiny)     |
| base     | 74 M       | [✓](https://huggingface.co/openai/whisper-base.en)   | [✓](https://huggingface.co/openai/whisper-base)     |
| small    | 244 M      | [✓](https://huggingface.co/openai/whisper-small.en)  | [✓](https://huggingface.co/openai/whisper-small)    |
| medium   | 769 M      | [✓](https://huggingface.co/openai/whisper-medium.en) | [✓](https://huggingface.co/openai/whisper-medium)   |
| large    | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large)    |
| large-v2 | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large-v2) |

# Usage

To transcribe audio samples, the model has to be used alongside a [`WhisperProcessor`](https://huggingface.co/docs/transformers/model_doc/whisper#transformers.WhisperProcessor).

The `WhisperProcessor` is used to:
1. Pre-process the audio inputs (converting them to log-Mel spectrograms for the model)
2. Post-process the model outputs (converting them from tokens to text)

The model is informed of which task to perform (transcription or translation) by passing the appropriate "context tokens". These context tokens 
are a sequence of tokens that are given to the decoder at the start of the decoding process, and take the following order:
1. The transcription always starts with the `<|startoftranscript|>` token
2. The second token is the language token (e.g. `<|en|>` for English)
3. The third token is the "task token". It can take one of two values: `<|transcribe|>` for speech recognition or `<|translate|>` for speech translation
4. In addition, a `<|notimestamps|>` token is added if the model should not include timestamp prediction

Thus, a typical sequence of context tokens might look as follows:
```
<|startoftranscript|> <|en|> <|transcribe|> <|notimestamps|>
```
Which tells the model to decode in English, under the task of speech recognition, and not to predict timestamps.

These tokens can either be forced or un-forced. If they are forced, the model is made to predict each token at 
each position. This allows one to control the output language and task for the Whisper model. If they are un-forced, 
the Whisper model will automatically predict the output langauge and task itself.

The context tokens can be set accordingly:

```python
model.config.forced_decoder_ids = WhisperProcessor.get_decoder_prompt_ids(language="english", task="transcribe")
```

Which forces the model to predict in English under the task of speech recognition.

## Transcription

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base")
>>> model.config.forced_decoder_ids = None

>>> # load dummy dataset and read audio files
>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]
>>> input_features = processor(sample["array"], sampling_rate=sample["sampling_rate"], return_tensors="pt").input_features 

>>> # generate token ids
>>> predicted_ids = model.generate(input_features)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=False)
['<|startoftranscript|><|en|><|transcribe|><|notimestamps|> Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.<|endoftext|>']

>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.']
```
The context tokens can be removed from the start of the transcription by setting `skip_special_tokens=True`.

### French to French 
The following example demonstrates French to French transcription by setting the decoder ids appropriately. 

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import Audio, load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base")
>>> forced_decoder_ids = processor.get_decoder_prompt_ids(language="french", task="transcribe")

>>> # load streaming dataset and read first audio sample
>>> ds = load_dataset("common_voice", "fr", split="test", streaming=True)
>>> ds = ds.cast_column("audio", Audio(sampling_rate=16_000))
>>> input_speech = next(iter(ds))["audio"]
>>> input_features = processor(input_speech["array"], sampling_rate=input_speech["sampling_rate"], return_tensors="pt").input_features

>>> # generate token ids
>>> predicted_ids = model.generate(input_features, forced_decoder_ids=forced_decoder_ids)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids)
['<|startoftranscript|><|fr|><|transcribe|><|notimestamps|> Un vrai travail intéressant va enfin être mené sur ce sujet.<|endoftext|>']

>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' Un vrai travail intéressant va enfin être mené sur ce sujet.']
```

## Translation 
Setting the task to "translate" forces the Whisper model to perform speech translation.

### French to English

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import Audio, load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base")
>>> forced_decoder_ids = processor.get_decoder_prompt_ids(language="french", task="translate")

>>> # load streaming dataset and read first audio sample
>>> ds = load_dataset("common_voice", "fr", split="test", streaming=True)
>>> ds = ds.cast_column("audio", Audio(sampling_rate=16_000))
>>> input_speech = next(iter(ds))["audio"]
>>> input_features = processor(input_speech["array"], sampling_rate=input_speech["sampling_rate"], return_tensors="pt").input_features

>>> # generate token ids
>>> predicted_ids = model.generate(input_features, forced_decoder_ids=forced_decoder_ids)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' A very interesting work, we will finally be given on this subject.']
```

## Evaluation

This code snippet shows how to evaluate Whisper Base on [LibriSpeech test-clean](https://huggingface.co/datasets/librispeech_asr):
 
```python
>>> from datasets import load_dataset
>>> from transformers import WhisperForConditionalGeneration, WhisperProcessor
>>> import torch
>>> from evaluate import load

>>> librispeech_test_clean = load_dataset("librispeech_asr", "clean", split="test")

>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base").to("cuda")

>>> def map_to_pred(batch):
>>>     audio = batch["audio"]
>>>     input_features = processor(audio["array"], sampling_rate=audio["sampling_rate"], return_tensors="pt").input_features
>>>     batch["reference"] = processor.tokenizer._normalize(batch['text'])
>>> 
>>>     with torch.no_grad():
>>>         predicted_ids = model.generate(input_features.to("cuda"))[0]
>>>     transcription = processor.decode(predicted_ids)
>>>     batch["prediction"] = processor.tokenizer._normalize(transcription)
>>>     return batch

>>> result = librispeech_test_clean.map(map_to_pred)

>>> wer = load("wer")
>>> print(100 * wer.compute(references=result["reference"], predictions=result["prediction"]))
5.082316555716899
```

## Long-Form Transcription

The Whisper model is intrinsically designed to work on audio samples of up to 30s in duration. However, by using a chunking 
algorithm, it can be used to transcribe audio samples of up to arbitrary length. This is possible through Transformers 
[`pipeline`](https://huggingface.co/docs/transformers/main_classes/pipelines#transformers.AutomaticSpeechRecognitionPipeline) 
method. Chunking is enabled by setting `chunk_length_s=30` when instantiating the pipeline. With chunking enabled, the pipeline 
can be run with batched inference. It can also be extended to predict sequence level timestamps by passing `return_timestamps=True`:

```python
>>> import torch
>>> from transformers import pipeline
>>> from datasets import load_dataset

>>> device = "cuda:0" if torch.cuda.is_available() else "cpu"

>>> pipe = pipeline(
>>>   "automatic-speech-recognition",
>>>   model="openai/whisper-base",
>>>   chunk_length_s=30,
>>>   device=device,
>>> )

>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]

>>> prediction = pipe(sample.copy(), batch_size=8)["text"]
" Mr. Quilter is the apostle of the middle classes, and we are glad to welcome his gospel."

>>> # we can also return timestamps for the predictions
>>> prediction = pipe(sample.copy(), batch_size=8, return_timestamps=True)["chunks"]
[{'text': ' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.',
  'timestamp': (0.0, 5.44)}]
```

Refer to the blog post [ASR Chunking](https://huggingface.co/blog/asr-chunking) for more details on the chunking algorithm.

## Fine-Tuning

The pre-trained Whisper model demonstrates a strong ability to generalise to different datasets and domains. However, 
its predictive capabilities can be improved further for certain languages and tasks through *fine-tuning*. The blog 
post [Fine-Tune Whisper with 🤗 Transformers](https://huggingface.co/blog/fine-tune-whisper) provides a step-by-step 
guide to fine-tuning the Whisper model with as little as 5 hours of labelled data.

### Evaluated Use

The primary intended users of these models are AI researchers studying robustness, generalization, capabilities, biases, and constraints of the current model. However, Whisper is also potentially quite useful as an ASR solution for developers, especially for English speech recognition. We recognize that once models are released, it is impossible to restrict access to only “intended” uses or to draw reasonable guidelines around what is or is not research.

The models are primarily trained and evaluated on ASR and speech translation to English tasks. They show strong ASR results in ~10 languages. They may exhibit additional capabilities, particularly if fine-tuned on certain tasks like voice activity detection, speaker classification, or speaker diarization but have not been robustly evaluated in these areas. We strongly recommend that users perform robust evaluations of the models in a particular context and domain before deploying them.

In particular, we caution against using Whisper models to transcribe recordings of individuals taken without their consent or purporting to use these models for any kind of subjective classification. We recommend against use in high-risk domains like decision-making contexts, where flaws in accuracy can lead to pronounced flaws in outcomes. The models are intended to transcribe and translate speech, use of the model for classification is not only not evaluated but also not appropriate, particularly to infer human attributes.


## Training Data

The models are trained on 680,000 hours of audio and the corresponding transcripts collected from the internet. 65% of this data (or 438,000 hours) represents English-language audio and matched English transcripts, roughly 18% (or 126,000 hours) represents non-English audio and English transcripts, while the final 17% (or 117,000 hours) represents non-English audio and the corresponding transcript. This non-English data represents 98 different languages. 

As discussed in [the accompanying paper](https://cdn.openai.com/papers/whisper.pdf), we see that performance on transcription in a given language is directly correlated with the amount of training data we employ in that language.


## Performance and Limitations

Our studies show that, over many existing ASR systems, the models exhibit improved robustness to accents, background noise, technical language, as well as zero shot translation from multiple languages into English; and that accuracy on speech recognition and translation is near the state-of-the-art level. 

However, because the models are trained in a weakly supervised manner using large-scale noisy data, the predictions may include texts that are not actually spoken in the audio input (i.e. hallucination). We hypothesize that this happens because, given their general knowledge of language, the models combine trying to predict the next word in audio with trying to transcribe the audio itself.

Our models perform unevenly across languages, and we observe lower accuracy on low-resource and/or low-discoverability languages or languages where we have less training data. The models also exhibit disparate performance on different accents and dialects of particular languages, which may include higher word error rate across speakers of different genders, races, ages, or other demographic criteria. Our full evaluation results are presented in [the paper accompanying this release](https://cdn.openai.com/papers/whisper.pdf). 

In addition, the sequence-to-sequence architecture of the model makes it prone to generating repetitive texts, which can be mitigated to some degree by beam search and temperature scheduling but not perfectly. Further analysis on these limitations are provided in [the paper](https://cdn.openai.com/papers/whisper.pdf). It is likely that this behavior and hallucinations may be worse on lower-resource and/or lower-discoverability languages.


## Broader Implications

We anticipate that Whisper models’ transcription capabilities may be used for improving accessibility tools. While Whisper models cannot be used for real-time transcription out of the box – their speed and size suggest that others may be able to build applications on top of them that allow for near-real-time speech recognition and translation. The real value of beneficial applications built on top of Whisper models suggests that the disparate performance of these models may have real economic implications.

There are also potential dual use concerns that come with releasing Whisper. While we hope the technology will be used primarily for beneficial purposes, making ASR technology more accessible could enable more actors to build capable surveillance technologies or scale up existing surveillance efforts, as the speed and accuracy allow for affordable automatic transcription and translation of large volumes of audio communication. Moreover, these models may have some capabilities to recognize specific individuals out of the box, which in turn presents safety concerns related both to dual use and disparate performance. In practice, we expect that the cost of transcription is not the limiting factor of scaling up surveillance projects.


### BibTeX entry and citation info
```bibtex
@misc{radford2022whisper,
  doi = {10.48550/ARXIV.2212.04356},
  url = {https://arxiv.org/abs/2212.04356},
  author = {Radford, Alec and Kim, Jong Wook and Xu, Tao and Brockman, Greg and McLeavey, Christine and Sutskever, Ilya},
  title = {Robust Speech Recognition via Large-Scale Weak Supervision},
  publisher = {arXiv},
  year = {2022},
  copyright = {arXiv.org perpetual, non-exclusive license}
}
```
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6583069562911987"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The context provided does not contain information about the processor requirements for running the application."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6738087236881256"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9773f8d647166503d14c7a05030b47d6b1610f17bdd55e8c98cb4fc2b13a3379> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6677097678184509"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "su"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "2024-01-22T17:55:08+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.43077245354652405"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ps"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.818074"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55c2ef29f4fc34014e7c41f2439cd686ebcc0bd4d1a02299b7491148b03bd06b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ml"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.38086286187171936"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ha"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'question' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.803293"^^xsd:dateTime ;
    ns1:object "{'name': 'Andrew Dai', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "tokenized/question"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.866967"^^xsd:dateTime ;
    ns1:object "spaCy"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5c6c7a9e81be05e126c2ff79f262747bcaa13dce4de3db78679e947f541d5911> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/meta-llama/Llama-2-7b-hf"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.848753"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b9cbedab515a4ba3d4c78d2aaebae3eaaa730c9bfc49212dad2910d0f2c63595> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.702912449836731"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object """To get started with the Mistral 7B Instruct model, follow these steps:

1. **Installation**: Ensure you have the necessary dependencies installed. You can install them using pip:
   ```bash
   pip install transformers
   ```

2. **Loading the Model**: Load the model using the `AutoModelForCausalLM` class from the `transformers` library:
   ```python
   from transformers import AutoModelForCausalLM, AutoTokenizer

   model_name = "mistralai/Mistral-7B-Instruct-v0.2"
   tokenizer = AutoTokenizer.from_pretrained(model_name)
   model = AutoModelForCausalLM.from_pretrained(model_name)
   ```

3. **Tokenizing Input**: Tokenize your input text using the tokenizer:
   ```python
   input_text = "Your input text here"
   inputs = tokenizer(input_text, return_tensors="pt")
   ```

4. **Generating Output**: Generate output using the model:
   ```python
   output = model.generate(**inputs)
   ```

5. **Decoding Output**: Decode the generated output to get the text:
   ```python
   output_text = tokenizer.decode(output[0], skip_special_tokens=True)
   print(output_text)
   ```

For more detailed instructions and examples, refer to the [official documentation](https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.2) or the [Hugging Face Transformers GitHub repository](https://github.com/huggingface/transformers).

**Uses:**

- **Direct Use**: The Mistral 7B Instruct model can be used directly for various tasks such as text generation, question answering, and more. It is designed to be easily fine-tuned for specific applications.

- **Fine-Tuning**: The model can be fine-tuned for specific tasks using the `Trainer` class from the `transformers` library. This allows for customization and adaptation to specific domains or datasets.

- **Moderation**: While the model does not have moderation mechanisms by default, it is designed to be easily fine-tuned to respect guardrails and can be used in environments requiring moderated outputs.

- **Deployment**: The model can be deployed in various environments, including cloud platforms and local servers, using the `transformers` library's deployment tools.

- **Community Engagement**: The community is encouraged to engage with the model and provide feedback on ways to make it more suitable for deployment in moderated environments."""^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'input_file' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/input_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object """---
language:
- en
tags:
- audio
- automatic-speech-recognition
- hf-asr-leaderboard
widget:
- example_title: Librispeech sample 1
  src: https://cdn-media.huggingface.co/speech_samples/sample1.flac
- example_title: Librispeech sample 2
  src: https://cdn-media.huggingface.co/speech_samples/sample2.flac
pipeline_tag: automatic-speech-recognition
license: apache-2.0
model-index:
- name: whisper-base.en
  results:
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (clean)
      type: librispeech_asr
      config: clean
      split: test
      args:
        language: en
    metrics:
    - type: wer
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (other)
      type: librispeech_asr
      config: other
      split: test
      args:
        language: en
    metrics:
    - type: wer
      value: 12.803978669490565
      name: Test WER
---

# Whisper

Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains **without** the need 
for fine-tuning.

Whisper was proposed in the paper [Robust Speech Recognition via Large-Scale Weak Supervision](https://arxiv.org/abs/2212.04356) 
by Alec Radford et al. from OpenAI. The original code repository can be found [here](https://github.com/openai/whisper).

**Disclaimer**: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.

## Model details

Whisper is a Transformer based encoder-decoder model, also referred to as a _sequence-to-sequence_ model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. 

The models were trained on either English-only data or multilingual data. The English-only models were trained 
on the task of speech recognition. The multilingual models were trained on both speech recognition and speech 
translation. For speech recognition, the model predicts transcriptions in the *same* language as the audio. 
For speech translation, the model predicts transcriptions to a *different* language to the audio.

Whisper checkpoints come in five configurations of varying model sizes.
The smallest four are trained on either English-only or multilingual data.
The largest checkpoints are multilingual only. All ten of the pre-trained checkpoints 
are available on the [Hugging Face Hub](https://huggingface.co/models?search=openai/whisper). The 
checkpoints are summarised in the following table with links to the models on the Hub:

| Size     | Parameters | English-only                                         | Multilingual                                        |
|----------|------------|------------------------------------------------------|-----------------------------------------------------|
| tiny     | 39 M       | [✓](https://huggingface.co/openai/whisper-tiny.en)   | [✓](https://huggingface.co/openai/whisper-tiny)     |
| base     | 74 M       | [✓](https://huggingface.co/openai/whisper-base.en)   | [✓](https://huggingface.co/openai/whisper-base)     |
| small    | 244 M      | [✓](https://huggingface.co/openai/whisper-small.en)  | [✓](https://huggingface.co/openai/whisper-small)    |
| medium   | 769 M      | [✓](https://huggingface.co/openai/whisper-medium.en) | [✓](https://huggingface.co/openai/whisper-medium)   |
| large    | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large)    |
| large-v2 | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large-v2) |

# Usage

This checkpoint is an *English-only* model, meaning it can be used for English speech recognition. Multilingual speech 
recognition or speech translation is possible through use of a multilingual checkpoint.

To transcribe audio samples, the model has to be used alongside a [`WhisperProcessor`](https://huggingface.co/docs/transformers/model_doc/whisper#transformers.WhisperProcessor).

The `WhisperProcessor` is used to:
1. Pre-process the audio inputs (converting them to log-Mel spectrograms for the model)
2. Post-process the model outputs (converting them from tokens to text)

## Transcription

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base.en")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base.en")

>>> # load dummy dataset and read audio files
>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]
>>> input_features = processor(sample["array"], sampling_rate=sample["sampling_rate"], return_tensors="pt").input_features 

>>> # generate token ids
>>> predicted_ids = model.generate(input_features)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=False)
['<|startoftranscript|><|notimestamps|> Mr. Quilter is the apostle of the middle classes, and we are glad to welcome his gospel.<|endoftext|>']

>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.']
```
The context tokens can be removed from the start of the transcription by setting `skip_special_tokens=True`.

## Evaluation

This code snippet shows how to evaluate Whisper base.en on [LibriSpeech test-clean](https://huggingface.co/datasets/librispeech_asr):
 
```python
>>> from datasets import load_dataset
>>> from transformers import WhisperForConditionalGeneration, WhisperProcessor
>>> import torch
>>> from evaluate import load

>>> librispeech_test_clean = load_dataset("librispeech_asr", "clean", split="test")

>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base.en")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base.en").to("cuda")

>>> def map_to_pred(batch):
>>>     audio = batch["audio"]
>>>     input_features = processor(audio["array"], sampling_rate=audio["sampling_rate"], return_tensors="pt").input_features
>>>     batch["reference"] = processor.tokenizer._normalize(batch['text'])
>>> 
>>>     with torch.no_grad():
>>>         predicted_ids = model.generate(input_features.to("cuda"))[0]
>>>     transcription = processor.decode(predicted_ids)
>>>     batch["prediction"] = processor.tokenizer._normalize(transcription)
>>>     return batch

>>> result = librispeech_test_clean.map(map_to_pred)

>>> wer = load("wer")
>>> print(100 * wer.compute(references=result["reference"], predictions=result["prediction"]))
4.271408904897505
```

## Long-Form Transcription

The Whisper model is intrinsically designed to work on audio samples of up to 30s in duration. However, by using a chunking 
algorithm, it can be used to transcribe audio samples of up to arbitrary length. This is possible through Transformers 
[`pipeline`](https://huggingface.co/docs/transformers/main_classes/pipelines#transformers.AutomaticSpeechRecognitionPipeline) 
method. Chunking is enabled by setting `chunk_length_s=30` when instantiating the pipeline. With chunking enabled, the pipeline 
can be run with batched inference. It can also be extended to predict sequence level timestamps by passing `return_timestamps=True`:

```python
>>> import torch
>>> from transformers import pipeline
>>> from datasets import load_dataset

>>> device = "cuda:0" if torch.cuda.is_available() else "cpu"

>>> pipe = pipeline(
>>>   "automatic-speech-recognition",
>>>   model="openai/whisper-base.en",
>>>   chunk_length_s=30,
>>>   device=device,
>>> )

>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]

>>> prediction = pipe(sample.copy(), batch_size=8)["text"]
" Mr. Quilter is the apostle of the middle classes, and we are glad to welcome his gospel."

>>> # we can also return timestamps for the predictions
>>> prediction = pipe(sample.copy(), batch_size=8, return_timestamps=True)["chunks"]
[{'text': ' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.',
  'timestamp': (0.0, 5.44)}]
```

Refer to the blog post [ASR Chunking](https://huggingface.co/blog/asr-chunking) for more details on the chunking algorithm.

## Fine-Tuning

The pre-trained Whisper model demonstrates a strong ability to generalise to different datasets and domains. However, 
its predictive capabilities can be improved further for certain languages and tasks through *fine-tuning*. The blog 
post [Fine-Tune Whisper with 🤗 Transformers](https://huggingface.co/blog/fine-tune-whisper) provides a step-by-step 
guide to fine-tuning the Whisper model with as little as 5 hours of labelled data.

### Evaluated Use

The primary intended users of these models are AI researchers studying robustness, generalization, capabilities, biases, and constraints of the current model. However, Whisper is also potentially quite useful as an ASR solution for developers, especially for English speech recognition. We recognize that once models are released, it is impossible to restrict access to only “intended” uses or to draw reasonable guidelines around what is or is not research.

The models are primarily trained and evaluated on ASR and speech translation to English tasks. They show strong ASR results in ~10 languages. They may exhibit additional capabilities, particularly if fine-tuned on certain tasks like voice activity detection, speaker classification, or speaker diarization but have not been robustly evaluated in these areas. We strongly recommend that users perform robust evaluations of the models in a particular context and domain before deploying them.

In particular, we caution against using Whisper models to transcribe recordings of individuals taken without their consent or purporting to use these models for any kind of subjective classification. We recommend against use in high-risk domains like decision-making contexts, where flaws in accuracy can lead to pronounced flaws in outcomes. The models are intended to transcribe and translate speech, use of the model for classification is not only not evaluated but also not appropriate, particularly to infer human attributes.


## Training Data

The models are trained on 680,000 hours of audio and the corresponding transcripts collected from the internet. 65% of this data (or 438,000 hours) represents English-language audio and matched English transcripts, roughly 18% (or 126,000 hours) represents non-English audio and English transcripts, while the final 17% (or 117,000 hours) represents non-English audio and the corresponding transcript. This non-English data represents 98 different languages. 

As discussed in [the accompanying paper](https://cdn.openai.com/papers/whisper.pdf), we see that performance on transcription in a given language is directly correlated with the amount of training data we employ in that language.


## Performance and Limitations

Our studies show that, over many existing ASR systems, the models exhibit improved robustness to accents, background noise, technical language, as well as zero shot translation from multiple languages into English; and that accuracy on speech recognition and translation is near the state-of-the-art level. 

However, because the models are trained in a weakly supervised manner using large-scale noisy data, the predictions may include texts that are not actually spoken in the audio input (i.e. hallucination). We hypothesize that this happens because, given their general knowledge of language, the models combine trying to predict the next word in audio with trying to transcribe the audio itself.

Our models perform unevenly across languages, and we observe lower accuracy on low-resource and/or low-discoverability languages or languages where we have less training data. The models also exhibit disparate performance on different accents and dialects of particular languages, which may include higher word error rate across speakers of different genders, races, ages, or other demographic criteria. Our full evaluation results are presented in [the paper accompanying this release](https://cdn.openai.com/papers/whisper.pdf). 

In addition, the sequence-to-sequence architecture of the model makes it prone to generating repetitive texts, which can be mitigated to some degree by beam search and temperature scheduling but not perfectly. Further analysis on these limitations are provided in [the paper](https://cdn.openai.com/papers/whisper.pdf). It is likely that this behavior and hallucinations may be worse on lower-resource and/or lower-discoverability languages.


## Broader Implications

We anticipate that Whisper models’ transcription capabilities may be used for improving accessibility tools. While Whisper models cannot be used for real-time transcription out of the box – their speed and size suggest that others may be able to build applications on top of them that allow for near-real-time speech recognition and translation. The real value of beneficial applications built on top of Whisper models suggests that the disparate performance of these models may have real economic implications.

There are also potential dual use concerns that come with releasing Whisper. While we hope the technology will be used primarily for beneficial purposes, making ASR technology more accessible could enable more actors to build capable surveillance technologies or scale up existing surveillance efforts, as the speed and accuracy allow for affordable automatic transcription and translation of large volumes of audio communication. Moreover, these models may have some capabilities to recognize specific individuals out of the box, which in turn presents safety concerns related both to dual use and disparate performance. In practice, we expect that the cost of transcription is not the limiting factor of scaling up surveillance projects.


### BibTeX entry and citation info
```bibtex
@misc{radford2022whisper,
  doi = {10.48550/ARXIV.2212.04356},
  url = {https://arxiv.org/abs/2212.04356},
  author = {Radford, Alec and Kim, Jong Wook and Xu, Tao and Brockman, Greg and McLeavey, Christine and Sutskever, Ilya},
  title = {Robust Speech Recognition via Large-Scale Weak Supervision},
  publisher = {arXiv},
  year = {2022},
  copyright = {arXiv.org perpetual, non-exclusive license}
}
```
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.876955"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5931df18dd0fa4a7991df9c03e52fe5074eee570f6c3e7b480947ec85d10c3a1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.838175"^^xsd:dateTime ;
    ns1:object "Token Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cb9bd15fb27d24d93383343fa6ee37e644b0a41da399de954b0a5cf93c7b3501> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base.en/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.838452"^^xsd:dateTime ;
    ns1:object "Labels individual tokens (words) in text with specific categories."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cb9bd15fb27d24d93383343fa6ee37e644b0a41da399de954b0a5cf93c7b3501> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2023-08-06T05:05:42+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.796108"^^xsd:dateTime ;
    ns1:object "{'name': 'Melanie Kambadur', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.884576"^^xsd:dateTime ;
    ns1:object "Python implementation of state-of-the-art variational autoencoders for generative modeling."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ee41d767ffa75d0037ac340fa59164645b363ea8891e2a3f815c644b81ea9fbd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.099867"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b751528b59fc7a0677c52c99b85d41f69866dad58deffdbf1e33a510f27bc2f5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "tl"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "tokenized/options"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.853414"^^xsd:dateTime ;
    ns1:object "Analyzes and learns from graph-structured data."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b47d8ed02d0fc1a7d72d5d61255296300a82f2caa55dd809c63448bfdd9b4284> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/incorrect_solutions"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/memory_limit_bytes> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.860355"^^xsd:dateTime ;
    ns1:object "Open Neural Network Exchange format that enables interoperability between different ML frameworks."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4e5443728f51b2323bf3a1c4a6a6d8612484cbca0a8b0beeb5fb0258d1df5196> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4592093974351883"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The copyright holder is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "th"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/29d9051dd7490ee997ef15f45bf916274706268eab63f2c7bff767388d51cf25> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/untranslated_description"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/untranslated_description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.824881"^^xsd:dateTime ;
    ns1:object "Image Text to Text"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/49bf7b39c8a2a4cb84ab43bc3c320de6e0c1da1253ebf022a5d0a84737581119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ca"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "socratic_splits"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.884893"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/145a1db14402ffd2d346a7bf50e3e9e8c75169383a079480e9ba655e5e2fab8a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/Xinging/llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.827426"^^xsd:dateTime ;
    ns1:object "Categorizes images into predefined classes or labels."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/25a48b7b32ec31051c00ea96f30d1637f216eb0ed7620da77d06c4637ab5da7f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.858442"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f83566aa690a65900e25f19b29d427ae3a9b752766d6d3892299a866feca3edd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.099700"^^xsd:dateTime ;
    ns1:object "llama-factory"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/97a327fc7cf14c750f068bdf3aab8cf61c95e2b04079bd1772d37c385f2b1088> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f68885f104a68685936c980fdc14f386a9ccf26d5fa89b57ee217dbaf592e58a> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.600808709859848"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The storage requirements for the Mistral-7B-Instruct-v0.2 model are not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "kk"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ca"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/socratic/question> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.792585"^^xsd:dateTime ;
    ns1:object "{'name': 'Igor Molybog', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.816903"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d75a16357850d2896a768db42c912a9487fd97a50f3358217d5bbb602c39b195> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ne"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6698363125324249"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Split> ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2024-03-04T01:31:41+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.808444"^^xsd:dateTime ;
    ns1:object "2023-10-10"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "fa"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/907291d3b7300a7e84345915ff883a4d8615166ada0751e1be974994397ea77a> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/79cf083846a8329d2912fcd7f375233c37a54917af291bb945f0b58bc735b8ad> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.820691"^^xsd:dateTime ;
    ns1:object "Mixture of Experts"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/35d7d276230081bdfd86d06ca958126011d6a7e381452a488c2bfa8fcc512fdb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/input> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object """---
language:
- ko
license: apache-2.0
base_model: openai/whisper-base
tags:
- hf-asr-leaderboard
- generated_from_trainer
datasets:
- DianaJin/sample
model-index:
- name: jinkrsmodel
  results: []
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# jinkrsmodel

This model is a fine-tuned version of [openai/whisper-base](https://huggingface.co/openai/whisper-base) on the DianaJin/voice dataset.
It achieves the following results on the evaluation set:
- Loss: 1.2017
- Cer: 134.5133

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 1e-05
- train_batch_size: 16
- eval_batch_size: 8
- seed: 42
- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08
- lr_scheduler_type: linear
- lr_scheduler_warmup_steps: 5
- training_steps: 40
- mixed_precision_training: Native AMP

### Training results

| Training Loss | Epoch | Step | Validation Loss | Cer      |
|:-------------:|:-----:|:----:|:---------------:|:--------:|
| No log        | 3.33  | 10   | 2.1701          | 13.2743  |
| No log        | 6.67  | 20   | 1.3824          | 55.3097  |
| 1.7663        | 10.0  | 30   | 1.2305          | 164.1593 |
| 1.7663        | 13.33 | 40   | 1.2017          | 134.5133 |


### Framework versions

- Transformers 4.36.0.dev0
- Pytorch 2.1.0+cu118
- Datasets 2.15.0
- Tokenizers 0.15.0
"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "mk"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/language> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.802884"^^xsd:dateTime ;
    ns1:object "{'name': 'Vincent Zhao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sr"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "[{\"default_splits/split_name\":\"train\"},{\"default_splits/split_name\":\"test\"},{\"default_splits/split_name\":\"valid\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "it"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.831879"^^xsd:dateTime ;
    ns1:object "Video Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9132b663f2893be0a7b034405164be91c4fe250d2b1ecd3390fb9b9bd689997b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object """deepmind/aqua_rat - 'raw' subset

Additional information:
- 3 splits: train, test, validation"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/04151ef09fe56a2be18a7d842066720d6e7cee10ed5bf1a3363193444decd94d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.813988"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/59b663660275b892172a573e140e5eeec1a75e54c1838aea8d6f78d0f6286eba> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "base_model:finetune:openai/whisper-base"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/openai/whisper-base.en"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "license:mit"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5976539850234985"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.801201"^^xsd:dateTime ;
    ns1:object "{'name': 'Xinyun Chen', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object """deepmind/code_contests - 'default' subset (first 5GB)

Additional information:
- 3 splits: train, test, valid"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "fi"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "la"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "fa"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.863517"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/15ceeb8703c6ba669411911c62acbbac38f4d1235e8ac6118537ac1e6d75ae84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "el"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.797272"^^xsd:dateTime ;
    ns1:object "{'name': 'Sergey Edunov', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "tokenized_splits"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.138708"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/quasc"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/83f6b13508bdbd7f513cbd6de7ef5170638d3e63612800f251838bd8e03c995e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/seconds> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "km"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.805964"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/1910.09700"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6387893557548523"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6242067813873291"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.112285"^^xsd:dateTime ;
    ns1:object "lachiewyoung"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f5a6a15b057055acaed46aabd835cf3eb56fa2343723cec43da3298c6a298537> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.861160"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/293ad034f899dc681b5be10c715f25c59fa7f5261f229b66d796246e10927354> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ba386c19594b5e2c45538f0ad668a14203edcbe442437836169ed56795dd7abb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "gl"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.881055"^^xsd:dateTime ;
    ns1:object "Open-source NLP research library built on PyTorch for developing state-of-the-art models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f398a6ed462d305d58506b378a7b488c448115a8aef746a62331a8435d54a72b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.200889"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.884327"^^xsd:dateTime ;
    ns1:object "pythae"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ee41d767ffa75d0037ac340fa59164645b363ea8891e2a3f815c644b81ea9fbd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6917622685432434"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/main_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6714237630367279"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "hr"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.133532"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.847025"^^xsd:dateTime ;
    ns1:object "Generates audio content from textual descriptions."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/435f6e89d90ad4bd6be870aa7e1a66a9ce6bb4c201cdc1adf4aec7db47ff1148> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.138387"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/83f6b13508bdbd7f513cbd6de7ef5170638d3e63612800f251838bd8e03c995e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.138233"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/esnli"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cafa6cfd9a4170cbf6a99f2d8b42715517f11068dc92b807e31dad9ab0535893> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.836931"^^xsd:dateTime ;
    ns1:object "Image Feature Extraction"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/46fd5133284e3f6058330c31c628a6854b5eeb608d471e58c7052d9365f5acf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.852831"^^xsd:dateTime ;
    ns1:object "Applies AI for robot control, perception, and decision-making."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2f28cc27d9dac219caa56a5425741f7391153065f1558fe7418d6ccc1c598fb4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.127297"^^xsd:dateTime ;
    ns1:object "mistral"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ddb15bfa0ef843723bc4c8a81ab1d826b1fc4ff36ed13faf8f8f3841261978b8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.851619"^^xsd:dateTime ;
    ns1:object "Predicts continuous values from tabular data."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1054f9c274823fbeb3d1ab19d0f2344791cee18915cdb21fb1437bba03ba8fb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "dataset:svakulenk0/qrecc"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.830507"^^xsd:dateTime ;
    ns1:object "Transforms static images into video sequences."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7062dc4cfa463be9c92783a4d2c8abb9a4b37f71f4caef7c07cd6787e1843ed> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5632850527763367"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6479559242725372"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.805172"^^xsd:dateTime ;
    ns1:object "{'name': 'Jason Wei', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "bo"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.811352"^^xsd:dateTime ;
    ns1:object "{'name': 'Teven Le Scao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "mg"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.178364"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/907291d3b7300a7e84345915ff883a4d8615166ada0751e1be974994397ea77a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.855508"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6016317009925842"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "vi"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/key> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.866086"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5670ef7e87a4fbee3fa95024561f672fca6cc6a159a62e20ed73b98d267a72bd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.877462"^^xsd:dateTime ;
    ns1:object "Toolkit for optimizing and deploying deep learning models across Intel hardware."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5931df18dd0fa4a7991df9c03e52fe5074eee570f6c3e7b480947ec85d10c3a1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5411356389522552"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/CyberHarem/chokai_azurlane"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "hu"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.826652"^^xsd:dateTime ;
    ns1:object "Depth Estimation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/40e5b840897abb6f44300acdb8df19e9ba787840ae3899b5cff54ee848bd4df6> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6720621883869171"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.852634"^^xsd:dateTime ;
    ns1:object "Robotics"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2f28cc27d9dac219caa56a5425741f7391153065f1558fe7418d6ccc1c598fb4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6192722320556641"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "split_name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6971648633480072"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.784973"^^xsd:dateTime ;
    ns1:object "{'name': 'Hugo Touvron', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6636631488800049"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "eu"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/d24e90f006bf4dfce8be9dbaf9c92d1449f40b988b6cc52d60e48c40331dc607> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "af"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4167998731136322"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6723010241985321"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object "plain_text_splits"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sl"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/Xinging/llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.834179"^^xsd:dateTime ;
    ns1:object "Mask Generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8fd2e8ec655b6111cc83724fbc62c13d0c8b3442b1768b9bc35e0eceae0ebe85> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.134808"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/svakulenk0/qrecc"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.799379"^^xsd:dateTime ;
    ns1:object "{'name': 'Barret Zoph', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "base_model:openai/whisper-base"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "chokai_azurlane"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.865657"^^xsd:dateTime ;
    ns1:object "Adapters"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ef8c453c903ecc79a3f941fc76e3fb554c3c0e3459f4a7a1755e64539b934598> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/description> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.881458"^^xsd:dateTime ;
    ns1:object "SpanMarker"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/119bd2aa6d51fb076ddf89b0c5c2536f1550ff5bf549b11a6c834340b0979a14> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.127674"^^xsd:dateTime ;
    ns1:object "finetuned"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d24e90f006bf4dfce8be9dbaf9c92d1449f40b988b6cc52d60e48c40331dc607> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.799538"^^xsd:dateTime ;
    ns1:object "{'name': 'Yi Tay', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6535591781139374"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/solutions/solution"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.401013"^^xsd:dateTime ;
    ns1:object "facebook"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/11ee21b926795a2b7d2cb2d939044519ace34ac86e6b6a59a47dcb4bba5eb7a4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.845835"^^xsd:dateTime ;
    ns1:object "Measures how similar two sentences are semantically."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5f8c97c4aaca5a8c6afac1954a68be2dcb40698e64871f37e5fe5dc5849a3aab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.198448"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/DianaJin/sample"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/63c4690edf3557f17b07f48296b33ccc383956a845d01233d59d9e359bf38c99> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4544180780649185"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.178533"^^xsd:dateTime ;
    ns1:object "CyberHarem"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/907291d3b7300a7e84345915ff883a4d8615166ada0751e1be974994397ea77a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/public_tests/input"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.793598"^^xsd:dateTime ;
    ns1:object "{'name': 'Kalyan Saladi', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/incorrect_solutions/solution"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.805468"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.846056"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6839f153ace4a5cfe1e9a1cdb43c1bfc2260f4c85be0608af5ec84a75a205d2c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/Xinging/llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.782099"^^xsd:dateTime ;
    ns1:object "cs.SD"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "uk"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.800545"^^xsd:dateTime ;
    ns1:object "{'name': 'Albert Webson', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "arxiv:2212.04356"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.164634"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1aa60aa9719223ac8750af1366d4a56166214022d0d069d1412225070d1275b9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6312607824802399"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6937326490879059"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.844681"^^xsd:dateTime ;
    ns1:object "Transforms input text into a different textual form."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.840349"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79765e8db24271bde7a56b897b0b6c389d5be642563652aae56b6253290a801e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.789107"^^xsd:dateTime ;
    ns1:object "{'name': 'Naman Goyal', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object """---
language:
- en
- zh
- de
- es
- ru
- ko
- fr
- ja
- pt
- tr
- pl
- ca
- nl
- ar
- sv
- it
- id
- hi
- fi
- vi
- he
- uk
- el
- ms
- cs
- ro
- da
- hu
- ta
- false
- th
- ur
- hr
- bg
- lt
- la
- mi
- ml
- cy
- sk
- te
- fa
- lv
- bn
- sr
- az
- sl
- kn
- et
- mk
- br
- eu
- is
- hy
- ne
- mn
- bs
- kk
- sq
- sw
- gl
- mr
- pa
- si
- km
- sn
- yo
- so
- af
- oc
- ka
- be
- tg
- sd
- gu
- am
- yi
- lo
- uz
- fo
- ht
- ps
- tk
- nn
- mt
- sa
- lb
- my
- bo
- tl
- mg
- as
- tt
- haw
- ln
- ha
- ba
- jw
- su
tags:
- audio
- automatic-speech-recognition
- hf-asr-leaderboard
widget:
- example_title: Librispeech sample 1
  src: https://cdn-media.huggingface.co/speech_samples/sample1.flac
- example_title: Librispeech sample 2
  src: https://cdn-media.huggingface.co/speech_samples/sample2.flac
pipeline_tag: automatic-speech-recognition
license: apache-2.0
model-index:
- name: whisper-base
  results:
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (clean)
      type: librispeech_asr
      config: clean
      split: test
      args:
        language: en
    metrics:
    - type: wer
      value: 5.008769117619326
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (other)
      type: librispeech_asr
      config: other
      split: test
      args:
        language: en
    metrics:
    - type: wer
      value: 12.84936273212057
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: Common Voice 11.0
      type: mozilla-foundation/common_voice_11_0
      config: hi
      split: test
      args:
        language: hi
    metrics:
    - type: wer
      value: 131
      name: Test WER
---

# Whisper

Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains **without** the need 
for fine-tuning.

Whisper was proposed in the paper [Robust Speech Recognition via Large-Scale Weak Supervision](https://arxiv.org/abs/2212.04356) 
by Alec Radford et al from OpenAI. The original code repository can be found [here](https://github.com/openai/whisper).

**Disclaimer**: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.

## Model details

Whisper is a Transformer based encoder-decoder model, also referred to as a _sequence-to-sequence_ model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. 

The models were trained on either English-only data or multilingual data. The English-only models were trained 
on the task of speech recognition. The multilingual models were trained on both speech recognition and speech 
translation. For speech recognition, the model predicts transcriptions in the *same* language as the audio. 
For speech translation, the model predicts transcriptions to a *different* language to the audio.

Whisper checkpoints come in five configurations of varying model sizes.
The smallest four are trained on either English-only or multilingual data.
The largest checkpoints are multilingual only. All ten of the pre-trained checkpoints 
are available on the [Hugging Face Hub](https://huggingface.co/models?search=openai/whisper). The 
checkpoints are summarised in the following table with links to the models on the Hub:

| Size     | Parameters | English-only                                         | Multilingual                                        |
|----------|------------|------------------------------------------------------|-----------------------------------------------------|
| tiny     | 39 M       | [✓](https://huggingface.co/openai/whisper-tiny.en)   | [✓](https://huggingface.co/openai/whisper-tiny)     |
| base     | 74 M       | [✓](https://huggingface.co/openai/whisper-base.en)   | [✓](https://huggingface.co/openai/whisper-base)     |
| small    | 244 M      | [✓](https://huggingface.co/openai/whisper-small.en)  | [✓](https://huggingface.co/openai/whisper-small)    |
| medium   | 769 M      | [✓](https://huggingface.co/openai/whisper-medium.en) | [✓](https://huggingface.co/openai/whisper-medium)   |
| large    | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large)    |
| large-v2 | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large-v2) |

# Usage

To transcribe audio samples, the model has to be used alongside a [`WhisperProcessor`](https://huggingface.co/docs/transformers/model_doc/whisper#transformers.WhisperProcessor).

The `WhisperProcessor` is used to:
1. Pre-process the audio inputs (converting them to log-Mel spectrograms for the model)
2. Post-process the model outputs (converting them from tokens to text)

The model is informed of which task to perform (transcription or translation) by passing the appropriate "context tokens". These context tokens 
are a sequence of tokens that are given to the decoder at the start of the decoding process, and take the following order:
1. The transcription always starts with the `<|startoftranscript|>` token
2. The second token is the language token (e.g. `<|en|>` for English)
3. The third token is the "task token". It can take one of two values: `<|transcribe|>` for speech recognition or `<|translate|>` for speech translation
4. In addition, a `<|notimestamps|>` token is added if the model should not include timestamp prediction

Thus, a typical sequence of context tokens might look as follows:
```
<|startoftranscript|> <|en|> <|transcribe|> <|notimestamps|>
```
Which tells the model to decode in English, under the task of speech recognition, and not to predict timestamps.

These tokens can either be forced or un-forced. If they are forced, the model is made to predict each token at 
each position. This allows one to control the output language and task for the Whisper model. If they are un-forced, 
the Whisper model will automatically predict the output langauge and task itself.

The context tokens can be set accordingly:

```python
model.config.forced_decoder_ids = WhisperProcessor.get_decoder_prompt_ids(language="english", task="transcribe")
```

Which forces the model to predict in English under the task of speech recognition.

## Transcription

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base")
>>> model.config.forced_decoder_ids = None

>>> # load dummy dataset and read audio files
>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]
>>> input_features = processor(sample["array"], sampling_rate=sample["sampling_rate"], return_tensors="pt").input_features 

>>> # generate token ids
>>> predicted_ids = model.generate(input_features)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=False)
['<|startoftranscript|><|en|><|transcribe|><|notimestamps|> Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.<|endoftext|>']

>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.']
```
The context tokens can be removed from the start of the transcription by setting `skip_special_tokens=True`.

### French to French 
The following example demonstrates French to French transcription by setting the decoder ids appropriately. 

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import Audio, load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base")
>>> forced_decoder_ids = processor.get_decoder_prompt_ids(language="french", task="transcribe")

>>> # load streaming dataset and read first audio sample
>>> ds = load_dataset("common_voice", "fr", split="test", streaming=True)
>>> ds = ds.cast_column("audio", Audio(sampling_rate=16_000))
>>> input_speech = next(iter(ds))["audio"]
>>> input_features = processor(input_speech["array"], sampling_rate=input_speech["sampling_rate"], return_tensors="pt").input_features

>>> # generate token ids
>>> predicted_ids = model.generate(input_features, forced_decoder_ids=forced_decoder_ids)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids)
['<|startoftranscript|><|fr|><|transcribe|><|notimestamps|> Un vrai travail intéressant va enfin être mené sur ce sujet.<|endoftext|>']

>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' Un vrai travail intéressant va enfin être mené sur ce sujet.']
```

## Translation 
Setting the task to "translate" forces the Whisper model to perform speech translation.

### French to English

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import Audio, load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base")
>>> forced_decoder_ids = processor.get_decoder_prompt_ids(language="french", task="translate")

>>> # load streaming dataset and read first audio sample
>>> ds = load_dataset("common_voice", "fr", split="test", streaming=True)
>>> ds = ds.cast_column("audio", Audio(sampling_rate=16_000))
>>> input_speech = next(iter(ds))["audio"]
>>> input_features = processor(input_speech["array"], sampling_rate=input_speech["sampling_rate"], return_tensors="pt").input_features

>>> # generate token ids
>>> predicted_ids = model.generate(input_features, forced_decoder_ids=forced_decoder_ids)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' A very interesting work, we will finally be given on this subject.']
```

## Evaluation

This code snippet shows how to evaluate Whisper Base on [LibriSpeech test-clean](https://huggingface.co/datasets/librispeech_asr):
 
```python
>>> from datasets import load_dataset
>>> from transformers import WhisperForConditionalGeneration, WhisperProcessor
>>> import torch
>>> from evaluate import load

>>> librispeech_test_clean = load_dataset("librispeech_asr", "clean", split="test")

>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base").to("cuda")

>>> def map_to_pred(batch):
>>>     audio = batch["audio"]
>>>     input_features = processor(audio["array"], sampling_rate=audio["sampling_rate"], return_tensors="pt").input_features
>>>     batch["reference"] = processor.tokenizer._normalize(batch['text'])
>>> 
>>>     with torch.no_grad():
>>>         predicted_ids = model.generate(input_features.to("cuda"))[0]
>>>     transcription = processor.decode(predicted_ids)
>>>     batch["prediction"] = processor.tokenizer._normalize(transcription)
>>>     return batch

>>> result = librispeech_test_clean.map(map_to_pred)

>>> wer = load("wer")
>>> print(100 * wer.compute(references=result["reference"], predictions=result["prediction"]))
5.082316555716899
```

## Long-Form Transcription

The Whisper model is intrinsically designed to work on audio samples of up to 30s in duration. However, by using a chunking 
algorithm, it can be used to transcribe audio samples of up to arbitrary length. This is possible through Transformers 
[`pipeline`](https://huggingface.co/docs/transformers/main_classes/pipelines#transformers.AutomaticSpeechRecognitionPipeline) 
method. Chunking is enabled by setting `chunk_length_s=30` when instantiating the pipeline. With chunking enabled, the pipeline 
can be run with batched inference. It can also be extended to predict sequence level timestamps by passing `return_timestamps=True`:

```python
>>> import torch
>>> from transformers import pipeline
>>> from datasets import load_dataset

>>> device = "cuda:0" if torch.cuda.is_available() else "cpu"

>>> pipe = pipeline(
>>>   "automatic-speech-recognition",
>>>   model="openai/whisper-base",
>>>   chunk_length_s=30,
>>>   device=device,
>>> )

>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]

>>> prediction = pipe(sample.copy(), batch_size=8)["text"]
" Mr. Quilter is the apostle of the middle classes, and we are glad to welcome his gospel."

>>> # we can also return timestamps for the predictions
>>> prediction = pipe(sample.copy(), batch_size=8, return_timestamps=True)["chunks"]
[{'text': ' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.',
  'timestamp': (0.0, 5.44)}]
```

Refer to the blog post [ASR Chunking](https://huggingface.co/blog/asr-chunking) for more details on the chunking algorithm.

## Fine-Tuning

The pre-trained Whisper model demonstrates a strong ability to generalise to different datasets and domains. However, 
its predictive capabilities can be improved further for certain languages and tasks through *fine-tuning*. The blog 
post [Fine-Tune Whisper with 🤗 Transformers](https://huggingface.co/blog/fine-tune-whisper) provides a step-by-step 
guide to fine-tuning the Whisper model with as little as 5 hours of labelled data.

### Evaluated Use

The primary intended users of these models are AI researchers studying robustness, generalization, capabilities, biases, and constraints of the current model. However, Whisper is also potentially quite useful as an ASR solution for developers, especially for English speech recognition. We recognize that once models are released, it is impossible to restrict access to only “intended” uses or to draw reasonable guidelines around what is or is not research.

The models are primarily trained and evaluated on ASR and speech translation to English tasks. They show strong ASR results in ~10 languages. They may exhibit additional capabilities, particularly if fine-tuned on certain tasks like voice activity detection, speaker classification, or speaker diarization but have not been robustly evaluated in these areas. We strongly recommend that users perform robust evaluations of the models in a particular context and domain before deploying them.

In particular, we caution against using Whisper models to transcribe recordings of individuals taken without their consent or purporting to use these models for any kind of subjective classification. We recommend against use in high-risk domains like decision-making contexts, where flaws in accuracy can lead to pronounced flaws in outcomes. The models are intended to transcribe and translate speech, use of the model for classification is not only not evaluated but also not appropriate, particularly to infer human attributes.


## Training Data

The models are trained on 680,000 hours of audio and the corresponding transcripts collected from the internet. 65% of this data (or 438,000 hours) represents English-language audio and matched English transcripts, roughly 18% (or 126,000 hours) represents non-English audio and English transcripts, while the final 17% (or 117,000 hours) represents non-English audio and the corresponding transcript. This non-English data represents 98 different languages. 

As discussed in [the accompanying paper](https://cdn.openai.com/papers/whisper.pdf), we see that performance on transcription in a given language is directly correlated with the amount of training data we employ in that language.


## Performance and Limitations

Our studies show that, over many existing ASR systems, the models exhibit improved robustness to accents, background noise, technical language, as well as zero shot translation from multiple languages into English; and that accuracy on speech recognition and translation is near the state-of-the-art level. 

However, because the models are trained in a weakly supervised manner using large-scale noisy data, the predictions may include texts that are not actually spoken in the audio input (i.e. hallucination). We hypothesize that this happens because, given their general knowledge of language, the models combine trying to predict the next word in audio with trying to transcribe the audio itself.

Our models perform unevenly across languages, and we observe lower accuracy on low-resource and/or low-discoverability languages or languages where we have less training data. The models also exhibit disparate performance on different accents and dialects of particular languages, which may include higher word error rate across speakers of different genders, races, ages, or other demographic criteria. Our full evaluation results are presented in [the paper accompanying this release](https://cdn.openai.com/papers/whisper.pdf). 

In addition, the sequence-to-sequence architecture of the model makes it prone to generating repetitive texts, which can be mitigated to some degree by beam search and temperature scheduling but not perfectly. Further analysis on these limitations are provided in [the paper](https://cdn.openai.com/papers/whisper.pdf). It is likely that this behavior and hallucinations may be worse on lower-resource and/or lower-discoverability languages.


## Broader Implications

We anticipate that Whisper models’ transcription capabilities may be used for improving accessibility tools. While Whisper models cannot be used for real-time transcription out of the box – their speed and size suggest that others may be able to build applications on top of them that allow for near-real-time speech recognition and translation. The real value of beneficial applications built on top of Whisper models suggests that the disparate performance of these models may have real economic implications.

There are also potential dual use concerns that come with releasing Whisper. While we hope the technology will be used primarily for beneficial purposes, making ASR technology more accessible could enable more actors to build capable surveillance technologies or scale up existing surveillance efforts, as the speed and accuracy allow for affordable automatic transcription and translation of large volumes of audio communication. Moreover, these models may have some capabilities to recognize specific individuals out of the box, which in turn presents safety concerns related both to dual use and disparate performance. In practice, we expect that the cost of transcription is not the limiting factor of scaling up surveillance projects.


### BibTeX entry and citation info
```bibtex
@misc{radford2022whisper,
  doi = {10.48550/ARXIV.2212.04356},
  url = {https://arxiv.org/abs/2212.04356},
  author = {Radford, Alec and Kim, Jong Wook and Xu, Tao and Brockman, Greg and McLeavey, Christine and Sutskever, Ilya},
  title = {Robust Speech Recognition via Large-Scale Weak Supervision},
  publisher = {arXiv},
  year = {2022},
  copyright = {arXiv.org perpetual, non-exclusive license}
}
```
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.164441"^^xsd:dateTime ;
    ns1:object "text2text-generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e694cb482434e33f5aadafc7ba5607930722b2bd1b0cb252690679261c8692f4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/solution> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "es"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/lachiewyoung/test-mistral-7b> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object """---
library_name: transformers
license: other
base_model: meta-llama/Llama-2-7b-hf
tags:
- llama-factory
- full
- generated_from_trainer
model-index:
- name: llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096
  results: []
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096

This model is a fine-tuned version of [meta-llama/Llama-2-7b-hf](https://huggingface.co/meta-llama/Llama-2-7b-hf) on the 0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096 dataset.

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 2e-05
- train_batch_size: 32
- eval_batch_size: 8
- seed: 42
- distributed_type: multi-GPU
- num_devices: 4
- total_train_batch_size: 128
- total_eval_batch_size: 32
- optimizer: Use adamw_torch with betas=(0.9,0.999) and epsilon=1e-08 and optimizer_args=No additional optimizer arguments
- lr_scheduler_type: cosine
- lr_scheduler_warmup_ratio: 0.03
- num_epochs: 3.0

### Training results



### Framework versions

- Transformers 4.46.1
- Pytorch 2.4.0+cu121
- Datasets 2.20.0
- Tokenizers 0.20.3
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/63c4690edf3557f17b07f48296b33ccc383956a845d01233d59d9e359bf38c99> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.842312"^^xsd:dateTime ;
    ns1:object "Summarization"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/251690051accbb99d763e77f3aed9b94caecf82b9e2db7c17f8adfca42a4ca39> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2023-08-06T05:05:42+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.137761"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/aqua_rat"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "lo"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6581687033176422"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/main/split> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.829022"^^xsd:dateTime ;
    ns1:object "Text to Image"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.851111"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1054f9c274823fbeb3d1ab19d0f2344791cee18915cdb21fb1437bba03ba8fb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6139348149299622"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'generated_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.789607"^^xsd:dateTime ;
    ns1:object "{'name': 'Rui Hou', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.815772"^^xsd:dateTime ;
    ns1:object "text-embedding-inference"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/86f52aa6369c70ec009cd27198c0d2e52782b473507c01a7426d4c1bf4185e05> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7469770908355713"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6909572780132294"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.875625"^^xsd:dateTime ;
    ns1:object "Scikit-learn"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bbf4caca758174ac9ca1258e1174d6c6d75a330218b88807385547a31f8229ab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6654990613460541"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.100653"^^xsd:dateTime ;
    ns1:object "conversational"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/61cce84de930f0da8c78ddef3203a2afac70cf5e46684f0407180738cd821965> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "main"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/43bc0319b35edce6a819b7513d5d158c1ea9bd4b7e1f558fabd51fb09b4f7755> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object """ClassLabel column 'difficulty' from the Hugging Face parquet file.
Labels:
UNKNOWN_DIFFICULTY (0), EASY (1), MEDIUM (2), HARD (3), HARDER (4), HARDEST (5), EXTERNAL (6), A (7), B (8), C (9), D (10), E (11), F (12), G (13), H (14), I (15), J (16), K (17), L (18), M (19), N (20), O (21), P (22), Q (23), R (24), S (25), T (26), U (27), V (28)"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/difficulty> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object """---
language: 
- en
- fr
- ro
- de
- multilingual

tags:
- text2text-generation

widget:
- text: "Translate to German:  My name is Arthur"
  example_title: "Translation"
- text: "Please answer to the following question. Who is going to be the next Ballon d'or?"
  example_title: "Question Answering"
- text: "Q: Can Geoffrey Hinton have a conversation with George Washington? Give the rationale before answering."
  example_title: "Logical reasoning"
- text: "Please answer the following question. What is the boiling point of Nitrogen?"
  example_title: "Scientific knowledge"
- text: "Answer the following yes/no question. Can you write a whole Haiku in a single tweet?"
  example_title: "Yes/no question"
- text: "Answer the following yes/no question by reasoning step-by-step. Can you write a whole Haiku in a single tweet?"
  example_title: "Reasoning task"
- text: "Q: ( False or not False or False ) is? A: Let's think step by step"
  example_title: "Boolean Expressions"
- text: "The square root of x is the cube root of y. What is y to the power of 2, if x = 4?"
  example_title: "Math reasoning"
- text: "Premise:  At my age you will probably have learnt one lesson. Hypothesis:  It's not certain how many lessons you'll learn by your thirties. Does the premise entail the hypothesis?"
  example_title: "Premise and hypothesis"

datasets:
- svakulenk0/qrecc
- taskmaster2
- djaym7/wiki_dialog
- deepmind/code_contests
- lambada
- gsm8k
- aqua_rat
- esnli
- quasc
- qed


license: apache-2.0
---

# Model Card for FLAN-T5 small

<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/transformers/model_doc/flan2_architecture.jpg"
alt="drawing" width="600"/>

#  Table of Contents

0. [TL;DR](#TL;DR)
1. [Model Details](#model-details)
2. [Usage](#usage)
3. [Uses](#uses)
4. [Bias, Risks, and Limitations](#bias-risks-and-limitations)
5. [Training Details](#training-details)
6. [Evaluation](#evaluation)
7. [Environmental Impact](#environmental-impact)
8. [Citation](#citation)
9. [Model Card Authors](#model-card-authors)

# TL;DR

If you already know T5, FLAN-T5 is just better at everything. For the same number of parameters, these models have been fine-tuned on more than 1000 additional tasks covering also more languages. 
As mentioned in the first few lines of the abstract : 
>  Flan-PaLM 540B achieves state-of-the-art performance on several benchmarks, such as 75.2% on five-shot MMLU. We also publicly release Flan-T5 checkpoints,1 which achieve strong few-shot performance even compared to much larger models, such as PaLM 62B. Overall, instruction finetuning is a general method for improving the performance and usability of pretrained language models.

**Disclaimer**: Content from **this** model card has been written by the Hugging Face team, and parts of it were copy pasted from the [T5 model card](https://huggingface.co/t5-large).

# Model Details

## Model Description


- **Model type:** Language model
- **Language(s) (NLP):** English, Spanish, Japanese, Persian, Hindi, French, Chinese, Bengali, Gujarati, German, Telugu, Italian, Arabic, Polish, Tamil, Marathi, Malayalam, Oriya, Panjabi, Portuguese, Urdu, Galician, Hebrew, Korean, Catalan, Thai, Dutch, Indonesian, Vietnamese, Bulgarian, Filipino, Central Khmer, Lao, Turkish, Russian, Croatian, Swedish, Yoruba, Kurdish, Burmese, Malay, Czech, Finnish, Somali, Tagalog, Swahili, Sinhala, Kannada, Zhuang, Igbo, Xhosa, Romanian, Haitian, Estonian, Slovak, Lithuanian, Greek, Nepali, Assamese, Norwegian
- **License:** Apache 2.0
- **Related Models:** [All FLAN-T5 Checkpoints](https://huggingface.co/models?search=flan-t5)
- **Original Checkpoints:** [All Original FLAN-T5 Checkpoints](https://github.com/google-research/t5x/blob/main/docs/models.md#flan-t5-checkpoints)
- **Resources for more information:**
  - [Research paper](https://arxiv.org/pdf/2210.11416.pdf)
  - [GitHub Repo](https://github.com/google-research/t5x)
  - [Hugging Face FLAN-T5 Docs (Similar to T5) ](https://huggingface.co/docs/transformers/model_doc/t5)

# Usage

Find below some example scripts on how to use the model in `transformers`:

## Using the Pytorch model

### Running the model on a CPU

<details>
<summary> Click to expand </summary>

```python

from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small")

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

### Running the model on a GPU

<details>
<summary> Click to expand </summary>

```python
# pip install accelerate
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small", device_map="auto")

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids.to("cuda")

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

### Running the model on a GPU using different precisions

#### FP16

<details>
<summary> Click to expand </summary>

```python
# pip install accelerate
import torch
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small", device_map="auto", torch_dtype=torch.float16)

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids.to("cuda")

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

#### INT8

<details>
<summary> Click to expand </summary>

```python
# pip install bitsandbytes accelerate
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small", device_map="auto", load_in_8bit=True)

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids.to("cuda")

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

# Uses

## Direct Use and Downstream Use

The authors write in [the original paper's model card](https://arxiv.org/pdf/2210.11416.pdf) that: 

> The primary use is research on language models, including: research on zero-shot NLP tasks and in-context few-shot learning NLP tasks, such as reasoning, and question answering; advancing fairness and safety research, and understanding limitations of current large language models

See the [research paper](https://arxiv.org/pdf/2210.11416.pdf) for further details.

## Out-of-Scope Use

More information needed.

# Bias, Risks, and Limitations

The information below in this section are copied from the model's [official model card](https://arxiv.org/pdf/2210.11416.pdf):

> Language models, including Flan-T5, can potentially be used for language generation in a harmful way, according to Rae et al. (2021). Flan-T5 should not be used directly in any application, without a prior assessment of safety and fairness concerns specific to the application.

## Ethical considerations and risks

> Flan-T5 is fine-tuned on a large corpus of text data that was not filtered for explicit content or assessed for existing biases. As a result the model itself is potentially vulnerable to generating equivalently inappropriate content or replicating inherent biases in the underlying data.

## Known Limitations

> Flan-T5 has not been tested in real world applications.

## Sensitive Use:

> Flan-T5 should not be applied for any unacceptable use cases, e.g., generation of abusive speech.

# Training Details

## Training Data

The model was trained on a mixture of tasks, that includes the tasks described in the table below (from the original paper, figure 2):

![table.png](https://s3.amazonaws.com/moonup/production/uploads/1666363265279-62441d1d9fdefb55a0b7d12c.png)


## Training Procedure

According to the model card from the [original paper](https://arxiv.org/pdf/2210.11416.pdf):

> These models are based on pretrained T5 (Raffel et al., 2020) and fine-tuned with instructions for better zero-shot and few-shot performance. There is one fine-tuned Flan model per T5 model size.

The model has been trained on TPU v3 or TPU v4 pods, using [`t5x`](https://github.com/google-research/t5x) codebase together with [`jax`](https://github.com/google/jax).


# Evaluation

## Testing Data, Factors & Metrics

The authors evaluated the model on various tasks covering several languages (1836 in total). See the table below for some quantitative evaluation:
![image.png](https://s3.amazonaws.com/moonup/production/uploads/1668072995230-62441d1d9fdefb55a0b7d12c.png)
For full details, please check the [research paper](https://arxiv.org/pdf/2210.11416.pdf).

## Results 

For full results for FLAN-T5-Small, see the [research paper](https://arxiv.org/pdf/2210.11416.pdf), Table 3.

# Environmental Impact

Carbon emissions can be estimated using the [Machine Learning Impact calculator](https://mlco2.github.io/impact#compute) presented in [Lacoste et al. (2019)](https://arxiv.org/abs/1910.09700).

- **Hardware Type:** Google Cloud TPU Pods - TPU v3 or TPU v4  | Number of chips ≥ 4.
- **Hours used:** More information needed
- **Cloud Provider:** GCP
- **Compute Region:** More information needed
- **Carbon Emitted:** More information needed

# Citation

**BibTeX:**

```bibtex
@misc{https://doi.org/10.48550/arxiv.2210.11416,
  doi = {10.48550/ARXIV.2210.11416},
  
  url = {https://arxiv.org/abs/2210.11416},
  
  author = {Chung, Hyung Won and Hou, Le and Longpre, Shayne and Zoph, Barret and Tay, Yi and Fedus, William and Li, Eric and Wang, Xuezhi and Dehghani, Mostafa and Brahma, Siddhartha and Webson, Albert and Gu, Shixiang Shane and Dai, Zhuyun and Suzgun, Mirac and Chen, Xinyun and Chowdhery, Aakanksha and Narang, Sharan and Mishra, Gaurav and Yu, Adams and Zhao, Vincent and Huang, Yanping and Dai, Andrew and Yu, Hongkun and Petrov, Slav and Chi, Ed H. and Dean, Jeff and Devlin, Jacob and Roberts, Adam and Zhou, Denny and Le, Quoc V. and Wei, Jason},
  
  keywords = {Machine Learning (cs.LG), Computation and Language (cs.CL), FOS: Computer and information sciences, FOS: Computer and information sciences},
  
  title = {Scaling Instruction-Finetuned Language Models},
  
  publisher = {arXiv},
  
  year = {2022},
  
  copyright = {Creative Commons Attribution 4.0 International}
}
```"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.098402"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.136930"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.860186"^^xsd:dateTime ;
    ns1:object "ONNX"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4e5443728f51b2323bf3a1c4a6a6d8612484cbca0a8b0beeb5fb0258d1df5196> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ur"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.174374"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fadbdd40ae3e4d21fb8044995368c36935104a0e589c0bb691d566a182b91295> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6003882586956024"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.816011"^^xsd:dateTime ;
    ns1:object "Optimized backend for deploying and serving text embedding models with high performance."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/86f52aa6369c70ec009cd27198c0d2e52782b473507c01a7426d4c1bf4185e05> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.100185"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/04151ef09fe56a2be18a7d842066720d6e7cee10ed5bf1a3363193444decd94d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'correct' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "raw/options"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.814756"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.869118"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85b6833a0e3a566c8de87c0f42b57ec97f67e03180245edb416823e240ee11d1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/79cf083846a8329d2912fcd7f375233c37a54917af291bb945f0b58bc735b8ad> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "whisper-base"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2023-11-30T05:32:06+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/private_tests"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.847464"^^xsd:dateTime ;
    ns1:object "Automatic Speech Recognition"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/8e9892e571845c79509180a69a268f19c0592a4e975a5fd3e16f2059af61ea75> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.853806"^^xsd:dateTime ;
    ns1:object "PyTorch"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.827253"^^xsd:dateTime ;
    ns1:object "Image Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/25a48b7b32ec31051c00ea96f30d1637f216eb0ed7620da77d06c4637ab5da7f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "my"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.861918"^^xsd:dateTime ;
    ns1:object "sentence-transformers"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e2cb5f7dba65387f6ecd56e7a642d33df8fca1197b2ac918cd629a6cd9b294b2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ms"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.144706"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/google"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/125d01550d26a191f055cd53b0b7bf0298ef4a173496f10aa09a87ca1b3fdcbe> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.853246"^^xsd:dateTime ;
    ns1:object "Graph Machine Learning"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b47d8ed02d0fc1a7d72d5d61255296300a82f2caa55dd809c63448bfdd9b4284> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.794472"^^xsd:dateTime ;
    ns1:object "{'name': 'Xiaoqing Ellen Tan', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.808970"^^xsd:dateTime ;
    ns1:object "cs.LG"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.790582"^^xsd:dateTime ;
    ns1:object "{'name': 'Artem Korenev', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.851413"^^xsd:dateTime ;
    ns1:object "Tabular Regression"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d1054f9c274823fbeb3d1ab19d0f2344791cee18915cdb21fb1437bba03ba8fb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "tt"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.810323"^^xsd:dateTime ;
    ns1:object "{'name': 'Gianna Lengyel', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f5a6a15b057055acaed46aabd835cf3eb56fa2343723cec43da3298c6a298537> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4163966178894043"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The author of this content is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "he"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.46727223694324493"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.872718"^^xsd:dateTime ;
    ns1:object "BERTopic"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/316fd1b6c56f67729f7e0880d91953804a9af869ce76b2906f26f3d534937931> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "nl"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6690469682216644"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.862086"^^xsd:dateTime ;
    ns1:object "Framework for computing dense vector representations of sentences and paragraphs using transformer models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e2cb5f7dba65387f6ecd56e7a642d33df8fca1197b2ac918cd629a6cd9b294b2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.813519"^^xsd:dateTime ;
    ns1:object "Inference Endpoints"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df3db739a5d22c6a5829694aeecdedee4e20b5804f1345689c8abd3350883e54> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object """---
license: apache-2.0
pipeline_tag: text-generation
tags:
- finetuned
inference: true
widget:
- messages:
  - role: user
    content: What is your favorite condiment?
---

# Model Card for Mistral-7B-Instruct-v0.2

The Mistral-7B-Instruct-v0.2 Large Language Model (LLM) is an improved instruct fine-tuned version of [Mistral-7B-Instruct-v0.1](https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.1).

For full details of this model please read our [paper](https://arxiv.org/abs/2310.06825) and [release blog post](https://mistral.ai/news/la-plateforme/).

## Instruction format

In order to leverage instruction fine-tuning, your prompt should be surrounded by `[INST]` and `[/INST]` tokens. The very first instruction should begin with a begin of sentence id. The next instructions should not. The assistant generation will be ended by the end-of-sentence token id.

E.g.
```
text = "<s>[INST] What is your favourite condiment? [/INST]"
"Well, I'm quite partial to a good squeeze of fresh lemon juice. It adds just the right amount of zesty flavour to whatever I'm cooking up in the kitchen!</s> "
"[INST] Do you have mayonnaise recipes? [/INST]"
```

This format is available as a [chat template](https://huggingface.co/docs/transformers/main/chat_templating) via the `apply_chat_template()` method:

```python
from transformers import AutoModelForCausalLM, AutoTokenizer

device = "cuda" # the device to load the model onto

model = AutoModelForCausalLM.from_pretrained("mistralai/Mistral-7B-Instruct-v0.2")
tokenizer = AutoTokenizer.from_pretrained("mistralai/Mistral-7B-Instruct-v0.2")

messages = [
    {"role": "user", "content": "What is your favourite condiment?"},
    {"role": "assistant", "content": "Well, I'm quite partial to a good squeeze of fresh lemon juice. It adds just the right amount of zesty flavour to whatever I'm cooking up in the kitchen!"},
    {"role": "user", "content": "Do you have mayonnaise recipes?"}
]

encodeds = tokenizer.apply_chat_template(messages, return_tensors="pt")

model_inputs = encodeds.to(device)
model.to(device)

generated_ids = model.generate(model_inputs, max_new_tokens=1000, do_sample=True)
decoded = tokenizer.batch_decode(generated_ids)
print(decoded[0])
```

## Model Architecture
This instruction model is based on Mistral-7B-v0.1, a transformer model with the following architecture choices:
- Grouped-Query Attention
- Sliding-Window Attention
- Byte-fallback BPE tokenizer

## Troubleshooting
- If you see the following error:
```
Traceback (most recent call last):
File "", line 1, in
File "/transformers/models/auto/auto_factory.py", line 482, in from_pretrained
config, kwargs = AutoConfig.from_pretrained(
File "/transformers/models/auto/configuration_auto.py", line 1022, in from_pretrained
config_class = CONFIG_MAPPING[config_dict["model_type"]]
File "/transformers/models/auto/configuration_auto.py", line 723, in getitem
raise KeyError(key)
KeyError: 'mistral'
```

Installing transformers from source should solve the issue
pip install git+https://github.com/huggingface/transformers

This should not be required after transformers-v4.33.4.

## Limitations

The Mistral 7B Instruct model is a quick demonstration that the base model can be easily fine-tuned to achieve compelling performance. 
It does not have any moderation mechanisms. We're looking forward to engaging with the community on ways to
make the model finely respect guardrails, allowing for deployment in environments requiring moderated outputs.

## The Mistral AI Team

Albert Jiang, Alexandre Sablayrolles, Arthur Mensch, Blanche Savary, Chris Bamford, Devendra Singh Chaplot, Diego de las Casas, Emma Bou Hanna, Florian Bressand, Gianna Lengyel, Guillaume Bour, Guillaume Lample, Lélio Renard Lavaud, Louis Ternon, Lucile Saulnier, Marie-Anne Lachaux, Pierre Stock, Teven Le Scao, Théophile Gervet, Thibaut Lavril, Thomas Wang, Timothée Lacroix, William El Sayed."""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/cf_index> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "socratic/answer"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.43562792241573334"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The model category is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sl"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "dataset:aqua_rat"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.383629"^^xsd:dateTime ;
    ns1:object "meta-llama"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c03090b68b1e45d6bebe9b9d1ea103b6a4c064ceb71f16f08a5ae59d9bac70e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.813740"^^xsd:dateTime ;
    ns1:object "Indicates the model supports deployment through HuggingFace's managed inference API service for production environments."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df3db739a5d22c6a5829694aeecdedee4e20b5804f1345689c8abd3350883e54> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.803089"^^xsd:dateTime ;
    ns1:object "{'name': 'Yanping Huang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.784542"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ta"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6852615773677826"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "[{\"tokenized_splits/split_name\":\"train\"},{\"tokenized_splits/split_name\":\"test\"},{\"tokenized_splits/split_name\":\"validation\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.634324312210083"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.862704"^^xsd:dateTime ;
    ns1:object "High-level neural networks API, designed for human beings, not machines, focusing on enabling fast experimentation."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a225e69a17f4be8c51cc1f1852c40371a478cfa95661008284bc676564a876e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.137292"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/gsm8k"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.202900"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/DianaJin"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8c29861cff92b34ba1887aa267cf20a6a2124ec092919b27c388fb31ecb5f269> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.812163"^^xsd:dateTime ;
    ns1:object "{'name': 'William El Sayed', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'public_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "split_name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "tokenized/rationale"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6285230815410614"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.795301"^^xsd:dateTime ;
    ns1:object "{'name': 'Puxin Xu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/input> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.837920"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cb9bd15fb27d24d93383343fa6ee37e644b0a41da399de954b0a5cf93c7b3501> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6707607507705688"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The information provided does not contain the name of the contributor to the CreativeWork."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.101484"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.882818"^^xsd:dateTime ;
    ns1:object "Framework for running ML workloads on Habana Gaudi accelerators with performance optimization."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c0097ccf601f8114782f9c0c86386c6c995d5b2e12eddde21fdd7251761ee1fd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.217222"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a7eca72cd0a3a0ce30e3b37b299034e8cf2e3b921a7deaf54545b7d00e88c5e4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/79cf083846a8329d2912fcd7f375233c37a54917af291bb945f0b58bc735b8ad> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object "[{\"plain_text_splits/split_name\":\"train\"},{\"plain_text_splits/split_name\":\"test\"},{\"plain_text_splits/split_name\":\"validation\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4a958b2cddc6f3096d3a4e912c3bf694e8c132edcdb79366c6a34dff81cbbc7b> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "fo"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "socratic/question"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.819078"^^xsd:dateTime ;
    ns1:object "Models created by merging multiple other models, often to combine their strengths or capabilities."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6726f6435b32ab359d8c48bd5f24d3180c4c1772a769d50d3b4c8cf8f0ecd46> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.217871"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8e9892e571845c79509180a69a268f19c0592a4e975a5fd3e16f2059af61ea75> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/07456871ec04ff7e102a14a63ee4f77775baadaf5e404b74e2ab827a14335259> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.199079"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/MLModel> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/01ce031a92b6a44f90635a9aa473acc02c379a53ef7b0a0d8f88b6027a9ad64e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.856945"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.863860"^^xsd:dateTime ;
    ns1:object "High-throughput asynchronous reinforcement learning framework for training RL agents."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/15ceeb8703c6ba669411911c62acbbac38f4d1235e8ac6118537ac1e6d75ae84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.802438"^^xsd:dateTime ;
    ns1:object "{'name': 'Gaurav Mishra', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.098902"^^xsd:dateTime ;
    ns1:object "llama"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/incorrect_solutions/language"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base.en> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.850501"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4eaeba2a8985fdb21e18ca1e967f067a345c0498ed10fc3e5e9ba95e39876cab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "de"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.804938"^^xsd:dateTime ;
    ns1:object "{'name': 'Quoc V. Le', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.786383"^^xsd:dateTime ;
    ns1:object "{'name': 'Soumya Batra', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "main/split"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ka"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Dataset ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.816668"^^xsd:dateTime ;
    ns1:object "Models with published evaluation metrics, benchmarks, or test results available for review."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6bdae8c542a61819acfd0767eb5e55cafba29955aaefd1261c204618a4d3a487> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.836531"^^xsd:dateTime ;
    ns1:object "Converts 2D images into 3D representations or models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fd4e2f28de7e36539eda0f2e74a9e9b30f10d77fee3b927dc3aa5419c43369da> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6502285897731781"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "as"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.816494"^^xsd:dateTime ;
    ns1:object "Eval Results"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6bdae8c542a61819acfd0767eb5e55cafba29955aaefd1261c204618a4d3a487> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "te"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object """---
license: mit
datasets:
- CyberHarem/chokai_azurlane
pipeline_tag: text-to-image
tags:
- art
---

# Lora of chokai_azurlane

This model is trained with [HCP-Diffusion](https://github.com/7eu7d7/HCP-Diffusion). And the auto-training framework is maintained by [DeepGHS Team](https://huggingface.co/deepghs).

After downloading the pt and safetensors files for the specified step, you need to use them simultaneously. The pt file will be used as an embedding, while the safetensors file will be loaded for Lora.

For example, if you want to use the model from step 1500, you need to download `1500/chokai_azurlane.pt` as the embedding and `1500/chokai_azurlane.safetensors` for loading Lora. By using both files together, you can generate images for the desired characters.

**The trigger word is `chokai_azurlane`.**

These are available steps:

|   Steps | bikini                                   | free                                 | nude                                           | Download                             |
|--------:|:-----------------------------------------|:-------------------------------------|:-----------------------------------------------|:-------------------------------------|
|    1500 | ![bikini-1500](1500/previews/bikini.png) | ![free-1500](1500/previews/free.png) | [<NSFW, click to see>](1500/previews/nude.png) | [Download](1500/chokai_azurlane.zip) |
|    1400 | ![bikini-1400](1400/previews/bikini.png) | ![free-1400](1400/previews/free.png) | [<NSFW, click to see>](1400/previews/nude.png) | [Download](1400/chokai_azurlane.zip) |
|    1300 | ![bikini-1300](1300/previews/bikini.png) | ![free-1300](1300/previews/free.png) | [<NSFW, click to see>](1300/previews/nude.png) | [Download](1300/chokai_azurlane.zip) |
|    1200 | ![bikini-1200](1200/previews/bikini.png) | ![free-1200](1200/previews/free.png) | [<NSFW, click to see>](1200/previews/nude.png) | [Download](1200/chokai_azurlane.zip) |
|    1100 | ![bikini-1100](1100/previews/bikini.png) | ![free-1100](1100/previews/free.png) | [<NSFW, click to see>](1100/previews/nude.png) | [Download](1100/chokai_azurlane.zip) |
|    1000 | ![bikini-1000](1000/previews/bikini.png) | ![free-1000](1000/previews/free.png) | [<NSFW, click to see>](1000/previews/nude.png) | [Download](1000/chokai_azurlane.zip) |
|     900 | ![bikini-900](900/previews/bikini.png)   | ![free-900](900/previews/free.png)   | [<NSFW, click to see>](900/previews/nude.png)  | [Download](900/chokai_azurlane.zip)  |
|     800 | ![bikini-800](800/previews/bikini.png)   | ![free-800](800/previews/free.png)   | [<NSFW, click to see>](800/previews/nude.png)  | [Download](800/chokai_azurlane.zip)  |
|     700 | ![bikini-700](700/previews/bikini.png)   | ![free-700](700/previews/free.png)   | [<NSFW, click to see>](700/previews/nude.png)  | [Download](700/chokai_azurlane.zip)  |
|     600 | ![bikini-600](600/previews/bikini.png)   | ![free-600](600/previews/free.png)   | [<NSFW, click to see>](600/previews/nude.png)  | [Download](600/chokai_azurlane.zip)  |
|     500 | ![bikini-500](500/previews/bikini.png)   | ![free-500](500/previews/free.png)   | [<NSFW, click to see>](500/previews/nude.png)  | [Download](500/chokai_azurlane.zip)  |
|     400 | ![bikini-400](400/previews/bikini.png)   | ![free-400](400/previews/free.png)   | [<NSFW, click to see>](400/previews/nude.png)  | [Download](400/chokai_azurlane.zip)  |
|     300 | ![bikini-300](300/previews/bikini.png)   | ![free-300](300/previews/free.png)   | [<NSFW, click to see>](300/previews/nude.png)  | [Download](300/chokai_azurlane.zip)  |
|     200 | ![bikini-200](200/previews/bikini.png)   | ![free-200](200/previews/free.png)   | [<NSFW, click to see>](200/previews/nude.png)  | [Download](200/chokai_azurlane.zip)  |
|     100 | ![bikini-100](100/previews/bikini.png)   | ![free-100](100/previews/free.png)   | [<NSFW, click to see>](100/previews/nude.png)  | [Download](100/chokai_azurlane.zip)  |


"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/61cce84de930f0da8c78ddef3203a2afac70cf5e46684f0407180738cd821965> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.790765"^^xsd:dateTime ;
    ns1:object "{'name': 'Punit Singh Koura', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.59980309009552"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.821374"^^xsd:dateTime ;
    ns1:object "bert"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0c3d01ed44dc2940ae38707146a02c16bc80cc8637ce48ac5f3125b7c6fb2982> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/description"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'incorrect_solutions' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.865009"^^xsd:dateTime ;
    ns1:object "Flair"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6fd4d85e3416654bf33d9c5f3803b3e9900ce78a6309e4e6a84b2499ad4b7981> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4911504238843918"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.389125"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.47400693595409393"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The author of this content is Lora of chokai_azurlane."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "socratic/split"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "hi"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.47100991010665894"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized/rationale> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "vi"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.871589"^^xsd:dateTime ;
    ns1:object "Rust"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bc53f85f6e664d1c6ece992a9d80b2e0705d1b3c75028563adb2ed9f36aedec9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/e694cb482434e33f5aadafc7ba5607930722b2bd1b0cb252690679261c8692f4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.135980"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.871755"^^xsd:dateTime ;
    ns1:object "Memory-safe, high-performance language used for building efficient ML systems and infrastructure."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bc53f85f6e664d1c6ece992a9d80b2e0705d1b3c75028563adb2ed9f36aedec9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "The name of the split."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.787543"^^xsd:dateTime ;
    ns1:object "{'name': 'Moya Chen', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Split to which the example belongs to."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/key> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.139020"^^xsd:dateTime ;
    ns1:object "qed"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/43bc0319b35edce6a819b7513d5d158c1ea9bd4b7e1f558fabd51fb09b4f7755> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/meta-llama/Llama-2-7b-hf/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object """---
language: 
- en
- fr
- ro
- de
- multilingual

tags:
- text2text-generation

widget:
- text: "Translate to German:  My name is Arthur"
  example_title: "Translation"
- text: "Please answer to the following question. Who is going to be the next Ballon d'or?"
  example_title: "Question Answering"
- text: "Q: Can Geoffrey Hinton have a conversation with George Washington? Give the rationale before answering."
  example_title: "Logical reasoning"
- text: "Please answer the following question. What is the boiling point of Nitrogen?"
  example_title: "Scientific knowledge"
- text: "Answer the following yes/no question. Can you write a whole Haiku in a single tweet?"
  example_title: "Yes/no question"
- text: "Answer the following yes/no question by reasoning step-by-step. Can you write a whole Haiku in a single tweet?"
  example_title: "Reasoning task"
- text: "Q: ( False or not False or False ) is? A: Let's think step by step"
  example_title: "Boolean Expressions"
- text: "The square root of x is the cube root of y. What is y to the power of 2, if x = 4?"
  example_title: "Math reasoning"
- text: "Premise:  At my age you will probably have learnt one lesson. Hypothesis:  It's not certain how many lessons you'll learn by your thirties. Does the premise entail the hypothesis?"
  example_title: "Premise and hypothesis"

datasets:
- svakulenk0/qrecc
- taskmaster2
- djaym7/wiki_dialog
- deepmind/code_contests
- lambada
- gsm8k
- aqua_rat
- esnli
- quasc
- qed


license: apache-2.0
---

# Model Card for FLAN-T5 small

<img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/transformers/model_doc/flan2_architecture.jpg"
alt="drawing" width="600"/>

#  Table of Contents

0. [TL;DR](#TL;DR)
1. [Model Details](#model-details)
2. [Usage](#usage)
3. [Uses](#uses)
4. [Bias, Risks, and Limitations](#bias-risks-and-limitations)
5. [Training Details](#training-details)
6. [Evaluation](#evaluation)
7. [Environmental Impact](#environmental-impact)
8. [Citation](#citation)
9. [Model Card Authors](#model-card-authors)

# TL;DR

If you already know T5, FLAN-T5 is just better at everything. For the same number of parameters, these models have been fine-tuned on more than 1000 additional tasks covering also more languages. 
As mentioned in the first few lines of the abstract : 
>  Flan-PaLM 540B achieves state-of-the-art performance on several benchmarks, such as 75.2% on five-shot MMLU. We also publicly release Flan-T5 checkpoints,1 which achieve strong few-shot performance even compared to much larger models, such as PaLM 62B. Overall, instruction finetuning is a general method for improving the performance and usability of pretrained language models.

**Disclaimer**: Content from **this** model card has been written by the Hugging Face team, and parts of it were copy pasted from the [T5 model card](https://huggingface.co/t5-large).

# Model Details

## Model Description


- **Model type:** Language model
- **Language(s) (NLP):** English, Spanish, Japanese, Persian, Hindi, French, Chinese, Bengali, Gujarati, German, Telugu, Italian, Arabic, Polish, Tamil, Marathi, Malayalam, Oriya, Panjabi, Portuguese, Urdu, Galician, Hebrew, Korean, Catalan, Thai, Dutch, Indonesian, Vietnamese, Bulgarian, Filipino, Central Khmer, Lao, Turkish, Russian, Croatian, Swedish, Yoruba, Kurdish, Burmese, Malay, Czech, Finnish, Somali, Tagalog, Swahili, Sinhala, Kannada, Zhuang, Igbo, Xhosa, Romanian, Haitian, Estonian, Slovak, Lithuanian, Greek, Nepali, Assamese, Norwegian
- **License:** Apache 2.0
- **Related Models:** [All FLAN-T5 Checkpoints](https://huggingface.co/models?search=flan-t5)
- **Original Checkpoints:** [All Original FLAN-T5 Checkpoints](https://github.com/google-research/t5x/blob/main/docs/models.md#flan-t5-checkpoints)
- **Resources for more information:**
  - [Research paper](https://arxiv.org/pdf/2210.11416.pdf)
  - [GitHub Repo](https://github.com/google-research/t5x)
  - [Hugging Face FLAN-T5 Docs (Similar to T5) ](https://huggingface.co/docs/transformers/model_doc/t5)

# Usage

Find below some example scripts on how to use the model in `transformers`:

## Using the Pytorch model

### Running the model on a CPU

<details>
<summary> Click to expand </summary>

```python

from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small")

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

### Running the model on a GPU

<details>
<summary> Click to expand </summary>

```python
# pip install accelerate
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small", device_map="auto")

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids.to("cuda")

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

### Running the model on a GPU using different precisions

#### FP16

<details>
<summary> Click to expand </summary>

```python
# pip install accelerate
import torch
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small", device_map="auto", torch_dtype=torch.float16)

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids.to("cuda")

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

#### INT8

<details>
<summary> Click to expand </summary>

```python
# pip install bitsandbytes accelerate
from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained("google/flan-t5-small")
model = T5ForConditionalGeneration.from_pretrained("google/flan-t5-small", device_map="auto", load_in_8bit=True)

input_text = "translate English to German: How old are you?"
input_ids = tokenizer(input_text, return_tensors="pt").input_ids.to("cuda")

outputs = model.generate(input_ids)
print(tokenizer.decode(outputs[0]))
```

</details>

# Uses

## Direct Use and Downstream Use

The authors write in [the original paper's model card](https://arxiv.org/pdf/2210.11416.pdf) that: 

> The primary use is research on language models, including: research on zero-shot NLP tasks and in-context few-shot learning NLP tasks, such as reasoning, and question answering; advancing fairness and safety research, and understanding limitations of current large language models

See the [research paper](https://arxiv.org/pdf/2210.11416.pdf) for further details.

## Out-of-Scope Use

More information needed.

# Bias, Risks, and Limitations

The information below in this section are copied from the model's [official model card](https://arxiv.org/pdf/2210.11416.pdf):

> Language models, including Flan-T5, can potentially be used for language generation in a harmful way, according to Rae et al. (2021). Flan-T5 should not be used directly in any application, without a prior assessment of safety and fairness concerns specific to the application.

## Ethical considerations and risks

> Flan-T5 is fine-tuned on a large corpus of text data that was not filtered for explicit content or assessed for existing biases. As a result the model itself is potentially vulnerable to generating equivalently inappropriate content or replicating inherent biases in the underlying data.

## Known Limitations

> Flan-T5 has not been tested in real world applications.

## Sensitive Use:

> Flan-T5 should not be applied for any unacceptable use cases, e.g., generation of abusive speech.

# Training Details

## Training Data

The model was trained on a mixture of tasks, that includes the tasks described in the table below (from the original paper, figure 2):

![table.png](https://s3.amazonaws.com/moonup/production/uploads/1666363265279-62441d1d9fdefb55a0b7d12c.png)


## Training Procedure

According to the model card from the [original paper](https://arxiv.org/pdf/2210.11416.pdf):

> These models are based on pretrained T5 (Raffel et al., 2020) and fine-tuned with instructions for better zero-shot and few-shot performance. There is one fine-tuned Flan model per T5 model size.

The model has been trained on TPU v3 or TPU v4 pods, using [`t5x`](https://github.com/google-research/t5x) codebase together with [`jax`](https://github.com/google/jax).


# Evaluation

## Testing Data, Factors & Metrics

The authors evaluated the model on various tasks covering several languages (1836 in total). See the table below for some quantitative evaluation:
![image.png](https://s3.amazonaws.com/moonup/production/uploads/1668072995230-62441d1d9fdefb55a0b7d12c.png)
For full details, please check the [research paper](https://arxiv.org/pdf/2210.11416.pdf).

## Results 

For full results for FLAN-T5-Small, see the [research paper](https://arxiv.org/pdf/2210.11416.pdf), Table 3.

# Environmental Impact

Carbon emissions can be estimated using the [Machine Learning Impact calculator](https://mlco2.github.io/impact#compute) presented in [Lacoste et al. (2019)](https://arxiv.org/abs/1910.09700).

- **Hardware Type:** Google Cloud TPU Pods - TPU v3 or TPU v4  | Number of chips ≥ 4.
- **Hours used:** More information needed
- **Cloud Provider:** GCP
- **Compute Region:** More information needed
- **Carbon Emitted:** More information needed

# Citation

**BibTeX:**

```bibtex
@misc{https://doi.org/10.48550/arxiv.2210.11416,
  doi = {10.48550/ARXIV.2210.11416},
  
  url = {https://arxiv.org/abs/2210.11416},
  
  author = {Chung, Hyung Won and Hou, Le and Longpre, Shayne and Zoph, Barret and Tay, Yi and Fedus, William and Li, Eric and Wang, Xuezhi and Dehghani, Mostafa and Brahma, Siddhartha and Webson, Albert and Gu, Shixiang Shane and Dai, Zhuyun and Suzgun, Mirac and Chen, Xinyun and Chowdhery, Aakanksha and Narang, Sharan and Mishra, Gaurav and Yu, Adams and Zhao, Vincent and Huang, Yanping and Dai, Andrew and Yu, Hongkun and Petrov, Slav and Chi, Ed H. and Dean, Jeff and Devlin, Jacob and Roberts, Adam and Zhou, Denny and Le, Quoc V. and Wei, Jason},
  
  keywords = {Machine Learning (cs.LG), Computation and Language (cs.CL), FOS: Computer and information sciences, FOS: Computer and information sciences},
  
  title = {Scaling Instruction-Finetuned Language Models},
  
  publisher = {arXiv},
  
  year = {2022},
  
  copyright = {Creative Commons Attribution 4.0 International}
}
```"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'output_file' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/output_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "mt"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "nl"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.880329"^^xsd:dateTime ;
    ns1:object "Stanza"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7daea98679eae3b5819f476833cada39b566629edb49ee1f55db0016e8ecf118> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.136775"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/lambada"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.880495"^^xsd:dateTime ;
    ns1:object "Python NLP library for accurate multilingual text analysis, including tokenization, POS tagging, and dependency parsing."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7daea98679eae3b5819f476833cada39b566629edb49ee1f55db0016e8ecf118> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/125d01550d26a191f055cd53b0b7bf0298ef4a173496f10aa09a87ca1b3fdcbe> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "apache-2.0"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6189926266670227"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "fr"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "et"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Split to which the example belongs to."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object "The name of the split."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "mr"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/cf_rating> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6620725691318512"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.46148908138275146"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6407479345798492"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Split> ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'correct' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "cy"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.856457"^^xsd:dateTime ;
    ns1:object "Safetensors"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "dataset:taskmaster2"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.883474"^^xsd:dateTime ;
    ns1:object "pyannote.audio"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b07372cae2aaf834044064c3f58684a47c8f4685d11fccf85dbb95dac4dc7141> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.864078"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9db08d1a554609ae7c645781f30f4c335c5142d3c63fde5964e29f8a404c9566> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.875792"^^xsd:dateTime ;
    ns1:object "Comprehensive machine learning library for Python featuring various classification, regression, and clustering algorithms."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bbf4caca758174ac9ca1258e1174d6c6d75a330218b88807385547a31f8229ab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_tags> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.876333"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ebbad1761fb8870fe41c968d83d4055b2799265db268338f3fa38c3849f7932a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "mi"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.861335"^^xsd:dateTime ;
    ns1:object "ml-agents"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/293ad034f899dc681b5be10c715f25c59fa7f5261f229b66d796246e10927354> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4a958b2cddc6f3096d3a4e912c3bf694e8c132edcdb79366c6a34dff81cbbc7b> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ht"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7218855023384094"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.787348"^^xsd:dateTime ;
    ns1:object "{'name': 'Cristian Canton Ferrer', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.847633"^^xsd:dateTime ;
    ns1:object "Transcribes spoken language into written text."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6947119534015656"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:citation ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "license:apache-2.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/output_file"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/output_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.823755"^^xsd:dateTime ;
    ns1:object "Models based on LLaMA (Large Language Model Meta AI), a family of large language models that use a transformer architecture."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.153053"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2210.11416"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/nanos> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.401879"^^xsd:dateTime ;
    ns1:object "llama-2"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/32934a13e4d01c327dbef8b4279d190d77f3095d7022f9465dc377bbb3565c94> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4662057012319565"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.803925"^^xsd:dateTime ;
    ns1:object "{'name': 'Ed H. Chi', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.174717"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/CyberHarem/chokai_azurlane"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fadbdd40ae3e4d21fb8044995368c36935104a0e589c0bb691d566a182b91295> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4326549619436264"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.872159"^^xsd:dateTime ;
    ns1:object "Joblib"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55f0c4818716a5c86a051b41b27450e6f00f7e81d8a89b0f3bd6928719ce08e4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/11ee21b926795a2b7d2cb2d939044519ace34ac86e6b6a59a47dcb4bba5eb7a4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "da"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.808266"^^xsd:dateTime ;
    ns1:object """We introduce Mistral 7B v0.1, a 7-billion-parameter language model engineered
for superior performance and efficiency. Mistral 7B outperforms Llama 2 13B
across all evaluated benchmarks, and Llama 1 34B in reasoning, mathematics, and
code generation. Our model leverages grouped-query attention (GQA) for faster
inference, coupled with sliding window attention (SWA) to effectively handle
sequences of arbitrary length with a reduced inference cost. We also provide a
model fine-tuned to follow instructions, Mistral 7B -- Instruct, that surpasses
the Llama 2 13B -- Chat model both on human and automated benchmarks. Our
models are released under the Apache 2.0 license."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Splits for the main config."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.832392"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cba5458c023bd0e333fefb47511914b963716a71b0356b435370871727585038> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/a7eca72cd0a3a0ce30e3b37b299034e8cf2e3b921a7deaf54545b7d00e88c5e4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6670164167881012"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The potential risks associated with the model are not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sn"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "ro"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2023-11-30T05:06:05+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/source> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.842986"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/746e796ec31ad9ad2b517555a4e91b2e3dfff187021fd0255aae50476624430d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "tokenized"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6259706020355225"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The development status of Llama 2 is described as \"This is a static model trained on an offline dataset. Future versions of the tuned models will be released as we improve model safety with community feedback.\""^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.873130"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6bffbd25ee4f19a8e55b6c7f32040744865e1e7d74080964d19fac6f207948c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.873701"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/12855f71ca9ab0f85c6609885b9e912174c81e608da47e6448d968f757f5ab44> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.099350"^^xsd:dateTime ;
    ns1:object "text-generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79cf083846a8329d2912fcd7f375233c37a54917af291bb945f0b58bc735b8ad> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7066408097743988"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "uz"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.837506"^^xsd:dateTime ;
    ns1:object "Text Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85f0e69a70ce025a206d6ddbf78d989a3cabbdae215f2045df9b67b21a9d6780> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.856177"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.799047"^^xsd:dateTime ;
    ns1:object "{'name': 'Le Hou', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.785579"^^xsd:dateTime ;
    ns1:object "{'name': 'Peter Albert', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_index> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "cy"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/generated_tests/input"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.874073"^^xsd:dateTime ;
    ns1:object "Library for efficient text classification and word representation learning."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/12855f71ca9ab0f85c6609885b9e912174c81e608da47e6448d968f757f5ab44> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.101636"^^xsd:dateTime ;
    ns1:object "endpoints_compatible"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.818471"^^xsd:dateTime ;
    ns1:object "Models with custom implementation code beyond standard library functionality."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55c2ef29f4fc34014e7c41f2439cd686ebcc0bd4d1a02299b7491148b03bd06b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.798019"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2210.11416"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.828265"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f4f5c02149ef4c63e1abfb237a7efd73b36b96243fa20ee9a3b83ab914689b18> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.824434"^^xsd:dateTime ;
    ns1:object "Models created by Mistral, a French artificial intelligence startup, headquartered in Paris. It specializes in open-weight large language models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ddb15bfa0ef843723bc4c8a81ab1d826b1fc4ff36ed13faf8f8f3841261978b8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "as"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/domain> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.44150835275650024"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object """ClassLabel column 'source' from the Hugging Face parquet file.
Labels:
UNKNOWN_SOURCE (0), CODECHEF (1), CODEFORCES (2), HACKEREARTH (3), CODEJAM (4), ATCODER (5), AIZU (6)"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/source> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'untranslated_description' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/untranslated_description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "mit"^^xsd:string ;
    ns1:predicate schema:license ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.100022"^^xsd:dateTime ;
    ns1:object "full"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b751528b59fc7a0677c52c99b85d41f69866dad58deffdbf1e33a510f27bc2f5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.881286"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/119bd2aa6d51fb076ddf89b0c5c2536f1550ff5bf549b11a6c834340b0979a14> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.821829"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bc69543009040d6e8dba73b201af25ed291f7933acca2056091eb5f643c4f919> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/output> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6440613865852356"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1fe551ba3faf898fda38c533bbd65bcba38644c47f7415289a6bee9579f2b365> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'private_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.829452"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/266c130bc128debb0db48b7a2e58c6423c7bafb2445fcccd68e2da192f3487d1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.852196"^^xsd:dateTime ;
    ns1:object "Trains agents through interaction with environments using rewards."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object """---
extra_gated_heading: You need to share contact information with Meta to access this
  model
extra_gated_prompt: "### LLAMA 2 COMMUNITY LICENSE AGREEMENT\\n\\"Agreement\\" means\\
  \\ the terms and conditions for use, reproduction, distribution and  modification\\
  \\ of the Llama Materials set forth herein. \\n\\"Documentation\\" means the specifications,\\
  \\ manuals and documentation  accompanying Llama 2 distributed by Meta at https://ai.meta.com/resources/models-and-libraries/llama-downloads/.\\
  \\  \\n\\"Licensee\\" or \\"you\\" means you, or your employer or any other person or\\
  \\ entity (if you are entering into this Agreement on such person or entity's behalf),\\
  \\ of the age required under applicable laws, rules or regulations to provide legal\\
  \\ consent and that has legal authority to bind your employer or such other person\\
  \\ or  entity if you are  entering in this Agreement on their behalf. \\n\\"Llama 2\\"\\
  \\ means the foundational large language models and software and algorithms, including\\
  \\ machine-learning model code, trained model weights, inference-enabling code, training-enabling\\
  \\ code, fine-tuning enabling code and other  elements of the foregoing distributed\\
  \\ by Meta at ai.meta.com/resources/models-and-libraries/llama-downloads/.\\n\\"Llama\\
  \\ Materials\\" means, collectively, Meta's proprietary Llama 2 and documentation\\
  \\ (and any portion thereof) made available under this Agreement.\\n\\"Meta\\" or \\"\\
  we\\" means Meta Platforms Ireland Limited (if you are located in or, if you are\\
  \\ an entity, your principal place of business is in the EEA or Switzerland) and\\
  \\ Meta Platforms, Inc. (if you are located outside of the EEA or Switzerland). \\n\\
  \\nBy clicking \\"I Accept\\" below or by using or distributing any portion or element\\
  \\ of the Llama Materials, you agree to be bound by this Agreement.\\n1. License Rights\\
  \\ and Redistribution. \\na. Grant of Rights. You are granted a non-exclusive, worldwide,\\
  \\ non- transferable and royalty-free limited license under Meta's intellectual property\\
  \\ or  other rights owned by Meta embodied in the Llama Materials to use, reproduce,\\
  \\  distribute, copy, create derivative works of, and make modifications to the Llama\\
  \\  Materials.  \\nb. Redistribution and Use.\\ni. If you distribute or make the Llama\\
  \\ Materials, or any derivative works  thereof, available to a third party, you shall\\
  \\ provide a copy of this Agreement to such  third party. \\nii.  If you receive Llama\\
  \\ Materials, or any derivative works thereof, from  a Licensee as part of an integrated\\
  \\ end user product, then Section 2 of this  Agreement will not apply to you. \\n\\
  iii. You must retain in all copies of the Llama Materials that you  distribute the\\
  \\ following attribution notice within a \\"Notice\\" text file distributed as a  part\\
  \\ of such copies: \\"Llama 2 is licensed under the LLAMA 2 Community License,  Copyright\\
  \\ (c) Meta Platforms, Inc. All Rights Reserved.\\"\\niv. Your use of the Llama Materials\\
  \\ must comply with applicable laws  and regulations (including trade compliance\\
  \\ laws and regulations) and adhere to the  Acceptable Use Policy for the Llama Materials\\
  \\ (available at  https://ai.meta.com/llama/use-policy), which is hereby incorporated\\
  \\ by reference into  this Agreement.\\nv. You will not use the Llama Materials or\\
  \\ any output or results of the  Llama Materials to improve any other large language\\
  \\ model (excluding Llama 2 or  derivative works thereof).  \\n\\n2. Additional Commercial\\
  \\ Terms. If, on the Llama 2 version release date, the  monthly active users of the\\
  \\ products or services made available by or for Licensee,  or Licensee's affiliates,\\
  \\ is greater than 700 million monthly active users in the  preceding calendar month,\\
  \\ you must request a license from Meta, which Meta may  grant to you in its sole\\
  \\ discretion, and you are not authorized to exercise any of the  rights under this\\
  \\ Agreement unless or until Meta otherwise expressly grants you  such rights.\\n\\
  3. Disclaimer of Warranty. UNLESS REQUIRED BY APPLICABLE LAW, THE  LLAMA MATERIALS\\
  \\ AND ANY OUTPUT AND RESULTS THEREFROM ARE  PROVIDED ON AN \\"AS IS\\" BASIS, WITHOUT\\
  \\ WARRANTIES OF ANY KIND,  EITHER EXPRESS OR IMPLIED, INCLUDING, WITHOUT LIMITATION,\\
  \\ ANY  WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, OR  FITNESS FOR A\\
  \\ PARTICULAR PURPOSE. YOU ARE SOLELY RESPONSIBLE  FOR DETERMINING THE APPROPRIATENESS\\
  \\ OF USING OR REDISTRIBUTING  THE LLAMA MATERIALS AND ASSUME ANY RISKS ASSOCIATED\\
  \\ WITH YOUR  USE OF THE LLAMA MATERIALS AND ANY OUTPUT AND RESULTS.\\n4. Limitation\\
  \\ of Liability. IN NO EVENT WILL META OR ITS AFFILIATES BE  LIABLE UNDER ANY THEORY\\
  \\ OF LIABILITY, WHETHER IN CONTRACT, TORT,  NEGLIGENCE, PRODUCTS LIABILITY, OR OTHERWISE,\\
  \\ ARISING OUT OF THIS  AGREEMENT, FOR ANY LOST PROFITS OR ANY INDIRECT, SPECIAL,\\
  \\  CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR PUNITIVE DAMAGES, EVEN  IF META OR ITS\\
  \\ AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF  ANY OF THE FOREGOING.\\n\\n\\
  5. Intellectual Property.\\na. No trademark licenses are granted under this Agreement,\\
  \\ and in  connection with the Llama Materials, neither Meta nor Licensee may use\\
  \\ any name  or mark owned by or associated with the other or any of its affiliates,\\
  \\ except as  required for reasonable and customary use in describing and redistributing\\
  \\ the  Llama Materials.\\nb. Subject to Meta's ownership of Llama Materials and derivatives\\
  \\ made by or  for Meta, with respect to any derivative works and modifications of\\
  \\ the Llama  Materials that are made by you, as between you and Meta, you are and\\
  \\ will be the  owner of such derivative works and modifications.\\nc. If you institute\\
  \\ litigation or other proceedings against Meta or any entity  (including a cross-claim\\
  \\ or counterclaim in a lawsuit) alleging that the Llama  Materials or Llama 2 outputs\\
  \\ or results, or any portion of any of the foregoing,  constitutes infringement\\
  \\ of intellectual property or other rights owned or licensable  by you, then any\\
  \\ licenses granted to you under this Agreement shall terminate as of  the date such\\
  \\ litigation or claim is filed or instituted. You will indemnify and hold  harmless\\
  \\ Meta from and against any claim by any third party arising out of or related \\
  \\ to your use or distribution of the Llama Materials.\\n6. Term and Termination.\\
  \\ The term of this Agreement will commence upon your  acceptance of this Agreement\\
  \\ or access to the Llama Materials and will continue in  full force and effect until\\
  \\ terminated in accordance with the terms and conditions  herein. Meta may terminate\\
  \\ this Agreement if you are in breach of any term or  condition of this Agreement.\\
  \\ Upon termination of this Agreement, you shall delete  and cease use of the Llama\\
  \\ Materials. Sections 3, 4 and 7 shall survive the  termination of this Agreement.\\
  \\ \\n7. Governing Law and Jurisdiction. This Agreement will be governed and  construed\\
  \\ under the laws of the State of California without regard to choice of law  principles,\\
  \\ and the UN Convention on Contracts for the International Sale of Goods  does not\\
  \\ apply to this Agreement. The courts of California shall have exclusive  jurisdiction\\
  \\ of any dispute arising out of this Agreement. \\n### Llama 2 Acceptable Use Policy\\n\\
  Meta is committed to promoting safe and fair use of its tools and features, including\\
  \\ Llama 2. If you access or use Llama 2, you agree to this Acceptable Use Policy\\
  \\ (“Policy”). The most recent copy of this policy can be found at [ai.meta.com/llama/use-policy](http://ai.meta.com/llama/use-policy).\\n\\
  #### Prohibited Uses\\nWe want everyone to use Llama 2 safely and responsibly. You\\
  \\ agree you will not use, or allow others to use, Llama 2 to:\\n1. Violate the law\\
  \\ or others’ rights, including to:\\n      1. Engage in, promote, generate, contribute\\
  \\ to, encourage, plan, incite, or further illegal or unlawful activity or content,\\
  \\ such as: \\n          1. Violence or terrorism \\n          2. Exploitation or harm\\
  \\ to children, including the solicitation, creation, acquisition, or dissemination\\
  \\ of child exploitative content or failure to report Child Sexual Abuse Material\\n\\
  \\          3. Human trafficking, exploitation, and sexual violence\\n          4.\\
  \\ The illegal distribution of information or materials to minors, including obscene\\
  \\ materials, or failure to employ legally required age-gating in connection with\\
  \\ such information or materials.\\n          5. Sexual solicitation\\n          6.\\
  \\ Any other criminal activity\\n      2. Engage in, promote, incite, or facilitate\\
  \\ the harassment, abuse, threatening, or bullying of individuals or groups of individuals\\n\\
  \\      3. Engage in, promote, incite, or facilitate discrimination or other unlawful\\
  \\ or harmful conduct in the provision of employment, employment benefits, credit,\\
  \\ housing, other economic benefits, or other essential goods and services\\n    \\
  \\  4. Engage in the unauthorized or unlicensed practice of any profession including,\\
  \\ but not limited to, financial, legal, medical/health, or related professional\\
  \\ practices \\n      5. Collect, process, disclose, generate, or infer health, demographic,\\
  \\ or other sensitive personal or private information about individuals without rights\\
  \\ and consents required by applicable laws\\n      6. Engage in or facilitate any\\
  \\ action or generate any content that infringes, misappropriates, or otherwise violates\\
  \\ any third-party rights, including the outputs or results of any products or services\\
  \\ using the Llama 2 Materials\\n      7. Create, generate, or facilitate the creation\\
  \\ of malicious code, malware, computer viruses or do anything else that could disable,\\
  \\ overburden, interfere with or impair the proper working, integrity, operation\\
  \\ or appearance of a website or computer system \\n2. Engage in, promote, incite,\\
  \\ facilitate, or assist in the planning or development of activities that present\\
  \\ a risk of death or bodily harm to individuals, including use of Llama 2 related\\
  \\ to the following:\\n    1. Military, warfare, nuclear industries or applications,\\
  \\ espionage, use for materials or activities that are subject to the International\\
  \\ Traffic Arms Regulations (ITAR) maintained by the United States Department of\\
  \\ State\\n    2. Guns and illegal weapons (including weapon development)\\n    3.\\
  \\ Illegal drugs and regulated/controlled substances\\n    4. Operation of critical\\
  \\ infrastructure, transportation technologies, or heavy machinery\\n    5. Self-harm\\
  \\ or harm to others, including suicide, cutting, and eating disorders\\n    6. Any\\
  \\ content intended to incite or promote violence, abuse, or any infliction of bodily\\
  \\ harm to an individual\\n3. Intentionally deceive or mislead others, including use\\
  \\ of Llama 2 related to the following:\\n    1. Generating, promoting, or furthering\\
  \\ fraud or the creation or promotion of disinformation\\n    2. Generating, promoting,\\
  \\ or furthering defamatory content, including the creation of defamatory statements,\\
  \\ images, or other content\\n    3. Generating, promoting, or further distributing\\
  \\ spam\\n    4. Impersonating another individual without consent, authorization,\\
  \\ or legal right\\n    5. Representing that the use of Llama 2 or outputs are human-generated\\n\\
  \\    6. Generating or facilitating false online engagement, including fake reviews\\
  \\ and other means of fake online engagement \\n    4. Fail to appropriately disclose\\
  \\ to end users any known dangers of your AI system \\nPlease report any violation\\
  \\ of this Policy, software “bug,” or other problems that could lead to a violation\\
  \\ of this Policy through one of the following means: \\n    * Reporting issues with\\
  \\ the model: [github.com/facebookresearch/llama](http://github.com/facebookresearch/llama)\\n\\
  \\    * Reporting risky content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)\\n\\
  \\    * Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)\\
  \\ \\n    * Reporting violations of the Acceptable Use Policy or unlicensed uses of\\
  \\ Llama: [LlamaUseReport@meta.com](mailto:LlamaUseReport@meta.com)"
extra_gated_fields:
  First Name: text
  Last Name: text
  Date of birth: date_picker
  Country: country
  Affiliation: text
  geo: ip_location
  ? By clicking Submit below I accept the terms of the license and acknowledge that
    the information I provide will be collected stored processed and shared in accordance
    with the Meta Privacy Policy
  : checkbox
extra_gated_description: The information you provide will be collected, stored, processed
  and shared in accordance with the [Meta Privacy Policy](https://www.facebook.com/privacy/policy/).
extra_gated_button_content: Submit
language:
- en
pipeline_tag: text-generation
tags:
- facebook
- meta
- pytorch
- llama
- llama-2
license: llama2
---
# **Llama 2**
Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.

## Model Details
*Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the [website](https://ai.meta.com/resources/models-and-libraries/llama-downloads/) and accept our License before requesting access here.*

Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.

**Model Developers** Meta

**Variations** Llama 2 comes in a range of parameter sizes — 7B, 13B, and 70B — as well as pretrained and fine-tuned variations.

**Input** Models input text only.

**Output** Models generate text only.

**Model Architecture** Llama 2 is an auto-regressive language model that uses an optimized transformer architecture. The tuned versions use supervised fine-tuning (SFT) and reinforcement learning with human feedback (RLHF) to align to human preferences for helpfulness and safety.


||Training Data|Params|Content Length|GQA|Tokens|LR|
|---|---|---|---|---|---|---|
|Llama 2|*A new mix of publicly available online data*|7B|4k|&#10007;|2.0T|3.0 x 10<sup>-4</sup>|
|Llama 2|*A new mix of publicly available online data*|13B|4k|&#10007;|2.0T|3.0 x 10<sup>-4</sup>|
|Llama 2|*A new mix of publicly available online data*|70B|4k|&#10004;|2.0T|1.5 x 10<sup>-4</sup>|

*Llama 2 family of models.* Token counts refer to pretraining data only. All models are trained with a global batch-size of 4M tokens. Bigger models -  70B -- use Grouped-Query Attention (GQA) for improved inference scalability.

**Model Dates** Llama 2 was trained between January 2023 and July 2023.

**Status** This is a static model trained on an offline dataset. Future versions of the tuned models will be released as we improve model safety with community feedback.

**License** A custom commercial license is available at: [https://ai.meta.com/resources/models-and-libraries/llama-downloads/](https://ai.meta.com/resources/models-and-libraries/llama-downloads/)

**Research Paper** ["Llama-2: Open Foundation and Fine-tuned Chat Models"](arxiv.org/abs/2307.09288)

## Intended Use
**Intended Use Cases** Llama 2 is intended for commercial and research use in English. Tuned models are intended for assistant-like chat, whereas pretrained models can be adapted for a variety of natural language generation tasks.

To get the expected features and performance for the chat versions, a specific formatting needs to be followed, including the `INST` and `<<SYS>>` tags, `BOS` and `EOS` tokens, and the whitespaces and breaklines in between (we recommend calling `strip()` on inputs to avoid double-spaces). See our reference code in github for details: [`chat_completion`](https://github.com/facebookresearch/llama/blob/main/llama/generation.py#L212).

**Out-of-scope Uses** Use in any manner that violates applicable laws or regulations (including trade compliance laws).Use in languages other than English. Use in any other way that is prohibited by the Acceptable Use Policy and Licensing Agreement for Llama 2.

## Hardware and Software
**Training Factors** We used custom training libraries, Meta's Research Super Cluster, and production clusters for pretraining. Fine-tuning, annotation, and evaluation were also performed on third-party cloud compute.

**Carbon Footprint** Pretraining utilized a cumulative 3.3M GPU hours of computation on hardware of type A100-80GB (TDP of 350-400W). Estimated total emissions were 539 tCO2eq, 100% of which were offset by Meta’s sustainability program.

||Time (GPU hours)|Power Consumption (W)|Carbon Emitted(tCO<sub>2</sub>eq)|
|---|---|---|---|
|Llama 2 7B|184320|400|31.22|
|Llama 2 13B|368640|400|62.44|
|Llama 2 70B|1720320|400|291.42|
|Total|3311616||539.00|

**CO<sub>2</sub> emissions during pretraining.** Time: total GPU time required for training each model. Power Consumption: peak power capacity per GPU device for the GPUs used adjusted for power usage efficiency. 100% of the emissions are directly offset by Meta's sustainability program, and because we are openly releasing these models, the pretraining costs do not need to be incurred by others.

## Training Data
**Overview** Llama 2 was pretrained on 2 trillion tokens of data from publicly available sources. The fine-tuning data includes publicly available instruction datasets, as well as over one million new human-annotated examples. Neither the pretraining nor the fine-tuning datasets include Meta user data.

**Data Freshness** The pretraining data has a cutoff of September 2022, but some tuning data is more recent, up to July 2023.

## Evaluation Results

In this section, we report the results for the Llama 1 and Llama 2 models on standard academic benchmarks.For all the evaluations, we use our internal evaluations library.

|Model|Size|Code|Commonsense Reasoning|World Knowledge|Reading Comprehension|Math|MMLU|BBH|AGI Eval|
|---|---|---|---|---|---|---|---|---|---|
|Llama 1|7B|14.1|60.8|46.2|58.5|6.95|35.1|30.3|23.9|
|Llama 1|13B|18.9|66.1|52.6|62.3|10.9|46.9|37.0|33.9|
|Llama 1|33B|26.0|70.0|58.4|67.6|21.4|57.8|39.8|41.7|
|Llama 1|65B|30.7|70.7|60.5|68.6|30.8|63.4|43.5|47.6|
|Llama 2|7B|16.8|63.9|48.9|61.3|14.6|45.3|32.6|29.3|
|Llama 2|13B|24.5|66.9|55.4|65.8|28.7|54.8|39.4|39.1|
|Llama 2|70B|**37.5**|**71.9**|**63.6**|**69.4**|**35.2**|**68.9**|**51.2**|**54.2**|

**Overall performance on grouped academic benchmarks.** *Code:* We report the average pass@1 scores of our models on HumanEval and MBPP. *Commonsense Reasoning:* We report the average of PIQA, SIQA, HellaSwag, WinoGrande, ARC easy and challenge, OpenBookQA, and CommonsenseQA. We report 7-shot results for CommonSenseQA and 0-shot results for all other benchmarks. *World Knowledge:* We evaluate the 5-shot performance on NaturalQuestions and TriviaQA and report the average. *Reading Comprehension:* For reading comprehension, we report the 0-shot average on SQuAD, QuAC, and BoolQ. *MATH:* We report the average of the GSM8K (8 shot) and MATH (4 shot) benchmarks at top 1.

|||TruthfulQA|Toxigen|
|---|---|---|---|
|Llama 1|7B|27.42|23.00|
|Llama 1|13B|41.74|23.08|
|Llama 1|33B|44.19|22.57|
|Llama 1|65B|48.71|21.77|
|Llama 2|7B|33.29|**21.25**|
|Llama 2|13B|41.86|26.10|
|Llama 2|70B|**50.18**|24.60|

**Evaluation of pretrained LLMs on automatic safety benchmarks.** For TruthfulQA, we present the percentage of generations that are both truthful and informative (the higher the better). For ToxiGen, we present the percentage of toxic generations (the smaller the better).


|||TruthfulQA|Toxigen|
|---|---|---|---|
|Llama-2-Chat|7B|57.04|**0.00**|
|Llama-2-Chat|13B|62.18|**0.00**|
|Llama-2-Chat|70B|**64.14**|0.01|

**Evaluation of fine-tuned LLMs on different safety datasets.** Same metric definitions as above.

## Ethical Considerations and Limitations
Llama 2 is a new technology that carries risks with use. Testing conducted to date has been in English, and has not covered, nor could it cover all scenarios. For these reasons, as with all LLMs, Llama 2’s potential outputs cannot be predicted in advance, and the model may in some instances produce inaccurate, biased or other objectionable responses to user prompts. Therefore, before deploying any applications of Llama 2, developers should perform safety testing and tuning tailored to their specific applications of the model.

Please see the Responsible Use Guide available at [https://ai.meta.com/llama/responsible-use-guide/](https://ai.meta.com/llama/responsible-use-guide)

## Reporting Issues
Please report any software “bug,” or other problems with the models through one of the following means:
- Reporting issues with the model: [github.com/facebookresearch/llama](http://github.com/facebookresearch/llama)
- Reporting problematic content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)
- Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)

## Llama Model Index
|Model|Llama2|Llama2-hf|Llama2-chat|Llama2-chat-hf|
|---|---|---|---|---|
|7B| [Link](https://huggingface.co/meta-llama/Llama-2-7b) | [Link](https://huggingface.co/meta-llama/Llama-2-7b-hf) | [Link](https://huggingface.co/meta-llama/Llama-2-7b-chat) | [Link](https://huggingface.co/meta-llama/Llama-2-7b-chat-hf)|
|13B| [Link](https://huggingface.co/meta-llama/Llama-2-13b) | [Link](https://huggingface.co/meta-llama/Llama-2-13b-hf) | [Link](https://huggingface.co/meta-llama/Llama-2-13b-chat) | [Link](https://huggingface.co/meta-llama/Llama-2-13b-chat-hf)|
|70B| [Link](https://huggingface.co/meta-llama/Llama-2-70b) | [Link](https://huggingface.co/meta-llama/Llama-2-70b-hf) | [Link](https://huggingface.co/meta-llama/Llama-2-70b-chat) | [Link](https://huggingface.co/meta-llama/Llama-2-70b-chat-hf)|"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5869331061840057"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.879692"^^xsd:dateTime ;
    ns1:object "Asteroid"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/771e059c7890ae196a3227d36771c27f019638d33a819ca19bef2ae302b92b44> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6175175905227661"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.807505"^^xsd:dateTime ;
    ns1:object "{'name': 'Thomas Dandres', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/is_description_translated"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/is_description_translated> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.817855"^^xsd:dateTime ;
    ns1:object "Models quantized to 4-bit precision, reducing memory footprint while maintaining reasonable performance."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df2c9c7dc08f5514331c35b3bf3e4da58de6a14c0724dc40f90a3e588f9844dd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_points> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6823820769786835"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "ro"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "br"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "license:other"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9c03090b68b1e45d6bebe9b9d1ea103b6a4c064ceb71f16f08a5ae59d9bac70e> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/google/flan-t5-small/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.870732"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6b75cb265aea0eff37651595203eec38a2a621d81df99e4cfcd5f30cef590384> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.858654"^^xsd:dateTime ;
    ns1:object "PEFT"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f83566aa690a65900e25f19b29d427ae3a9b752766d6d3892299a866feca3edd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/output_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.794151"^^xsd:dateTime ;
    ns1:object "{'name': 'Eric Michael Smith', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.817270"^^xsd:dateTime ;
    ns1:object "Indicates a HuggingFace Space demo exists for this model allowing interactive testing without setup."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d75a16357850d2896a768db42c912a9487fd97a50f3358217d5bbb602c39b195> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.780665"^^xsd:dateTime ;
    ns1:object "Robust Speech Recognition via Large-Scale Weak Supervision"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ps"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.844340"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "zh"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.080831"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.809143"^^xsd:dateTime ;
    ns1:object "{'name': 'Albert Q. Jiang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.748153418302536"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Flan-T5 should not be applied for any unacceptable use cases, e.g., generation of abusive speech."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "mn"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.435792937874794"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The intended use of the creative work is not explicitly stated in the given context. However, it can be inferred that the creative work is intended for use in generating images for the desired characters, as mentioned in the \"Lora of chokai_azurlane\" section."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.783898"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2307.09288"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6208105981349945"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object """Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the development Status in the following text, here is a description of the property: (Description of development status, e.g. Active, inactive, suspended. See repostatus.org) here are some related sections: More Information 

Based *only* on the context provided"""^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/developmentStatus> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ln"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "kn"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/01ce031a92b6a44f90635a9aa473acc02c379a53ef7b0a0d8f88b6027a9ad64e> ;
    ns1:predicate <http://w3id.org/fair4ml/fineTunedFrom> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ln"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5920074284076691"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The operating systems supported by jinkrsmodel are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/lachiewyoung/test-mistral-7b/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "km"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.869944"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2ae536499f90e7e5edcd87dddf0d258801cae8e7a2f82d8ce02361ef54e77c05> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.796287"^^xsd:dateTime ;
    ns1:object "{'name': 'Sharan Narang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.850709"^^xsd:dateTime ;
    ns1:object "Tabular Classification"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4eaeba2a8985fdb21e18ca1e967f067a345c0498ed10fc3e5e9ba95e39876cab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'time_limit' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/nanos> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'generated_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.824254"^^xsd:dateTime ;
    ns1:object "mistral"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ddb15bfa0ef843723bc4c8a81ab1d826b1fc4ff36ed13faf8f8f3841261978b8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.42557597160339355"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/dabb9d310d39a47f81f009cd476a41773667de14be41c930213432a06ad59fb0> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5753261744976044"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.081002"^^xsd:dateTime ;
    ns1:object "text generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.101330"^^xsd:dateTime ;
    ns1:object "text-generation-inference"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.789766"^^xsd:dateTime ;
    ns1:object "{'name': 'Hakan Inan', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2024-03-04T01:33:40+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.788610"^^xsd:dateTime ;
    ns1:object "{'name': 'Brian Fuller', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.844513"^^xsd:dateTime ;
    ns1:object "Text2Text Generation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9abc397b7489422e962aeae20a5ed774806c8bd8f47e9008eef451699b8a61c1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/generated_tests/output"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.806577"^^xsd:dateTime ;
    ns1:object "cs.CY"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "main_splits"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.650457501411438"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.876508"^^xsd:dateTime ;
    ns1:object "PaddlePaddle"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ebbad1761fb8870fe41c968d83d4055b2799265db268338f3fa38c3849f7932a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Llama-2-7b-hf"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "license:apache-2.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.139181"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/qed"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/43bc0319b35edce6a819b7513d5d158c1ea9bd4b7e1f558fabd51fb09b4f7755> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.794631"^^xsd:dateTime ;
    ns1:object "{'name': 'Binh Tang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/generated_tests"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "[{\"raw_splits/split_name\":\"train\"},{\"raw_splits/split_name\":\"test\"},{\"raw_splits/split_name\":\"validation\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.791994"^^xsd:dateTime ;
    ns1:object "{'name': 'Xavier Martinet', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "gu"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "arxiv:1910.09700"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "raw/question"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "The name of the split."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.649835079908371"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object """---
extra_gated_heading: You need to share contact information with Meta to access this
  model
extra_gated_prompt: "### LLAMA 2 COMMUNITY LICENSE AGREEMENT\\n\\"Agreement\\" means\\
  \\ the terms and conditions for use, reproduction, distribution and  modification\\
  \\ of the Llama Materials set forth herein. \\n\\"Documentation\\" means the specifications,\\
  \\ manuals and documentation  accompanying Llama 2 distributed by Meta at https://ai.meta.com/resources/models-and-libraries/llama-downloads/.\\
  \\  \\n\\"Licensee\\" or \\"you\\" means you, or your employer or any other person or\\
  \\ entity (if you are entering into this Agreement on such person or entity's behalf),\\
  \\ of the age required under applicable laws, rules or regulations to provide legal\\
  \\ consent and that has legal authority to bind your employer or such other person\\
  \\ or  entity if you are  entering in this Agreement on their behalf. \\n\\"Llama 2\\"\\
  \\ means the foundational large language models and software and algorithms, including\\
  \\ machine-learning model code, trained model weights, inference-enabling code, training-enabling\\
  \\ code, fine-tuning enabling code and other  elements of the foregoing distributed\\
  \\ by Meta at ai.meta.com/resources/models-and-libraries/llama-downloads/.\\n\\"Llama\\
  \\ Materials\\" means, collectively, Meta's proprietary Llama 2 and documentation\\
  \\ (and any portion thereof) made available under this Agreement.\\n\\"Meta\\" or \\"\\
  we\\" means Meta Platforms Ireland Limited (if you are located in or, if you are\\
  \\ an entity, your principal place of business is in the EEA or Switzerland) and\\
  \\ Meta Platforms, Inc. (if you are located outside of the EEA or Switzerland). \\n\\
  \\nBy clicking \\"I Accept\\" below or by using or distributing any portion or element\\
  \\ of the Llama Materials, you agree to be bound by this Agreement.\\n1. License Rights\\
  \\ and Redistribution. \\na. Grant of Rights. You are granted a non-exclusive, worldwide,\\
  \\ non- transferable and royalty-free limited license under Meta's intellectual property\\
  \\ or  other rights owned by Meta embodied in the Llama Materials to use, reproduce,\\
  \\  distribute, copy, create derivative works of, and make modifications to the Llama\\
  \\  Materials.  \\nb. Redistribution and Use.\\ni. If you distribute or make the Llama\\
  \\ Materials, or any derivative works  thereof, available to a third party, you shall\\
  \\ provide a copy of this Agreement to such  third party. \\nii.  If you receive Llama\\
  \\ Materials, or any derivative works thereof, from  a Licensee as part of an integrated\\
  \\ end user product, then Section 2 of this  Agreement will not apply to you. \\n\\
  iii. You must retain in all copies of the Llama Materials that you  distribute the\\
  \\ following attribution notice within a \\"Notice\\" text file distributed as a  part\\
  \\ of such copies: \\"Llama 2 is licensed under the LLAMA 2 Community License,  Copyright\\
  \\ (c) Meta Platforms, Inc. All Rights Reserved.\\"\\niv. Your use of the Llama Materials\\
  \\ must comply with applicable laws  and regulations (including trade compliance\\
  \\ laws and regulations) and adhere to the  Acceptable Use Policy for the Llama Materials\\
  \\ (available at  https://ai.meta.com/llama/use-policy), which is hereby incorporated\\
  \\ by reference into  this Agreement.\\nv. You will not use the Llama Materials or\\
  \\ any output or results of the  Llama Materials to improve any other large language\\
  \\ model (excluding Llama 2 or  derivative works thereof).  \\n\\n2. Additional Commercial\\
  \\ Terms. If, on the Llama 2 version release date, the  monthly active users of the\\
  \\ products or services made available by or for Licensee,  or Licensee's affiliates,\\
  \\ is greater than 700 million monthly active users in the  preceding calendar month,\\
  \\ you must request a license from Meta, which Meta may  grant to you in its sole\\
  \\ discretion, and you are not authorized to exercise any of the  rights under this\\
  \\ Agreement unless or until Meta otherwise expressly grants you  such rights.\\n\\
  3. Disclaimer of Warranty. UNLESS REQUIRED BY APPLICABLE LAW, THE  LLAMA MATERIALS\\
  \\ AND ANY OUTPUT AND RESULTS THEREFROM ARE  PROVIDED ON AN \\"AS IS\\" BASIS, WITHOUT\\
  \\ WARRANTIES OF ANY KIND,  EITHER EXPRESS OR IMPLIED, INCLUDING, WITHOUT LIMITATION,\\
  \\ ANY  WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, OR  FITNESS FOR A\\
  \\ PARTICULAR PURPOSE. YOU ARE SOLELY RESPONSIBLE  FOR DETERMINING THE APPROPRIATENESS\\
  \\ OF USING OR REDISTRIBUTING  THE LLAMA MATERIALS AND ASSUME ANY RISKS ASSOCIATED\\
  \\ WITH YOUR  USE OF THE LLAMA MATERIALS AND ANY OUTPUT AND RESULTS.\\n4. Limitation\\
  \\ of Liability. IN NO EVENT WILL META OR ITS AFFILIATES BE  LIABLE UNDER ANY THEORY\\
  \\ OF LIABILITY, WHETHER IN CONTRACT, TORT,  NEGLIGENCE, PRODUCTS LIABILITY, OR OTHERWISE,\\
  \\ ARISING OUT OF THIS  AGREEMENT, FOR ANY LOST PROFITS OR ANY INDIRECT, SPECIAL,\\
  \\  CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR PUNITIVE DAMAGES, EVEN  IF META OR ITS\\
  \\ AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF  ANY OF THE FOREGOING.\\n\\n\\
  5. Intellectual Property.\\na. No trademark licenses are granted under this Agreement,\\
  \\ and in  connection with the Llama Materials, neither Meta nor Licensee may use\\
  \\ any name  or mark owned by or associated with the other or any of its affiliates,\\
  \\ except as  required for reasonable and customary use in describing and redistributing\\
  \\ the  Llama Materials.\\nb. Subject to Meta's ownership of Llama Materials and derivatives\\
  \\ made by or  for Meta, with respect to any derivative works and modifications of\\
  \\ the Llama  Materials that are made by you, as between you and Meta, you are and\\
  \\ will be the  owner of such derivative works and modifications.\\nc. If you institute\\
  \\ litigation or other proceedings against Meta or any entity  (including a cross-claim\\
  \\ or counterclaim in a lawsuit) alleging that the Llama  Materials or Llama 2 outputs\\
  \\ or results, or any portion of any of the foregoing,  constitutes infringement\\
  \\ of intellectual property or other rights owned or licensable  by you, then any\\
  \\ licenses granted to you under this Agreement shall terminate as of  the date such\\
  \\ litigation or claim is filed or instituted. You will indemnify and hold  harmless\\
  \\ Meta from and against any claim by any third party arising out of or related \\
  \\ to your use or distribution of the Llama Materials.\\n6. Term and Termination.\\
  \\ The term of this Agreement will commence upon your  acceptance of this Agreement\\
  \\ or access to the Llama Materials and will continue in  full force and effect until\\
  \\ terminated in accordance with the terms and conditions  herein. Meta may terminate\\
  \\ this Agreement if you are in breach of any term or  condition of this Agreement.\\
  \\ Upon termination of this Agreement, you shall delete  and cease use of the Llama\\
  \\ Materials. Sections 3, 4 and 7 shall survive the  termination of this Agreement.\\
  \\ \\n7. Governing Law and Jurisdiction. This Agreement will be governed and  construed\\
  \\ under the laws of the State of California without regard to choice of law  principles,\\
  \\ and the UN Convention on Contracts for the International Sale of Goods  does not\\
  \\ apply to this Agreement. The courts of California shall have exclusive  jurisdiction\\
  \\ of any dispute arising out of this Agreement. \\n### Llama 2 Acceptable Use Policy\\n\\
  Meta is committed to promoting safe and fair use of its tools and features, including\\
  \\ Llama 2. If you access or use Llama 2, you agree to this Acceptable Use Policy\\
  \\ (“Policy”). The most recent copy of this policy can be found at [ai.meta.com/llama/use-policy](http://ai.meta.com/llama/use-policy).\\n\\
  #### Prohibited Uses\\nWe want everyone to use Llama 2 safely and responsibly. You\\
  \\ agree you will not use, or allow others to use, Llama 2 to:\\n1. Violate the law\\
  \\ or others’ rights, including to:\\n      1. Engage in, promote, generate, contribute\\
  \\ to, encourage, plan, incite, or further illegal or unlawful activity or content,\\
  \\ such as: \\n          1. Violence or terrorism \\n          2. Exploitation or harm\\
  \\ to children, including the solicitation, creation, acquisition, or dissemination\\
  \\ of child exploitative content or failure to report Child Sexual Abuse Material\\n\\
  \\          3. Human trafficking, exploitation, and sexual violence\\n          4.\\
  \\ The illegal distribution of information or materials to minors, including obscene\\
  \\ materials, or failure to employ legally required age-gating in connection with\\
  \\ such information or materials.\\n          5. Sexual solicitation\\n          6.\\
  \\ Any other criminal activity\\n      2. Engage in, promote, incite, or facilitate\\
  \\ the harassment, abuse, threatening, or bullying of individuals or groups of individuals\\n\\
  \\      3. Engage in, promote, incite, or facilitate discrimination or other unlawful\\
  \\ or harmful conduct in the provision of employment, employment benefits, credit,\\
  \\ housing, other economic benefits, or other essential goods and services\\n    \\
  \\  4. Engage in the unauthorized or unlicensed practice of any profession including,\\
  \\ but not limited to, financial, legal, medical/health, or related professional\\
  \\ practices \\n      5. Collect, process, disclose, generate, or infer health, demographic,\\
  \\ or other sensitive personal or private information about individuals without rights\\
  \\ and consents required by applicable laws\\n      6. Engage in or facilitate any\\
  \\ action or generate any content that infringes, misappropriates, or otherwise violates\\
  \\ any third-party rights, including the outputs or results of any products or services\\
  \\ using the Llama 2 Materials\\n      7. Create, generate, or facilitate the creation\\
  \\ of malicious code, malware, computer viruses or do anything else that could disable,\\
  \\ overburden, interfere with or impair the proper working, integrity, operation\\
  \\ or appearance of a website or computer system \\n2. Engage in, promote, incite,\\
  \\ facilitate, or assist in the planning or development of activities that present\\
  \\ a risk of death or bodily harm to individuals, including use of Llama 2 related\\
  \\ to the following:\\n    1. Military, warfare, nuclear industries or applications,\\
  \\ espionage, use for materials or activities that are subject to the International\\
  \\ Traffic Arms Regulations (ITAR) maintained by the United States Department of\\
  \\ State\\n    2. Guns and illegal weapons (including weapon development)\\n    3.\\
  \\ Illegal drugs and regulated/controlled substances\\n    4. Operation of critical\\
  \\ infrastructure, transportation technologies, or heavy machinery\\n    5. Self-harm\\
  \\ or harm to others, including suicide, cutting, and eating disorders\\n    6. Any\\
  \\ content intended to incite or promote violence, abuse, or any infliction of bodily\\
  \\ harm to an individual\\n3. Intentionally deceive or mislead others, including use\\
  \\ of Llama 2 related to the following:\\n    1. Generating, promoting, or furthering\\
  \\ fraud or the creation or promotion of disinformation\\n    2. Generating, promoting,\\
  \\ or furthering defamatory content, including the creation of defamatory statements,\\
  \\ images, or other content\\n    3. Generating, promoting, or further distributing\\
  \\ spam\\n    4. Impersonating another individual without consent, authorization,\\
  \\ or legal right\\n    5. Representing that the use of Llama 2 or outputs are human-generated\\n\\
  \\    6. Generating or facilitating false online engagement, including fake reviews\\
  \\ and other means of fake online engagement \\n    4. Fail to appropriately disclose\\
  \\ to end users any known dangers of your AI system \\nPlease report any violation\\
  \\ of this Policy, software “bug,” or other problems that could lead to a violation\\
  \\ of this Policy through one of the following means: \\n    * Reporting issues with\\
  \\ the model: [github.com/facebookresearch/llama](http://github.com/facebookresearch/llama)\\n\\
  \\    * Reporting risky content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)\\n\\
  \\    * Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)\\
  \\ \\n    * Reporting violations of the Acceptable Use Policy or unlicensed uses of\\
  \\ Llama: [LlamaUseReport@meta.com](mailto:LlamaUseReport@meta.com)"
extra_gated_fields:
  First Name: text
  Last Name: text
  Date of birth: date_picker
  Country: country
  Affiliation: text
  geo: ip_location
  ? By clicking Submit below I accept the terms of the license and acknowledge that
    the information I provide will be collected stored processed and shared in accordance
    with the Meta Privacy Policy
  : checkbox
extra_gated_description: The information you provide will be collected, stored, processed
  and shared in accordance with the [Meta Privacy Policy](https://www.facebook.com/privacy/policy/).
extra_gated_button_content: Submit
language:
- en
pipeline_tag: text-generation
tags:
- facebook
- meta
- pytorch
- llama
- llama-2
license: llama2
---
# **Llama 2**
Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model, converted for the Hugging Face Transformers format. Links to other models can be found in the index at the bottom.

## Model Details
*Note: Use of this model is governed by the Meta license. In order to download the model weights and tokenizer, please visit the [website](https://ai.meta.com/resources/models-and-libraries/llama-downloads/) and accept our License before requesting access here.*

Meta developed and publicly released the Llama 2 family of large language models (LLMs), a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. Our fine-tuned LLMs, called Llama-2-Chat, are optimized for dialogue use cases. Llama-2-Chat models outperform open-source chat models on most benchmarks we tested, and in our human evaluations for helpfulness and safety, are on par with some popular closed-source models like ChatGPT and PaLM.

**Model Developers** Meta

**Variations** Llama 2 comes in a range of parameter sizes — 7B, 13B, and 70B — as well as pretrained and fine-tuned variations.

**Input** Models input text only.

**Output** Models generate text only.

**Model Architecture** Llama 2 is an auto-regressive language model that uses an optimized transformer architecture. The tuned versions use supervised fine-tuning (SFT) and reinforcement learning with human feedback (RLHF) to align to human preferences for helpfulness and safety.


||Training Data|Params|Content Length|GQA|Tokens|LR|
|---|---|---|---|---|---|---|
|Llama 2|*A new mix of publicly available online data*|7B|4k|&#10007;|2.0T|3.0 x 10<sup>-4</sup>|
|Llama 2|*A new mix of publicly available online data*|13B|4k|&#10007;|2.0T|3.0 x 10<sup>-4</sup>|
|Llama 2|*A new mix of publicly available online data*|70B|4k|&#10004;|2.0T|1.5 x 10<sup>-4</sup>|

*Llama 2 family of models.* Token counts refer to pretraining data only. All models are trained with a global batch-size of 4M tokens. Bigger models -  70B -- use Grouped-Query Attention (GQA) for improved inference scalability.

**Model Dates** Llama 2 was trained between January 2023 and July 2023.

**Status** This is a static model trained on an offline dataset. Future versions of the tuned models will be released as we improve model safety with community feedback.

**License** A custom commercial license is available at: [https://ai.meta.com/resources/models-and-libraries/llama-downloads/](https://ai.meta.com/resources/models-and-libraries/llama-downloads/)

**Research Paper** ["Llama-2: Open Foundation and Fine-tuned Chat Models"](arxiv.org/abs/2307.09288)

## Intended Use
**Intended Use Cases** Llama 2 is intended for commercial and research use in English. Tuned models are intended for assistant-like chat, whereas pretrained models can be adapted for a variety of natural language generation tasks.

To get the expected features and performance for the chat versions, a specific formatting needs to be followed, including the `INST` and `<<SYS>>` tags, `BOS` and `EOS` tokens, and the whitespaces and breaklines in between (we recommend calling `strip()` on inputs to avoid double-spaces). See our reference code in github for details: [`chat_completion`](https://github.com/facebookresearch/llama/blob/main/llama/generation.py#L212).

**Out-of-scope Uses** Use in any manner that violates applicable laws or regulations (including trade compliance laws).Use in languages other than English. Use in any other way that is prohibited by the Acceptable Use Policy and Licensing Agreement for Llama 2.

## Hardware and Software
**Training Factors** We used custom training libraries, Meta's Research Super Cluster, and production clusters for pretraining. Fine-tuning, annotation, and evaluation were also performed on third-party cloud compute.

**Carbon Footprint** Pretraining utilized a cumulative 3.3M GPU hours of computation on hardware of type A100-80GB (TDP of 350-400W). Estimated total emissions were 539 tCO2eq, 100% of which were offset by Meta’s sustainability program.

||Time (GPU hours)|Power Consumption (W)|Carbon Emitted(tCO<sub>2</sub>eq)|
|---|---|---|---|
|Llama 2 7B|184320|400|31.22|
|Llama 2 13B|368640|400|62.44|
|Llama 2 70B|1720320|400|291.42|
|Total|3311616||539.00|

**CO<sub>2</sub> emissions during pretraining.** Time: total GPU time required for training each model. Power Consumption: peak power capacity per GPU device for the GPUs used adjusted for power usage efficiency. 100% of the emissions are directly offset by Meta's sustainability program, and because we are openly releasing these models, the pretraining costs do not need to be incurred by others.

## Training Data
**Overview** Llama 2 was pretrained on 2 trillion tokens of data from publicly available sources. The fine-tuning data includes publicly available instruction datasets, as well as over one million new human-annotated examples. Neither the pretraining nor the fine-tuning datasets include Meta user data.

**Data Freshness** The pretraining data has a cutoff of September 2022, but some tuning data is more recent, up to July 2023.

## Evaluation Results

In this section, we report the results for the Llama 1 and Llama 2 models on standard academic benchmarks.For all the evaluations, we use our internal evaluations library.

|Model|Size|Code|Commonsense Reasoning|World Knowledge|Reading Comprehension|Math|MMLU|BBH|AGI Eval|
|---|---|---|---|---|---|---|---|---|---|
|Llama 1|7B|14.1|60.8|46.2|58.5|6.95|35.1|30.3|23.9|
|Llama 1|13B|18.9|66.1|52.6|62.3|10.9|46.9|37.0|33.9|
|Llama 1|33B|26.0|70.0|58.4|67.6|21.4|57.8|39.8|41.7|
|Llama 1|65B|30.7|70.7|60.5|68.6|30.8|63.4|43.5|47.6|
|Llama 2|7B|16.8|63.9|48.9|61.3|14.6|45.3|32.6|29.3|
|Llama 2|13B|24.5|66.9|55.4|65.8|28.7|54.8|39.4|39.1|
|Llama 2|70B|**37.5**|**71.9**|**63.6**|**69.4**|**35.2**|**68.9**|**51.2**|**54.2**|

**Overall performance on grouped academic benchmarks.** *Code:* We report the average pass@1 scores of our models on HumanEval and MBPP. *Commonsense Reasoning:* We report the average of PIQA, SIQA, HellaSwag, WinoGrande, ARC easy and challenge, OpenBookQA, and CommonsenseQA. We report 7-shot results for CommonSenseQA and 0-shot results for all other benchmarks. *World Knowledge:* We evaluate the 5-shot performance on NaturalQuestions and TriviaQA and report the average. *Reading Comprehension:* For reading comprehension, we report the 0-shot average on SQuAD, QuAC, and BoolQ. *MATH:* We report the average of the GSM8K (8 shot) and MATH (4 shot) benchmarks at top 1.

|||TruthfulQA|Toxigen|
|---|---|---|---|
|Llama 1|7B|27.42|23.00|
|Llama 1|13B|41.74|23.08|
|Llama 1|33B|44.19|22.57|
|Llama 1|65B|48.71|21.77|
|Llama 2|7B|33.29|**21.25**|
|Llama 2|13B|41.86|26.10|
|Llama 2|70B|**50.18**|24.60|

**Evaluation of pretrained LLMs on automatic safety benchmarks.** For TruthfulQA, we present the percentage of generations that are both truthful and informative (the higher the better). For ToxiGen, we present the percentage of toxic generations (the smaller the better).


|||TruthfulQA|Toxigen|
|---|---|---|---|
|Llama-2-Chat|7B|57.04|**0.00**|
|Llama-2-Chat|13B|62.18|**0.00**|
|Llama-2-Chat|70B|**64.14**|0.01|

**Evaluation of fine-tuned LLMs on different safety datasets.** Same metric definitions as above.

## Ethical Considerations and Limitations
Llama 2 is a new technology that carries risks with use. Testing conducted to date has been in English, and has not covered, nor could it cover all scenarios. For these reasons, as with all LLMs, Llama 2’s potential outputs cannot be predicted in advance, and the model may in some instances produce inaccurate, biased or other objectionable responses to user prompts. Therefore, before deploying any applications of Llama 2, developers should perform safety testing and tuning tailored to their specific applications of the model.

Please see the Responsible Use Guide available at [https://ai.meta.com/llama/responsible-use-guide/](https://ai.meta.com/llama/responsible-use-guide)

## Reporting Issues
Please report any software “bug,” or other problems with the models through one of the following means:
- Reporting issues with the model: [github.com/facebookresearch/llama](http://github.com/facebookresearch/llama)
- Reporting problematic content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)
- Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)

## Llama Model Index
|Model|Llama2|Llama2-hf|Llama2-chat|Llama2-chat-hf|
|---|---|---|---|---|
|7B| [Link](https://huggingface.co/meta-llama/Llama-2-7b) | [Link](https://huggingface.co/meta-llama/Llama-2-7b-hf) | [Link](https://huggingface.co/meta-llama/Llama-2-7b-chat) | [Link](https://huggingface.co/meta-llama/Llama-2-7b-chat-hf)|
|13B| [Link](https://huggingface.co/meta-llama/Llama-2-13b) | [Link](https://huggingface.co/meta-llama/Llama-2-13b-hf) | [Link](https://huggingface.co/meta-llama/Llama-2-13b-chat) | [Link](https://huggingface.co/meta-llama/Llama-2-13b-chat-hf)|
|70B| [Link](https://huggingface.co/meta-llama/Llama-2-70b) | [Link](https://huggingface.co/meta-llama/Llama-2-70b-hf) | [Link](https://huggingface.co/meta-llama/Llama-2-70b-chat) | [Link](https://huggingface.co/meta-llama/Llama-2-70b-chat-hf)|"""^^xsd:string ;
    ns1:predicate schema:releaseNotes ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw/options> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "su"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "license:llama2"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.822285"^^xsd:dateTime ;
    ns1:object "Models based on RoBERTa (Robustly Optimized BERT Approach), an optimized BERT variant with improved pretraining and performance."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bc69543009040d6e8dba73b201af25ed291f7933acca2056091eb5f643c4f919> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "dataset:qed"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.173472"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.144551"^^xsd:dateTime ;
    ns1:object "google"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/125d01550d26a191f055cd53b0b7bf0298ef4a173496f10aa09a87ca1b3fdcbe> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "whisper-base.en"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.112450"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/lachiewyoung"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f5a6a15b057055acaed46aabd835cf3eb56fa2343723cec43da3298c6a298537> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/google/flan-t5-small/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4478994905948639"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The model category is not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.788247"^^xsd:dateTime ;
    ns1:object "{'name': 'Jeremy Fu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/fadbdd40ae3e4d21fb8044995368c36935104a0e589c0bb691d566a182b91295> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object """ClassLabel column 'incorrect_solutions' from the Hugging Face parquet file.
Labels:
UNKNOWN_LANGUAGE (0), PYTHON (1), CPP (2), PYTHON3 (3), JAVA (4)"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6249355673789978"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object """Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors 

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

Context:
Usage > Transcription - Par. 1: Usage > Transcription:
### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).
Usage > Broader Implications > BibTeX entry and citation info - Par. 1: Usage > Broader Implications > BibTeX entry and citation info:

Question: Find the maintainer in the following text, here is a description of the property: (Individual responsible for maintaining the item.) here are some related sections: Model Card Contact ; Model Card Authors"""^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6430713534355164"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/4a958b2cddc6f3096d3a4e912c3bf694e8c132edcdb79366c6a34dff81cbbc7b> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.820256"^^xsd:dateTime ;
    ns1:object "Models quantized to 8-bit precision, balancing performance and memory efficiency."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/192e3c37cdad044da28b01edd768819d9dc9ebf5642a4dd3e0cf9564058b6d2a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "license:apache-2.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.870398"^^xsd:dateTime ;
    ns1:object "Apple's framework for integrating machine learning models into iOS, macOS, watchOS, and tvOS apps."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2ae536499f90e7e5edcd87dddf0d258801cae8e7a2f82d8ce02361ef54e77c05> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "de"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.868020"^^xsd:dateTime ;
    ns1:object "End-to-end speech processing toolkit covering ASR, TTS, speech translation, and speech enhancement."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e9f8dc5efdf686d003f27fc61cf3a0b9e5dbed094499e8e3332f5c535d686f3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.804575"^^xsd:dateTime ;
    ns1:object "{'name': 'Adam Roberts', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.852019"^^xsd:dateTime ;
    ns1:object "Reinforcement Learning"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3b4b981961ee604488ce9db2b6cea45a4fb777fb6ee8ef76bb274e14ff6cbdf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.806373"^^xsd:dateTime ;
    ns1:object "2019-10-21"^^xsd:date ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.855696"^^xsd:dateTime ;
    ns1:object "Transformers"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'answer' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "jw"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ba"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.413411"^^xsd:dateTime ;
    ns1:object "openai"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/863d9e15edc2c98657749abae884b48544051490f76ea0e913adf85a3f2727a5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.835947"^^xsd:dateTime ;
    ns1:object "Generates 3D models or scenes from textual descriptions."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dc96ea445d125873bc02183accca8dffafbc58c6100167ef5b113919f5afb57e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.831349"^^xsd:dateTime ;
    ns1:object "Creates images without specific text prompts or conditions."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6803a9142550ca466078b0794746397f37034f277ce6f45bb7f252be171ab407> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.823543"^^xsd:dateTime ;
    ns1:object "llama"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.810986"^^xsd:dateTime ;
    ns1:object "{'name': 'Marie-Anne Lachaux', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ro"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ms"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Split> ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/43bc0319b35edce6a819b7513d5d158c1ea9bd4b7e1f558fabd51fb09b4f7755> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw/correct> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object """---
language:
- ko
license: apache-2.0
base_model: openai/whisper-base
tags:
- hf-asr-leaderboard
- generated_from_trainer
datasets:
- DianaJin/sample
model-index:
- name: jinkrsmodel
  results: []
---

<!-- This model card has been generated automatically according to the information the Trainer had access to. You
should probably proofread and complete it, then remove this comment. -->

# jinkrsmodel

This model is a fine-tuned version of [openai/whisper-base](https://huggingface.co/openai/whisper-base) on the DianaJin/voice dataset.
It achieves the following results on the evaluation set:
- Loss: 1.2017
- Cer: 134.5133

## Model description

More information needed

## Intended uses & limitations

More information needed

## Training and evaluation data

More information needed

## Training procedure

### Training hyperparameters

The following hyperparameters were used during training:
- learning_rate: 1e-05
- train_batch_size: 16
- eval_batch_size: 8
- seed: 42
- optimizer: Adam with betas=(0.9,0.999) and epsilon=1e-08
- lr_scheduler_type: linear
- lr_scheduler_warmup_steps: 5
- training_steps: 40
- mixed_precision_training: Native AMP

### Training results

| Training Loss | Epoch | Step | Validation Loss | Cer      |
|:-------------:|:-----:|:----:|:---------------:|:--------:|
| No log        | 3.33  | 10   | 2.1701          | 13.2743  |
| No log        | 6.67  | 20   | 1.3824          | 55.3097  |
| 1.7663        | 10.0  | 30   | 1.2305          | 164.1593 |
| 1.7663        | 13.33 | 40   | 1.2017          | 134.5133 |


### Framework versions

- Transformers 4.36.0.dev0
- Pytorch 2.1.0+cu118
- Datasets 2.15.0
- Tokenizers 0.15.0
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.786543"^^xsd:dateTime ;
    ns1:object "{'name': 'Prajjwal Bhargava', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.861739"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e2cb5f7dba65387f6ecd56e7a642d33df8fca1197b2ac918cd629a6cd9b294b2> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.3905680328607559"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6826585829257965"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.098737"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.811514"^^xsd:dateTime ;
    ns1:object "{'name': 'Thibaut Lavril', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.799895"^^xsd:dateTime ;
    ns1:object "{'name': 'Yunxuan Li', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.792998"^^xsd:dateTime ;
    ns1:object "{'name': 'Andrew Poulton', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6935215592384338"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "2022-09-26T06:50:46+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "bs"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2025-02-07T17:17:17+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "tokenized/correct"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "bg"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.804387"^^xsd:dateTime ;
    ns1:object "{'name': 'Jacob Devlin', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "tr"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.801522"^^xsd:dateTime ;
    ns1:object "{'name': 'Alex Castro-Ros', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.808610"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "main/question"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "2024-04-17T08:40:16+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.135145"^^xsd:dateTime ;
    ns1:object "taskmaster2"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4a958b2cddc6f3096d3a4e912c3bf694e8c132edcdb79366c6a34dff81cbbc7b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.859668"^^xsd:dateTime ;
    ns1:object "Set of reliable implementations of reinforcement learning algorithms in PyTorch."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a3c9ca93ab7ec29d067dd25733037f174c1326ef487292e5e1c9eea5cb35feb1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object """ClassLabel column 'solutions' from the Hugging Face parquet file.
Labels:
UNKNOWN_LANGUAGE (0), PYTHON (1), CPP (2), PYTHON3 (3), JAVA (4)"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "arxiv:2307.09288"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/nanos> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "kk"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ja"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.885110"^^xsd:dateTime ;
    ns1:object "unity-sentis"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/145a1db14402ffd2d346a7bf50e3e9e8c75169383a079480e9ba655e5e2fab8a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6515145599842072"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:storageRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "mt"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "yo"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6388256251811981"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object """Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context does not contain the information needed to answer the question, respond with the exact phrase "Information not found".

Answer: Information not found.

### English to English 
In this example, the context tokens are 'unforced', meaning the model automatically predicts the output language
(English) and task (transcribe).

Question: Find the copyright Holder in the following text, here is a description of the property: (The party holding the legal copyright to the CreativeWork.) here are some related sections: Model Details

Based *only* on the context provided above, answer the question. If the context"""^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "mk"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.826237"^^xsd:dateTime ;
    ns1:object "Extracts answers from documents based on questions."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5294100683a6737ae3cdcdb512f4b8459993c27fd8f86917ce5e595178c28f6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.869363"^^xsd:dateTime ;
    ns1:object "MLX"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85b6833a0e3a566c8de87c0f42b57ec97f67e03180245edb416823e240ee11d1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.878919"^^xsd:dateTime ;
    ns1:object "Graphcore"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a2f3a1fe1480acaf0753eb2d5ef88519c7b81e26e6505fed6d5c93c3a5119a65> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "region:us"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.135792"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/djaym7/wiki_dialog"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9773f8d647166503d14c7a05030b47d6b1610f17bdd55e8c98cb4fc2b13a3379> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/plain_text/text> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "mg"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.795782"^^xsd:dateTime ;
    ns1:object "{'name': 'Yuchen Zhang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.164284"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e694cb482434e33f5aadafc7ba5607930722b2bd1b0cb252690679261c8692f4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.865828"^^xsd:dateTime ;
    ns1:object "Library for parameter-efficient transfer learning through adapter modules in transformer models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ef8c453c903ecc79a3f941fc76e3fb554c3c0e3459f4a7a1755e64539b934598> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.794972"^^xsd:dateTime ;
    ns1:object "{'name': 'Adina Williams', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/DianaJin/sample> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.791281"^^xsd:dateTime ;
    ns1:object "{'name': 'Jenya Lee', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/solutions/language> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "pt"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ht"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.389315"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2307.09288"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.807343"^^xsd:dateTime ;
    ns1:object "{'name': 'Victor Schmidt', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.784781"^^xsd:dateTime ;
    ns1:object "cs.AI"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/lachiewyoung/test-mistral-7b/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6901218891143799"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.841355"^^xsd:dateTime ;
    ns1:object "Translation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dd477ce37bc2c08950a1d845aa243dff8c0e03de15cc42b9b35295d514538a84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.810645"^^xsd:dateTime ;
    ns1:object "{'name': 'Lucile Saulnier', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4537627249956131"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The version of the CreativeWork embodied by a specified resource is not found in the provided context."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Split to which the example belongs to."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.810484"^^xsd:dateTime ;
    ns1:object "{'name': 'Guillaume Lample', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "main/answer"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sd"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.829205"^^xsd:dateTime ;
    ns1:object "Generates images from textual descriptions or prompts."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/660591e88f00e321049a76543ded76af3005cf92f0a834054184e0177278716c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.101177"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.812740"^^xsd:dateTime ;
    ns1:object "tags"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6b72a43d7396497fe9733cb91a9e688db073b7c1c583e2c5fca339bd414a4dac> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2023-11-30T05:06:05+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.819489"^^xsd:dateTime ;
    ns1:object "Carbon Emissions"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2f45196854d69c3bcc21304aceb64e2a3db2d17613399d7d3c7a21611573a4d5> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "yo"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ko"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/main/question> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/07456871ec04ff7e102a14a63ee4f77775baadaf5e404b74e2ab827a14335259> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6201388835906982"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/fadbdd40ae3e4d21fb8044995368c36935104a0e589c0bb691d566a182b91295> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/Xinging/llama2-7b_sft_0.1_ratio_alpaca_gpt4_proj_by_bbh_ntrain_4096/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.841699"^^xsd:dateTime ;
    ns1:object "Converts text from one language to another."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/dd477ce37bc2c08950a1d845aa243dff8c0e03de15cc42b9b35295d514538a84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.838707"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/017f19456e7a37fe3c1ad51165020b62cc12497d5d20651e073e3520a5099eb9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/04151ef09fe56a2be18a7d842066720d6e7cee10ed5bf1a3363193444decd94d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "base_model:finetune:meta-llama/Llama-2-7b-hf"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "raw"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.793786"^^xsd:dateTime ;
    ns1:object "{'name': 'Alan Schelten', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.825890"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5294100683a6737ae3cdcdb512f4b8459993c27fd8f86917ce5e595178c28f6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5244492441415787"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'question' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.832882"^^xsd:dateTime ;
    ns1:object "Generates video content based on textual descriptions."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cba5458c023bd0e333fefb47511914b963716a71b0356b435370871727585038> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object "plain_text/text"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/public_tests"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/b751528b59fc7a0677c52c99b85d41f69866dad58deffdbf1e33a510f27bc2f5> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.217555"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/07456871ec04ff7e102a14a63ee4f77775baadaf5e404b74e2ab827a14335259> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.800058"^^xsd:dateTime ;
    ns1:object "{'name': 'Xuezhi Wang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.808802"^^xsd:dateTime ;
    ns1:object "cs.AI"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.127511"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d24e90f006bf4dfce8be9dbaf9c92d1449f40b988b6cc52d60e48c40331dc607> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Split> ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "2022-09-26T06:50:46+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4102637767791748"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:copyrightHolder ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/correct> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.833909"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/8fd2e8ec655b6111cc83724fbc62c13d0c8b3442b1768b9bc35e0eceae0ebe85> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.817504"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/df2c9c7dc08f5514331c35b3bf3e4da58de6a14c0724dc40f90a3e588f9844dd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_tags> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.788947"^^xsd:dateTime ;
    ns1:object "{'name': 'Vedanuj Goswami', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.42019639909267426"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:maintainer ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.839537"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6fa5b295a0420d9a3cc819e672ebdd61720c48761f8c2960d28ff7f7655875be> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.857701"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/d462b48c96b732d754a938aa86dbd16bfb7478ca5b0c1f1f006c611c112094e9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.818296"^^xsd:dateTime ;
    ns1:object "custom_code"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55c2ef29f4fc34014e7c41f2439cd686ebcc0bd4d1a02299b7491148b03bd06b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/DianaJin/sample"^^xsd:string ;
    ns1:predicate schema:identifier ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2025-02-07T15:09:13+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/nanos> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.880157"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/7daea98679eae3b5819f476833cada39b566629edb49ee1f55db0016e8ecf118> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4833269864320755"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.793985"^^xsd:dateTime ;
    ns1:object "{'name': 'Ruan Silva', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/time_limit"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.866449"^^xsd:dateTime ;
    ns1:object "JavaScript library for running transformer models in browsers and Node.js environments."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5670ef7e87a4fbee3fa95024561f672fca6cc6a159a62e20ed73b98d267a72bd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/cf_points> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.827844"^^xsd:dateTime ;
    ns1:object "Object Detection"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c6a31d1f7013eb41349bc590b0cc16d51b0a1706fa3f70c1337a8eecf06d2173> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.784101"^^xsd:dateTime ;
    ns1:object """In this work, we develop and release Llama 2, a collection of pretrained and
fine-tuned large language models (LLMs) ranging in scale from 7 billion to 70
billion parameters. Our fine-tuned LLMs, called Llama 2-Chat, are optimized for
dialogue use cases. Our models outperform open-source chat models on most
benchmarks we tested, and based on our human evaluations for helpfulness and
safety, may be a suitable substitute for closed-source models. We provide a
detailed description of our approach to fine-tuning and safety improvements of
Llama 2-Chat in order to enable the community to build on our work and
contribute to the responsible development of LLMs."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.809955"^^xsd:dateTime ;
    ns1:object "{'name': 'Diego de las Casas', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6891668736934662"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.809796"^^xsd:dateTime ;
    ns1:object "{'name': 'Devendra Singh Chaplot', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/cf_contest_id"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_contest_id> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.844110"^^xsd:dateTime ;
    ns1:object "Creates natural language text based on initial prompts."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6925cb204ab4d5280c948ac7e23dd8f7b48d1de433cf9edc5c30a8d87ce3b317> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/DianaJin/sample/discussions> ;
    ns1:predicate schema:discussionUrl ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7005455791950226"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Ethical Considerations and Limitations: Llama 2 is a new technology that carries risks with use. Testing conducted to date has been in English, and has not covered, nor could it cover all scenarios. For these reasons, as with all LLMs, Llama 2’s potential outputs cannot be predicted in advance, and the model may in some instances produce inaccurate, biased or other objectionable responses to user prompts. Therefore, before deploying any applications of Llama 2, developers should perform safety testing and tuning tailored to their specific applications of the model."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.801024"^^xsd:dateTime ;
    ns1:object "{'name': 'Mirac Suzgun', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.837691"^^xsd:dateTime ;
    ns1:object "Categorizes text documents into predefined classes."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85f0e69a70ce025a206d6ddbf78d989a3cabbdae215f2045df9b67b21a9d6780> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.809465"^^xsd:dateTime ;
    ns1:object "{'name': 'Arthur Mensch', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "la"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_index> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object """---
language:
- en
tags:
- audio
- automatic-speech-recognition
- hf-asr-leaderboard
widget:
- example_title: Librispeech sample 1
  src: https://cdn-media.huggingface.co/speech_samples/sample1.flac
- example_title: Librispeech sample 2
  src: https://cdn-media.huggingface.co/speech_samples/sample2.flac
pipeline_tag: automatic-speech-recognition
license: apache-2.0
model-index:
- name: whisper-base.en
  results:
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (clean)
      type: librispeech_asr
      config: clean
      split: test
      args:
        language: en
    metrics:
    - type: wer
      name: Test WER
  - task:
      type: automatic-speech-recognition
      name: Automatic Speech Recognition
    dataset:
      name: LibriSpeech (other)
      type: librispeech_asr
      config: other
      split: test
      args:
        language: en
    metrics:
    - type: wer
      value: 12.803978669490565
      name: Test WER
---

# Whisper

Whisper is a pre-trained model for automatic speech recognition (ASR) and speech translation. Trained on 680k hours 
of labelled data, Whisper models demonstrate a strong ability to generalise to many datasets and domains **without** the need 
for fine-tuning.

Whisper was proposed in the paper [Robust Speech Recognition via Large-Scale Weak Supervision](https://arxiv.org/abs/2212.04356) 
by Alec Radford et al. from OpenAI. The original code repository can be found [here](https://github.com/openai/whisper).

**Disclaimer**: Content for this model card has partly been written by the Hugging Face team, and parts of it were 
copied and pasted from the original model card.

## Model details

Whisper is a Transformer based encoder-decoder model, also referred to as a _sequence-to-sequence_ model. 
It was trained on 680k hours of labelled speech data annotated using large-scale weak supervision. 

The models were trained on either English-only data or multilingual data. The English-only models were trained 
on the task of speech recognition. The multilingual models were trained on both speech recognition and speech 
translation. For speech recognition, the model predicts transcriptions in the *same* language as the audio. 
For speech translation, the model predicts transcriptions to a *different* language to the audio.

Whisper checkpoints come in five configurations of varying model sizes.
The smallest four are trained on either English-only or multilingual data.
The largest checkpoints are multilingual only. All ten of the pre-trained checkpoints 
are available on the [Hugging Face Hub](https://huggingface.co/models?search=openai/whisper). The 
checkpoints are summarised in the following table with links to the models on the Hub:

| Size     | Parameters | English-only                                         | Multilingual                                        |
|----------|------------|------------------------------------------------------|-----------------------------------------------------|
| tiny     | 39 M       | [✓](https://huggingface.co/openai/whisper-tiny.en)   | [✓](https://huggingface.co/openai/whisper-tiny)     |
| base     | 74 M       | [✓](https://huggingface.co/openai/whisper-base.en)   | [✓](https://huggingface.co/openai/whisper-base)     |
| small    | 244 M      | [✓](https://huggingface.co/openai/whisper-small.en)  | [✓](https://huggingface.co/openai/whisper-small)    |
| medium   | 769 M      | [✓](https://huggingface.co/openai/whisper-medium.en) | [✓](https://huggingface.co/openai/whisper-medium)   |
| large    | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large)    |
| large-v2 | 1550 M     | x                                                    | [✓](https://huggingface.co/openai/whisper-large-v2) |

# Usage

This checkpoint is an *English-only* model, meaning it can be used for English speech recognition. Multilingual speech 
recognition or speech translation is possible through use of a multilingual checkpoint.

To transcribe audio samples, the model has to be used alongside a [`WhisperProcessor`](https://huggingface.co/docs/transformers/model_doc/whisper#transformers.WhisperProcessor).

The `WhisperProcessor` is used to:
1. Pre-process the audio inputs (converting them to log-Mel spectrograms for the model)
2. Post-process the model outputs (converting them from tokens to text)

## Transcription

```python
>>> from transformers import WhisperProcessor, WhisperForConditionalGeneration
>>> from datasets import load_dataset

>>> # load model and processor
>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base.en")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base.en")

>>> # load dummy dataset and read audio files
>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]
>>> input_features = processor(sample["array"], sampling_rate=sample["sampling_rate"], return_tensors="pt").input_features 

>>> # generate token ids
>>> predicted_ids = model.generate(input_features)
>>> # decode token ids to text
>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=False)
['<|startoftranscript|><|notimestamps|> Mr. Quilter is the apostle of the middle classes, and we are glad to welcome his gospel.<|endoftext|>']

>>> transcription = processor.batch_decode(predicted_ids, skip_special_tokens=True)
[' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.']
```
The context tokens can be removed from the start of the transcription by setting `skip_special_tokens=True`.

## Evaluation

This code snippet shows how to evaluate Whisper base.en on [LibriSpeech test-clean](https://huggingface.co/datasets/librispeech_asr):
 
```python
>>> from datasets import load_dataset
>>> from transformers import WhisperForConditionalGeneration, WhisperProcessor
>>> import torch
>>> from evaluate import load

>>> librispeech_test_clean = load_dataset("librispeech_asr", "clean", split="test")

>>> processor = WhisperProcessor.from_pretrained("openai/whisper-base.en")
>>> model = WhisperForConditionalGeneration.from_pretrained("openai/whisper-base.en").to("cuda")

>>> def map_to_pred(batch):
>>>     audio = batch["audio"]
>>>     input_features = processor(audio["array"], sampling_rate=audio["sampling_rate"], return_tensors="pt").input_features
>>>     batch["reference"] = processor.tokenizer._normalize(batch['text'])
>>> 
>>>     with torch.no_grad():
>>>         predicted_ids = model.generate(input_features.to("cuda"))[0]
>>>     transcription = processor.decode(predicted_ids)
>>>     batch["prediction"] = processor.tokenizer._normalize(transcription)
>>>     return batch

>>> result = librispeech_test_clean.map(map_to_pred)

>>> wer = load("wer")
>>> print(100 * wer.compute(references=result["reference"], predictions=result["prediction"]))
4.271408904897505
```

## Long-Form Transcription

The Whisper model is intrinsically designed to work on audio samples of up to 30s in duration. However, by using a chunking 
algorithm, it can be used to transcribe audio samples of up to arbitrary length. This is possible through Transformers 
[`pipeline`](https://huggingface.co/docs/transformers/main_classes/pipelines#transformers.AutomaticSpeechRecognitionPipeline) 
method. Chunking is enabled by setting `chunk_length_s=30` when instantiating the pipeline. With chunking enabled, the pipeline 
can be run with batched inference. It can also be extended to predict sequence level timestamps by passing `return_timestamps=True`:

```python
>>> import torch
>>> from transformers import pipeline
>>> from datasets import load_dataset

>>> device = "cuda:0" if torch.cuda.is_available() else "cpu"

>>> pipe = pipeline(
>>>   "automatic-speech-recognition",
>>>   model="openai/whisper-base.en",
>>>   chunk_length_s=30,
>>>   device=device,
>>> )

>>> ds = load_dataset("hf-internal-testing/librispeech_asr_dummy", "clean", split="validation")
>>> sample = ds[0]["audio"]

>>> prediction = pipe(sample.copy(), batch_size=8)["text"]
" Mr. Quilter is the apostle of the middle classes, and we are glad to welcome his gospel."

>>> # we can also return timestamps for the predictions
>>> prediction = pipe(sample.copy(), batch_size=8, return_timestamps=True)["chunks"]
[{'text': ' Mr. Quilter is the apostle of the middle classes and we are glad to welcome his gospel.',
  'timestamp': (0.0, 5.44)}]
```

Refer to the blog post [ASR Chunking](https://huggingface.co/blog/asr-chunking) for more details on the chunking algorithm.

## Fine-Tuning

The pre-trained Whisper model demonstrates a strong ability to generalise to different datasets and domains. However, 
its predictive capabilities can be improved further for certain languages and tasks through *fine-tuning*. The blog 
post [Fine-Tune Whisper with 🤗 Transformers](https://huggingface.co/blog/fine-tune-whisper) provides a step-by-step 
guide to fine-tuning the Whisper model with as little as 5 hours of labelled data.

### Evaluated Use

The primary intended users of these models are AI researchers studying robustness, generalization, capabilities, biases, and constraints of the current model. However, Whisper is also potentially quite useful as an ASR solution for developers, especially for English speech recognition. We recognize that once models are released, it is impossible to restrict access to only “intended” uses or to draw reasonable guidelines around what is or is not research.

The models are primarily trained and evaluated on ASR and speech translation to English tasks. They show strong ASR results in ~10 languages. They may exhibit additional capabilities, particularly if fine-tuned on certain tasks like voice activity detection, speaker classification, or speaker diarization but have not been robustly evaluated in these areas. We strongly recommend that users perform robust evaluations of the models in a particular context and domain before deploying them.

In particular, we caution against using Whisper models to transcribe recordings of individuals taken without their consent or purporting to use these models for any kind of subjective classification. We recommend against use in high-risk domains like decision-making contexts, where flaws in accuracy can lead to pronounced flaws in outcomes. The models are intended to transcribe and translate speech, use of the model for classification is not only not evaluated but also not appropriate, particularly to infer human attributes.


## Training Data

The models are trained on 680,000 hours of audio and the corresponding transcripts collected from the internet. 65% of this data (or 438,000 hours) represents English-language audio and matched English transcripts, roughly 18% (or 126,000 hours) represents non-English audio and English transcripts, while the final 17% (or 117,000 hours) represents non-English audio and the corresponding transcript. This non-English data represents 98 different languages. 

As discussed in [the accompanying paper](https://cdn.openai.com/papers/whisper.pdf), we see that performance on transcription in a given language is directly correlated with the amount of training data we employ in that language.


## Performance and Limitations

Our studies show that, over many existing ASR systems, the models exhibit improved robustness to accents, background noise, technical language, as well as zero shot translation from multiple languages into English; and that accuracy on speech recognition and translation is near the state-of-the-art level. 

However, because the models are trained in a weakly supervised manner using large-scale noisy data, the predictions may include texts that are not actually spoken in the audio input (i.e. hallucination). We hypothesize that this happens because, given their general knowledge of language, the models combine trying to predict the next word in audio with trying to transcribe the audio itself.

Our models perform unevenly across languages, and we observe lower accuracy on low-resource and/or low-discoverability languages or languages where we have less training data. The models also exhibit disparate performance on different accents and dialects of particular languages, which may include higher word error rate across speakers of different genders, races, ages, or other demographic criteria. Our full evaluation results are presented in [the paper accompanying this release](https://cdn.openai.com/papers/whisper.pdf). 

In addition, the sequence-to-sequence architecture of the model makes it prone to generating repetitive texts, which can be mitigated to some degree by beam search and temperature scheduling but not perfectly. Further analysis on these limitations are provided in [the paper](https://cdn.openai.com/papers/whisper.pdf). It is likely that this behavior and hallucinations may be worse on lower-resource and/or lower-discoverability languages.


## Broader Implications

We anticipate that Whisper models’ transcription capabilities may be used for improving accessibility tools. While Whisper models cannot be used for real-time transcription out of the box – their speed and size suggest that others may be able to build applications on top of them that allow for near-real-time speech recognition and translation. The real value of beneficial applications built on top of Whisper models suggests that the disparate performance of these models may have real economic implications.

There are also potential dual use concerns that come with releasing Whisper. While we hope the technology will be used primarily for beneficial purposes, making ASR technology more accessible could enable more actors to build capable surveillance technologies or scale up existing surveillance efforts, as the speed and accuracy allow for affordable automatic transcription and translation of large volumes of audio communication. Moreover, these models may have some capabilities to recognize specific individuals out of the box, which in turn presents safety concerns related both to dual use and disparate performance. In practice, we expect that the cost of transcription is not the limiting factor of scaling up surveillance projects.


### BibTeX entry and citation info
```bibtex
@misc{radford2022whisper,
  doi = {10.48550/ARXIV.2212.04356},
  url = {https://arxiv.org/abs/2212.04356},
  author = {Radford, Alec and Kim, Jong Wook and Xu, Tao and Brockman, Greg and McLeavey, Christine and Sutskever, Ilya},
  title = {Robust Speech Recognition via Large-Scale Weak Supervision},
  publisher = {arXiv},
  year = {2022},
  copyright = {arXiv.org perpetual, non-exclusive license}
}
```
"""^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.868807"^^xsd:dateTime ;
    ns1:object "Deep learning library that simplifies training neural networks using modern best practices."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3db362f2d160db0ec9efef6e48b6ba6fc466784d4fdf38393a2818c9c974f93e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/0dce0f5e7319b6178cd79d5f2163f0e134d0064f4ea4f93e8afeec1e7d78fa8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6119926273822784"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the funding in the given text. Therefore, the answer is \"Information not found\"."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.379232"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2024-03-04T01:31:41+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'time_limit' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.134624"^^xsd:dateTime ;
    ns1:object "svakulenk0/qrecc"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/db86f2c8ce693db878b689231690fab2fe37b7ae1abc1e54dca9fae35bc0df0d> ;
    ns1:predicate <http://w3id.org/fair4ml/mlTask> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ar"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.884098"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ee41d767ffa75d0037ac340fa59164645b363ea8891e2a3f815c644b81ea9fbd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.793189"^^xsd:dateTime ;
    ns1:object "{'name': 'Jeremy Reizenstein', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2022-10-21T09:59:24+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.878078"^^xsd:dateTime ;
    ns1:object "Fairseq"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4acb0244517b271c7719eadb638a9049f7dfa43a14bf6eb119d83c2dbc6d856f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.788777"^^xsd:dateTime ;
    ns1:object "{'name': 'Cynthia Gao', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.860002"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4e5443728f51b2323bf3a1c4a6a6d8612484cbca0a8b0beeb5fb0258d1df5196> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/public_tests> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.877266"^^xsd:dateTime ;
    ns1:object "OpenVINO"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5931df18dd0fa4a7991df9c03e52fe5074eee570f6c3e7b480947ec85d10c3a1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.868313"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3db362f2d160db0ec9efef6e48b6ba6fc466784d4fdf38393a2818c9c974f93e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.819904"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/192e3c37cdad044da28b01edd768819d9dc9ebf5642a4dd3e0cf9564058b6d2a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/cf_points"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_points> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw/split> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.801362"^^xsd:dateTime ;
    ns1:object "{'name': 'Aakanksha Chowdhery', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9c51ba772888465129d6bda3b0b520a3a16960b8c108a8cd2276eb4fb85ee5f2> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/CyberHarem/chokai_azurlane/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "dataset:gsm8k"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.849345"^^xsd:dateTime ;
    ns1:object "Categorizes audio clips into predefined classes."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b9cbedab515a4ba3d4c78d2aaebae3eaaa730c9bfc49212dad2910d0f2c63595> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.874477"^^xsd:dateTime ;
    ns1:object "OpenCLIP"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a0e0c1ddbfc3fa3aaab6bbd4ee4022410d9adc63e05996f59a545a7929aaf019> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_tags> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Float ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_points> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "dataset:CyberHarem/chokai_azurlane"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.837098"^^xsd:dateTime ;
    ns1:object "Extracts meaningful features from images for downstream tasks."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/46fd5133284e3f6058330c31c628a6854b5eeb608d471e58c7052d9365f5acf4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'generated_tests' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/is_description_translated> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "uk"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ae90ef66c09404023339909f0f1856b23a74105facc2f47abece54a0793d7e33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ka"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.101014"^^xsd:dateTime ;
    ns1:object "autotrain_compatible"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "en"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.872547"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/316fd1b6c56f67729f7e0880d91953804a9af869ce76b2906f26f3d534937931> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_contest_id> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "sq"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'time_limit' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/seconds> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.450944"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/13e6e4095523310627190177e08c0206ca97e76f4c4565c15c2b35270daa2588> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.832130"^^xsd:dateTime ;
    ns1:object "Categorizes video content into predefined classes."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9132b663f2893be0a7b034405164be91c4fe250d2b1ecd3390fb9b9bd689997b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "[{\"socratic_splits/split_name\":\"train\"},{\"socratic_splits/split_name\":\"test\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/raw_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "br"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5862353444099426"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/hasCO2eEmissions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.822045"^^xsd:dateTime ;
    ns1:object "roberta"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/bc69543009040d6e8dba73b201af25ed291f7933acca2056091eb5f643c4f919> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.868572"^^xsd:dateTime ;
    ns1:object "fastai"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3db362f2d160db0ec9efef6e48b6ba6fc466784d4fdf38393a2818c9c974f93e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.100852"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "license:apache-2.0"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "fi"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ru"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.818718"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6726f6435b32ab359d8c48bd5f24d3180c4c1772a769d50d3b4c8cf8f0ecd46> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.873480"^^xsd:dateTime ;
    ns1:object "Lightweight solution for mobile and embedded devices to run optimized TensorFlow models with low latency."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b6bffbd25ee4f19a8e55b6c7f32040744865e1e7d74080964d19fac6f207948c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "bs"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7119956016540527"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object true ;
    ns1:predicate <http://mlcommons.org/croissant/repeated> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.217390"^^xsd:dateTime ;
    ns1:object "whisper"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a7eca72cd0a3a0ce30e3b37b299034e8cf2e3b921a7deaf54545b7d00e88c5e4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.721417248249054"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ddb15bfa0ef843723bc4c8a81ab1d826b1fc4ff36ed13faf8f8f3841261978b8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.199260"^^xsd:dateTime ;
    ns1:object "openai/whisper-base"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/01ce031a92b6a44f90635a9aa473acc02c379a53ef7b0a0d8f88b6027a9ad64e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.872327"^^xsd:dateTime ;
    ns1:object "Library for lightweight pipelining in Python, used for saving/loading Python objects and parallelizing loops."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/55f0c4818716a5c86a051b41b27450e6f00f7e81d8a89b0f3bd6928719ce08e4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/input_file> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/863d9e15edc2c98657749abae884b48544051490f76ea0e913adf85a3f2727a5> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "lb"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.798541"^^xsd:dateTime ;
    ns1:object "cs.LG"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.082630"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f68885f104a68685936c980fdc14f386a9ccf26d5fa89b57ee217dbaf592e58a> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.853636"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'cf_tags' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_tags> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.785770"^^xsd:dateTime ;
    ns1:object "{'name': 'Amjad Almahairi', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'options' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base.en/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/cafa6cfd9a4170cbf6a99f2d8b42715517f11068dc92b807e31dad9ab0535893> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "2022-09-26T06:58:29+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.814473"^^xsd:dateTime ;
    ns1:object "Models that can be fine-tuned using HuggingFace's AutoTrain service without requiring manual code."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/59b663660275b892172a573e140e5eeec1a75e54c1838aea8d6f78d0f6286eba> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4917215257883072"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/socratic/split> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4351206570863724"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.830823"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6803a9142550ca466078b0794746397f37034f277ce6f45bb7f252be171ab407> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.826061"^^xsd:dateTime ;
    ns1:object "Document Question Answering"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5294100683a6737ae3cdcdb512f4b8459993c27fd8f86917ce5e595178c28f6d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6613752841949463"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The version of the CreativeWork embodied by a specified resource is not mentioned in the provided context."^^xsd:string ;
    ns1:predicate schema:version ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.475635"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.849652"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1759562ba5af131b8ba1cdb4e06a2cee5c1ebff35971610e6ef2eb585b413ef7> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "am"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.153218"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/domain> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/cafa6cfd9a4170cbf6a99f2d8b42715517f11068dc92b807e31dad9ab0535893> ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.833186"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/427579e1091b3a9a3bf55b54c4167319ee1e7fd37d7a1389722fcb73d6a8901c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "2023-07-13T16:16:13+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateCreated ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.828023"^^xsd:dateTime ;
    ns1:object "Identifies and locates objects within images using bounding boxes."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c6a31d1f7013eb41349bc590b0cc16d51b0a1706fa3f70c1337a8eecf06d2173> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/solutions"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/cf_tags> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Splits for the tokenized config."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.783520"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "et"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.860578"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/934dea1e0796f0376db45e4b74e093aeb422ffdf79cf5c4aaea1e5e84969c76e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "The name of the split."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.782897"^^xsd:dateTime ;
    ns1:object "{'name': 'Greg Brockman', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/759dcfce11b186065b46fb94fef1c569da9001c123861ba72ba0708e554bd6c4> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/google/flan-t5-small/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.135631"^^xsd:dateTime ;
    ns1:object "djaym7/wiki_dialog"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9773f8d647166503d14c7a05030b47d6b1610f17bdd55e8c98cb4fc2b13a3379> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.834828"^^xsd:dateTime ;
    ns1:object "Zero Shot Object Detection"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ab2624f913f0d530408cbfa25c29a33523a1a481ba19c3d46f91a6fac4e63844> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7548916637897491"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The ethical considerations and risks section of the text discusses the potential for Flan-T5 to generate inappropriate content or replicate inherent biases in the underlying data. Additionally, the sensitive use section states that Flan-T5 should not be applied for any unacceptable use cases, such as generating abusive speech."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.138867"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/43bc0319b35edce6a819b7513d5d158c1ea9bd4b7e1f558fabd51fb09b4f7755> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "yi"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.829800"^^xsd:dateTime ;
    ns1:object "Converts visual content from images into textual representations."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/266c130bc128debb0db48b7a2e58c6423c7bafb2445fcccd68e2da192f3487d1> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.116829"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2310.06825"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/output_file> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.806142"^^xsd:dateTime ;
    ns1:object """From an environmental standpoint, there are a few crucial aspects of training
a neural network that have a major impact on the quantity of carbon that it
emits. These factors include: the location of the server used for training and
the energy grid that it uses, the length of the training procedure, and even
the make and model of hardware on which the training takes place. In order to
approximate these emissions, we present our Machine Learning Emissions
Calculator, a tool for our community to better understand the environmental
impact of training ML models. We accompany this tool with an explanation of the
factors cited above, as well as concrete actions that individual practitioners
and organizations can take to mitigate their carbon emissions."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/24d02c4c9af718667adb32f98890ccae3daa567e09e890fbcc6baa38ee130dd0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/output> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/61cce84de930f0da8c78ddef3203a2afac70cf5e46684f0407180738cd821965> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6507340669631958"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.649835079908371"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ur"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.783221"^^xsd:dateTime ;
    ns1:object "{'name': 'Ilya Sutskever', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "eu"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5116723775863647"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.838890"^^xsd:dateTime ;
    ns1:object "Table Question Answering"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/017f19456e7a37fe3c1ad51165020b62cc12497d5d20651e073e3520a5099eb9> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.137607"^^xsd:dateTime ;
    ns1:object "aqua_rat"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "socratic"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.792811"^^xsd:dateTime ;
    ns1:object "{'name': 'Yixin Nie', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5876661539077759"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelCategory> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default_splits/split_name> ;
    ns1:predicate <http://mlcommons.org/croissant/key> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/memory_limit_bytes> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "lb"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/time_limit/nanos"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/time_limit/nanos> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6321336030960083"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:processorRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.797430"^^xsd:dateTime ;
    ns1:object "{'name': 'Thomas Scialom', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6773373186588287"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object "Split to which the example belongs to."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.847856"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21a4b3b0fe861021548d89e241eb815b3c147c6d12ec9eade6925be45bc78650> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.845073"^^xsd:dateTime ;
    ns1:object "Fill Mask"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a464d85abf29c8b2f8dc299e9fe390a547c8450e42b7ab0ccaac88fdcaeaaa84> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.418559"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "kn"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6476988792419434"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:contributor ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "oc"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'is_description_translated' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/is_description_translated> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "cs"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/trainedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.780884"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2212.04356"^^xsd:string ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/plain_text/split> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.874303"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/a0e0c1ddbfc3fa3aaab6bbd4ee4022410d9adc63e05996f59a545a7929aaf019> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.797100"^^xsd:dateTime ;
    ns1:object "{'name': 'Robert Stojnic', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.880888"^^xsd:dateTime ;
    ns1:object "AllenNLP"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f398a6ed462d305d58506b378a7b488c448115a8aef746a62331a8435d54a72b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.790421"^^xsd:dateTime ;
    ns1:object "{'name': 'Isabel Kloumann', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.848402"^^xsd:dateTime ;
    ns1:object "Transforms audio signals from one form to another."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/21a4b3b0fe861021548d89e241eb815b3c147c6d12ec9eade6925be45bc78650> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "te"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "lv"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/public_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.782338"^^xsd:dateTime ;
    ns1:object "{'name': 'Alec Radford', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.809304"^^xsd:dateTime ;
    ns1:object "{'name': 'Alexandre Sablayrolles', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6610167920589447"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The context provided does not contain any information about the author of the text."^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.830046"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7062dc4cfa463be9c92783a4d2c8abb9a4b37f71f4caef7c07cd6787e1843ed> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.810824"^^xsd:dateTime ;
    ns1:object "{'name': 'Lélio Renard Lavaud', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/8c29861cff92b34ba1887aa267cf20a6a2124ec092919b27c388fb31ecb5f269> ;
    ns1:predicate <http://w3id.org/fair4ml/sharedBy> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.152892"^^xsd:dateTime ;
    ns1:object schema:ScholarlyArticle ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6029241979122162"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.803745"^^xsd:dateTime ;
    ns1:object "{'name': 'Slav Petrov', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/63c4690edf3557f17b07f48296b33ccc383956a845d01233d59d9e359bf38c99> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.144389"^^xsd:dateTime ;
    ns1:object schema:Person ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/125d01550d26a191f055cd53b0b7bf0298ef4a173496f10aa09a87ca1b3fdcbe> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/lachiewyoung/test-mistral-7b/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4667704701423645"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:softwareHelp ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.842608"^^xsd:dateTime ;
    ns1:object "Creates concise summaries of longer texts."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/251690051accbb99d763e77f3aed9b94caecf82b9e2db7c17f8adfca42a4ca39> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "si"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.073993"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "sample"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.866690"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5c6c7a9e81be05e126c2ff79f262747bcaa13dce4de3db78679e947f541d5911> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.795945"^^xsd:dateTime ;
    ns1:object "{'name': 'Angela Fan', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.126904"^^xsd:dateTime ;
    ns1:object "pytorch"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.811674"^^xsd:dateTime ;
    ns1:object "{'name': 'Thomas Wang', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fb09733dc3261eb13aa123f1d418af5be3d14c3a0d5b123fb23f1b9f5234a31> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "[{\"main_splits/split_name\":\"train\"},{\"main_splits/split_name\":\"test\"}]"^^rdf:JSON ;
    ns1:predicate <http://mlcommons.org/croissant/data> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main_splits> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/8e9892e571845c79509180a69a268f19c0592a4e975a5fd3e16f2059af61ea75> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.198292"^^xsd:dateTime ;
    ns1:object "DianaJin/sample"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/63c4690edf3557f17b07f48296b33ccc383956a845d01233d59d9e359bf38c99> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.383786"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/meta-llama"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/9c03090b68b1e45d6bebe9b9d1ea103b6a4c064ceb71f16f08a5ae59d9bac70e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Not available"^^xsd:string ;
    ns1:predicate schema:memoryRequirements ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/private_tests/input> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/time_limit> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.781051"^^xsd:dateTime ;
    ns1:object """We study the capabilities of speech processing systems trained simply to
predict large amounts of transcripts of audio on the internet. When scaled to
680,000 hours of multilingual and multitask supervision, the resulting models
generalize well to standard benchmarks and are often competitive with prior
fully supervised results but in a zero-shot transfer setting without the need
for any fine-tuning. When compared to humans, the models approach their
accuracy and robustness. We are releasing models and inference code to serve as
a foundation for further work on robust speech processing."""^^xsd:string ;
    ns1:predicate schema:abstract ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/cf_index"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_index> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/1aa60aa9719223ac8750af1366d4a56166214022d0d069d1412225070d1275b9> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.846237"^^xsd:dateTime ;
    ns1:object "Text to Speech"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6839f153ace4a5cfe1e9a1cdb43c1bfc2260f4c85be0608af5ec84a75a205d2c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.823319"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1f1b91c653f20f0cf893aeb65fa83459983d2cb51e18030488be0e30b0e6db67> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests/input> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/generated_tests> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'cf_rating' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_rating> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.793390"^^xsd:dateTime ;
    ns1:object "{'name': 'Rashi Rungta', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/87b927fef88a46248b3b208472aec7bfeb38667386b309f46772e26b40f6affb> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.871186"^^xsd:dateTime ;
    ns1:object "Toolkit for building, training, and fine-tuning GPU-accelerated conversational AI models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/6b75cb265aea0eff37651595203eec38a2a621d81df99e4cfcd5f30cef590384> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/DianaJin/sample/discussions> ;
    ns1:predicate <https://w3id.org/codemeta/issueTracker> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Dataset ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5ad4ea0a1adc915075db5ddcb934b366ce7b5457e888eac0c229b5478d60a36b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "arxiv:2310.06825"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.837336"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/85f0e69a70ce025a206d6ddbf78d989a3cabbdae215f2045df9b67b21a9d6780> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.830274"^^xsd:dateTime ;
    ns1:object "Imageto Video"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c7062dc4cfa463be9c92783a4d2c8abb9a4b37f71f4caef7c07cd6787e1843ed> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.870127"^^xsd:dateTime ;
    ns1:object "Core ML"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/2ae536499f90e7e5edcd87dddf0d258801cae8e7a2f82d8ce02361ef54e77c05> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/socratic/answer> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/RecordSet> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.833627"^^xsd:dateTime ;
    ns1:object "Classifies images into categories not seen during training."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/427579e1091b3a9a3bf55b54c4167319ee1e7fd37d7a1389722fcb73d6a8901c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.827061"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/25a48b7b32ec31051c00ea96f30d1637f216eb0ed7620da77d06c4637ab5da7f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.134416"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/65d71074238354144f600279f94efa203ecd00ca7b0c6df7d4041b8a3daa0c02> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.079105"^^xsd:dateTime ;
    ns1:object "meta-llama/Llama-2-7b-hf"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/35ddc796a6d136e9bf8810f1907a6a31657c5fb80bef078ab577c5edc3f59cc0> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6341075301170349"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.781700"^^xsd:dateTime ;
    ns1:object "cs.CL"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.878305"^^xsd:dateTime ;
    ns1:object "Sequence modeling toolkit for training custom models for translation, summarization, and other text generation tasks."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4acb0244517b271c7719eadb638a9049f7dfa43a14bf6eb119d83c2dbc6d856f> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "split_name"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.795463"^^xsd:dateTime ;
    ns1:object "{'name': 'Zheng Yan', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.863297"^^xsd:dateTime ;
    ns1:object "Collection of SOTA computer vision models, layers, utilities, and optimizers for training and inferencing."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3135ad7c615e157f80ecab1b96d4167d2e6c147b2e563721a652a5b56845418c> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7004575133323669"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The primary intended users of these models are AI researchers studying robustness, generalization, capabilities, biases, and constraints of the current model."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "hu"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.825054"^^xsd:dateTime ;
    ns1:object "Converts image content into textual descriptions or captions."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/49bf7b39c8a2a4cb84ab43bc3c320de6e0c1da1253ebf022a5d0a84737581119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.785210"^^xsd:dateTime ;
    ns1:object "{'name': 'Louis Martin', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/split> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.136461"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/Dataset> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5dc0f178a97885f8a2e4615a52b4e2b4f27d25a59fce78191c80557258b63498> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/question> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.41138510406017303"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:funding ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.5842035412788391"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the Whisper model are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/81c4f52fcccf6ef0d25453aedb7cebe30c7034e3b2fa752246d0e43da889a0e1> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Integer ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_rating> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'incorrect_solutions' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/incorrect_solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/untranslated_description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.828435"^^xsd:dateTime ;
    ns1:object "Image Segmentation"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f4f5c02149ef4c63e1abfb237a7efd73b36b96243fa20ee9a3b83ab914689b18> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/solutions/language"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/language> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.881625"^^xsd:dateTime ;
    ns1:object "Library for span-based named entity recognition using transformer models."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/119bd2aa6d51fb076ddf89b0c5c2536f1550ff5bf549b11a6c834340b0979a14> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.846846"^^xsd:dateTime ;
    ns1:object "Text to Audio"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/435f6e89d90ad4bd6be870aa7e1a66a9ce6bb4c201cdc1adf4aec7db47ff1148> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.883700"^^xsd:dateTime ;
    ns1:object "Neural building blocks for speaker diarization in Python, supporting voice activity detection and speaker embedding."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/b07372cae2aaf834044064c3f58684a47c8f4685d11fccf85dbb95dac4dc7141> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6928895115852356"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.135309"^^xsd:dateTime ;
    ns1:object "https://huggingface.co/datasets/taskmaster2"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4a958b2cddc6f3096d3a4e912c3bf694e8c132edcdb79366c6a34dff81cbbc7b> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "dataset:djaym7/wiki_dialog"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6919327080249786"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The intended use of Llama 2 is for commercial and research use in English."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'options' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/options> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "The name of the split."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7004575133323669"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "The primary intended users of these models are AI researchers studying robustness, generalization, capabilities, biases, and constraints of the current model."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/intendedUse> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.857196"^^xsd:dateTime ;
    ns1:object "TensorBoard"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/974df5e3234c3601080dac4fa96eebf5d19d40df41e9e30cb61084d9fbefea1e> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "pa"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.099061"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79cf083846a8329d2912fcd7f375233c37a54917af291bb945f0b58bc735b8ad> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw_splits/split_name> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/DianaJin/sample> ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/df4982af808ead1a57663cc7a83e60059f6a6ae1baf83a270fdf8bdfef11a3de> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7286122441291809"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/usageInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:57"^^xsd:dateTime ;
    ns1:object "plain_text"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/plain_text> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/input_file"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/input_file> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6677646636962891"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.401440"^^xsd:dateTime ;
    ns1:object "meta"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/759dcfce11b186065b46fb94fef1c569da9001c123861ba72ba0708e554bd6c4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "dataset:DianaJin/sample"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.836184"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/fd4e2f28de7e36539eda0f2e74a9e9b30f10d77fee3b927dc3aa5419c43369da> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2023-08-06T05:09:03+00:00"^^xsd:dateTime ;
    ns1:predicate schema:dateModified ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.815279"^^xsd:dateTime ;
    ns1:object "Optimized backend for deploying and serving Large Language Models (LLMs) with high performance."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f59cf55f3a86acf0bcfc020eac552a72c13f1212154211a7bf30504548661f8d> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.418839"^^xsd:dateTime ;
    ns1:object "https://arxiv.org/abs/2212.04356"^^xsd:anyURI ;
    ns1:predicate schema:url ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4978265315294266"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/buildInstructions> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "Information not found"^^xsd:string ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/ff7e16d40feb7d4c633834d7dbc7d52497c682b7bfaf2c103d82af436916cd86> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "dataset:quasc"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.8346182405948639"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The potential risks associated with the model Flan-T5 are not explicitly mentioned in the provided context."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/modelRisks> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'description' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/description> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/9773f8d647166503d14c7a05030b47d6b1610f17bdd55e8c98cb4fc2b13a3379> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "oc"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/split"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "az"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.126733"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.791600"^^xsd:dateTime ;
    ns1:object "{'name': 'Yinghai Lu', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.44454623758792877"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "The operating systems supported by the software are Windows 7, OSX 10.6, and Android 1.6."^^xsd:string ;
    ns1:predicate schema:operatingSystem ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/solutions> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "ml"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/tokenized/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/name> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'cf_contest_id' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/cf_contest_id> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "System" ;
    ns1:extractionTime "2025-04-29T09:27:58.107928"^^xsd:dateTime ;
    ns1:object <http://w3id.org/fair4ml/ML_Model> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/3e9a4e1232f617b33fa8460d6c142ee49e69eb5c55acfd1e618d58e7495955e8> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "id"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.799218"^^xsd:dateTime ;
    ns1:object "{'name': 'Shayne Longpre', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/09f6dc26b905f28e537bf583c1483f6a6629d85e5d00dc7b22aab54f60cdd7b3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.882459"^^xsd:dateTime ;
    ns1:object schema:DefinedTerm ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/c0097ccf601f8114782f9c0c86386c6c995d5b2e12eddde21fdd7251761ee1fd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/openai/whisper-base/blob/main/README.md> ;
    ns1:predicate <https://w3id.org/codemeta/readme> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6963362097740173"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/validatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> ;
    ns1:predicate <http://w3id.org/fair4ml/evaluatedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.867724"^^xsd:dateTime ;
    ns1:object "ESPnet"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e9f8dc5efdf686d003f27fc61cf3a0b9e5dbed094499e8e3332f5c535d686f3> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "bn"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.879896"^^xsd:dateTime ;
    ns1:object "PyTorch-based audio source separation toolkit for researchers."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/771e059c7890ae196a3227d36771c27f019638d33a819ca19bef2ae302b92b44> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.7292119562625885"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:conditionsOfAccess ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/difficulty"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/difficulty> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.850150"^^xsd:dateTime ;
    ns1:object "Identifies when someone is speaking in an audio stream."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1759562ba5af131b8ba1cdb4e06a2cee5c1ebff35971610e6ef2eb585b413ef7> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlcommons.org/croissant/Field> ;
    ns1:predicate rdf:type ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/rationale> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <https://huggingface.co/meta-llama/Llama-2-7b-hf> ;
    ns1:predicate schema:archivedAt ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/948f12027813055af3dcb960da569e2eae02f39632eb0850253a6c353ee892cd> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.791110"^^xsd:dateTime ;
    ns1:object "{'name': 'Thibaut Lavril', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.854374"^^xsd:dateTime ;
    ns1:object "TensorFlow"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/f38a4d1014d3cc9f5709e2ecd78f5809ca2397dd49ed420aa2e4a0ab4210a289> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.787169"^^xsd:dateTime ;
    ns1:object "{'name': 'Lukas Blecher', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/eecd2795372f69eac8c76964a6326966b25f090f48f4e8b55cbde405af29a119> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "arXiv_API" ;
    ns1:extractionTime "2025-04-29T09:27:58.783054"^^xsd:dateTime ;
    ns1:object "{'name': 'Christine McLeavey', 'affiliation': None}"^^xsd:string ;
    ns1:predicate schema:author ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "Column 'solutions' from the Hugging Face parquet file."@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions/solution> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/f57740f97820ddb55f90898c07a60a736e9a9030d5eac125af5c595ad0638c8f> ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1fc2708525372d5836abcd73949e9f28c19aa06493ccf6582b599779599dd212> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object """openai/gsm8k - 'socratic' subset

Additional information:
- 2 splits: train, test"""@en ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/socratic> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "test-mistral-7b"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/5e024d2fef42dd138d6c91ca7012fa0cb6a7c9b768dddc020929481a5d411f33> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "gu"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "fo"^^xsd:string ;
    ns1:predicate schema:keywords ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.850885"^^xsd:dateTime ;
    ns1:object "Categorizes rows in tabular data into predefined classes."^^xsd:string ;
    ns1:predicate schema:description ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/4eaeba2a8985fdb21e18ca1e967f067a345c0498ed10fc3e5e9ba95e39876cab> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.4712301790714264"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:17:40"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate schema:distribution ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/e078bed1369c8c5fcce2b7a45592d476d0658167bd45796ebb54e7af3d414ab4> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "raw/split"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/raw/split> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/79549f00e6767e7c56b491b734b5ec351d3faaae4afc546b64c29d0146128a68> ;
    ns1:predicate <https://w3id.org/codemeta/referencePublication> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/71fca9a99f0a6b21e4190b00f3deaecb6263287540aeefc8857cd9ae9ef6b603> .

[] a ns1:StatementMetadata ;
    ns1:confidence "0.6479559242725372"^^xsd:float ;
    ns1:extractionMethod "GenQA (Context: Alibaba-NLP/gte-Qwen2-1.5B-instruct, Answer: Qwen/Qwen2.5-3B)" ;
    ns1:extractionTime "2025-04-29T09:22:47"^^xsd:dateTime ;
    ns1:object "Information not found."^^xsd:string ;
    ns1:predicate <http://w3id.org/fair4ml/ethicalLegalSocial> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.882022"^^xsd:dateTime ;
    ns1:object "paddlenlp"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/956922acae22f21b82ce000e45d4739baf3f94e8b6eb2825a93166a8ccfc2fbf> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object "default/source"@en ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/source> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/ba52d56993d4b3a19ff2ae9a283e7057fc5503a3a3eecc69e091547b776282b4> ;
    ns1:predicate <http://w3id.org/fair4ml/testedOn> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Collected by MLENTORY team" ;
    ns1:extractionTime "2025-04-29T09:27:58.832644"^^xsd:dateTime ;
    ns1:object "Text to Video"^^xsd:string ;
    ns1:predicate schema:name ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/cba5458c023bd0e333fefb47511914b963716a71b0356b435370871727585038> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object schema:Text ;
    ns1:predicate <http://mlcommons.org/croissant/dataType> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/main/answer> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_dataset" ;
    ns1:extractionTime "2025-04-29T09:16:55"^^xsd:dateTime ;
    ns1:object "2022-10-21T09:59:24+00:00"^^xsd:dateTime ;
    ns1:predicate schema:datePublished ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/1eb8c8e4581f920f5c0585f4ccb2c46299ab8fff99ae7f849732244d66b50299> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/solutions/solution> ;
    ns1:predicate <http://mlcommons.org/croissant/subField> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default/solutions> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Downloaded_from_HF_Croissant_endpoint" ;
    ns1:extractionTime "2025-04-29T09:27:52"^^xsd:dateTime ;
    ns1:object <http://mlentory.zbmed.de/mlentory_graph/default/private_tests> ;
    ns1:predicate <http://mlcommons.org/croissant/field> ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/default> .

[] a ns1:StatementMetadata ;
    ns1:confidence "1.0"^^xsd:float ;
    ns1:extractionMethod "Parsed_from_HF_tags" ;
    ns1:extractionTime "2025-04-29T09:17:41"^^xsd:dateTime ;
    ns1:object "el"^^xsd:string ;
    ns1:predicate schema:inLanguage ;
    ns1:subject <http://mlentory.zbmed.de/mlentory_graph/20487243c0b0e65762743693b2d870a47dcbe2f9e0724478c8d789be5bb51032> .


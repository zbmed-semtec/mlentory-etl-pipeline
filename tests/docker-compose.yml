version: "3.8" 

services:
  test:
    profiles:
      - local
    container_name: local_test
    # environment:
    #   - VIRTUOSO_CONTAINER_NAME=test_virtuoso_1
    build: 
      context: ../
      dockerfile: ./tests/Dockerfile.local  # Path to tests Dockerfile
    # Define volumes to mount extractor scripts or dependencies
    volumes:
      - ./unit:/app_test/unit
      - ./fixtures:/app_test/fixtures
      - ./integration:/app_test/integration
      - ./config:/app_test/config
      - ../code/extractors:/app_test/extractors
      - ../code/transform:/app_test/transform
      - ../code/load:/app_test/load

      - /var/run/docker.sock:/var/run/docker.sock
    # env_file:
    #   - fileName: .env
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: all
            capabilities: [gpu]
    dns:
      - 1.1.1.1

    # Uncomment this line to test the script
    command: ["tail", "-f", "/dev/null"]


  ci_test:
    profiles:
      - ci_test
    container_name: ci_test
    build: 
      context: ../
      dockerfile: ./tests/Dockerfile.remote  # Path to test Dockerfile
    volumes:
      - ./unit:/app_test/unit
      - ./fixtures:/app_test/fixtures
      - ./integration:/app_test/integration
      - ./config:/app_test/config
      - ../code/extractors:/app_test/extractors
      - ../code/transform:/app_test/transform
      - ../code/load:/app_test/load

      - /var/run/docker.sock:/var/run/docker.sock
    dns:
      - 1.1.1.1
    # env_file:
    #   - fileName: .env
    command: ["tail", "-f", "/dev/null"]

  postgres:
    profiles:
        - ci_test
        - local
    image: postgres:14.1-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_DB
    ports:
      - '5432:5432'
    volumes:
      - ./integration/dbs/postgres/sql_files/test_init.sql:/docker-entrypoint-initdb.d/init.sql   
  
  virtuoso:
    profiles:
        - ci_test
        - local
    image: openlink/virtuoso-opensource-7:latest
    hostname: virtuoso
    container_name: virtuoso
    ports:
      - "1111:1111"
      - "8890:8890"
    environment:
      DBA_PASSWORD: my_strong_password
    volumes:
      - ./integration/dbs/virtuoso:/opt/virtuoso-opensource/database

  elastic:
    profiles:
        - ci_test
        - local
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elastic
    hostname: elastic
    # privileged: true
    environment:
      - node.name=elastic
      - "transport.host=localhost"
      - "bootstrap.system_call_filter=false"
      # - discovery.type=single-node
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=elastic
      - bootstrap.memory_lock=true
      # - node.max_local_storage_nodes=2
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./integration/dbs/elastic:/var/lib/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    # command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
# networks:
#   my-macvlan-net:
#     external: true
#     name: my-macvlan-net
#   host:
#     external: true


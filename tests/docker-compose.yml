version: "3.8" 

services:
  test:
    depends_on:
        - mysql
    profiles:
      - test
    build: 
      context: .
      dockerfile: ./Dockerfile.local  # Path to tests Dockerfile
    # Define volumes to mount extractor scripts or dependencies
    volumes:
      - .:/app_test/tests
      - ../code/transform:/app_test/transform
      - ../code/extractors:/app_test/extractors
      - ../code/load:/app_test/load
      - ../data/transform_queue:/app_test/transform_queue
      - ../data/load_queue:/app_test/load_queue
      - ../code/config_data:/app_test/config_data
      - /var/run/docker.sock:/var/run/docker.sock
    dns:
      - 1.1.1.1

    # Uncomment this line to test the script
    command: ["tail", "-f", "/dev/null"]


  ci_test:
    depends_on:
      - mysql
    profiles:
      - ci_test
    build: 
      context: .
      dockerfile: ./Dockerfile.remote  # Path to test Dockerfile
    # Define volumes to mount extractor scripts or dependencies
    volumes:
      - .:/app_test/tests
      - ../code/transform:/app_test/transform
      - ../code/extractors:/app_test/extractors
      - ../code/load:/app_test/load
      - ../data/transform_queue:/app_test/transform_queue
      - ../data/load_queue:/app_test/load_queue
      - ../code/config_data:/app_test/config_data
      - /var/run/docker.sock:/var/run/docker.sock
    dns:
      - 1.1.1.1
    # command: ["./tests/validate_tests.sh"]
    command: ["/bin/bash"]
    # command:
    #   - /bin/sh 
    #   - -c
    #   - |
    #     ls
    #     ./tests/wait-for-it.sh mysql:3306 --
    #     pytest
     
    # command: ["tail", "-f", "/dev/null"]

  mysql:
    profiles:
      - ci_test
      - test
    image: mysql:latest
    hostname: mysql
    environment:
      MYSQL_ROOT_PASSWORD: test_pass
      MYSQL_DATABASE: test_DB
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_pass
      MYSQL_USER_1: additional_user1
      MYSQL_PASSWORD_1: password1
      MYSQL_USER_2: additional_user2
      MYSQL_PASSWORD_2: password2
    volumes:
    - ../code/load/sql_files/test_init.sql:/docker-entrypoint-initdb.d/init.sql
    # - ../data/mysql_test_data:/var/lib/mysql
    ports:
      - "42333:3306"
      - "33060:33060"
    command: --init-file /docker-entrypoint-initdb.d/init.sql
  
  virtuoso:
    profiles:
        - ci_test
        - test
    image: openlink/virtuoso-opensource-7:latest
    hostname: virtuoso
    ports:
      - "1111:1111"
      - "8890:8890"
    environment:
      DBA_PASSWORD: my_strong_password
    volumes:
      - ./Test_files/load_files/virtuoso_data:/opt/virtuoso-opensource/database

  elastic:
    profiles:
        - ci_test
        - test
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    container_name: elastic
    hostname: elastic
    # privileged: true
    environment:
      - node.name=elastic
      # - discovery.type=single-node
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=elastic
      - bootstrap.memory_lock=true
      - node.max_local_storage_nodes=2
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./Test_files/load_files/elastic:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      # - 9300:9300
    # command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
# networks:
#   my-macvlan-net:
#     external: true
#     name: my-macvlan-net
#   host:
#     external: true

